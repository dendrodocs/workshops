[
  {
    "FullName": "Pitstop.Application.CustomerManagementAPI.Controllers.CustomersController",
    "BaseTypes": [
      "Microsoft.AspNetCore.Mvc.Controller"
    ],
    "Modifiers": 2,
    "Attributes": [
      {
        "Type": "Microsoft.AspNetCore.Mvc.RouteAttribute",
        "Name": "Route",
        "Arguments": [
          {
            "Name": "template",
            "Type": "string",
            "Value": "/api/[controller]"
          }
        ]
      }
    ],
    "Fields": [
      {
        "Type": "Pitstop.Infrastructure.Messaging.IMessagePublisher",
        "Name": "_messagePublisher"
      },
      {
        "Type": "Pitstop.CustomerManagementAPI.DataAccess.CustomerManagementDBContext",
        "Name": "_dbContext"
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "Pitstop.CustomerManagementAPI.DataAccess.CustomerManagementDBContext",
            "Name": "dbContext"
          },
          {
            "Type": "Pitstop.Infrastructure.Messaging.IMessagePublisher",
            "Name": "messagePublisher"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_dbContext",
            "Operator": "=",
            "Right": "dbContext"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_messagePublisher",
            "Operator": "=",
            "Right": "messagePublisher"
          }
        ],
        "Name": "CustomersController",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Name": "GetAllAsync",
        "Modifiers": 258,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpGetAttribute",
            "Name": "HttpGet"
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "Ok(await _dbContext.Customers.ToListAsync())"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
            "Name": "Ok",
            "Arguments": [
              {
                "Type": "System.Collections.Generic.List\u003CPitstop.CustomerManagementAPI.Model.Customer\u003E",
                "Text": "await _dbContext.Customers.ToListAsync()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions",
            "Name": "ToListAsync"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "customerId"
          }
        ],
        "Name": "GetByCustomerId",
        "Modifiers": 258,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpGetAttribute",
            "Name": "HttpGet"
          },
          {
            "Type": "Microsoft.AspNetCore.Mvc.RouteAttribute",
            "Name": "Route",
            "Arguments": [
              {
                "Name": "{customerId}",
                "Type": "string",
                "Value": "{customerId}"
              },
              {
                "Name": "Name",
                "Type": "string",
                "Value": "GetByCustomerId"
              }
            ]
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions",
            "Name": "FirstOrDefaultAsync",
            "Arguments": [
              {
                "Type": "System.Linq.Expressions.Expression\u003CSystem.Func\u003CPitstop.CustomerManagementAPI.Model.Customer, bool\u003E\u003E",
                "Text": "c =\u003E c.CustomerId == customerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "customer == null",
                "Statements": [
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "NotFound()"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
                    "Name": "NotFound"
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "Ok(customer)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
            "Name": "Ok",
            "Arguments": [
              {
                "Type": "Pitstop.CustomerManagementAPI.Model.Customer",
                "Text": "customer"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.CustomerManagementAPI.Commands.RegisterCustomer",
            "Name": "command",
            "Attributes": [
              {
                "Type": "Microsoft.AspNetCore.Mvc.FromBodyAttribute",
                "Name": "FromBody"
              }
            ]
          }
        ],
        "Name": "RegisterAsync",
        "Modifiers": 258,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpPostAttribute",
            "Name": "HttpPost"
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "ModelState.IsValid",
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.CustomerManagementAPI.Mappers.Mappers",
                    "Name": "MapToCustomer"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Microsoft.EntityFrameworkCore.DbSet\u003CPitstop.CustomerManagementAPI.Model.Customer\u003E",
                    "Name": "Add",
                    "Arguments": [
                      {
                        "Type": "Pitstop.CustomerManagementAPI.Model.Customer",
                        "Text": "customer"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Microsoft.EntityFrameworkCore.DbContext",
                    "Name": "SaveChangesAsync"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.CustomerManagementAPI.Mappers.Mappers",
                    "Name": "MapToCustomerRegistered"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.Infrastructure.Messaging.IMessagePublisher",
                    "Name": "PublishMessageAsync",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "e.MessageType"
                      },
                      {
                        "Type": "Pitstop.CustomerManagementAPI.Events.CustomerRegistered",
                        "Text": "e"
                      },
                      {
                        "Type": "string",
                        "Text": ""
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "CreatedAtRoute(\u0022GetByCustomerId\u0022, new { customerId = customer.CustomerId }, customer)"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
                    "Name": "CreatedAtRoute",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "GetByCustomerId"
                      },
                      {
                        "Type": "\u003Canonymous type: string customerId\u003E",
                        "Text": "new { customerId = customer.CustomerId }"
                      },
                      {
                        "Type": "Pitstop.CustomerManagementAPI.Model.Customer",
                        "Text": "customer"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "BadRequest()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
            "Name": "BadRequest"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary",
            "Name": "AddModelError",
            "Arguments": [
              {
                "Type": "string",
                "Text": ""
              },
              {
                "Type": "string",
                "Text": "Unable to save changes. Try again, and if the problem persists see your system administrator."
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "StatusCode(StatusCodes.Status500InternalServerError)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
            "Name": "StatusCode",
            "Arguments": [
              {
                "Type": "int",
                "Text": "StatusCodes.Status500InternalServerError"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.AuditlogService.AuditLogWorker",
    "BaseTypes": [
      "Microsoft.Extensions.Hosting.IHostedService",
      "Pitstop.Infrastructure.Messaging.IMessageHandlerCallback"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "Pitstop.Infrastructure.Messaging.IMessageHandler",
        "Name": "_messageHandler"
      },
      {
        "Type": "string",
        "Name": "_logPath"
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "Pitstop.Infrastructure.Messaging.IMessageHandler",
            "Name": "messageHandler"
          },
          {
            "Type": "Pitstop.AuditlogService.AuditlogWorkerConfig",
            "Name": "config"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_messageHandler",
            "Operator": "=",
            "Right": "messageHandler"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_logPath",
            "Operator": "=",
            "Right": "config.LogPath"
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "!Directory.Exists(_logPath)",
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.IO.Directory",
                    "Name": "CreateDirectory",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "_logPath"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ],
        "Name": "AuditLogWorker",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "System.Threading.CancellationToken",
            "Name": "cancellationToken"
          }
        ],
        "Name": "StartAsync",
        "Modifiers": 2,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.Infrastructure.Messaging.IMessageHandler",
            "Name": "Start",
            "Arguments": [
              {
                "Type": "Pitstop.AuditlogService.AuditLogWorker",
                "Text": "this"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "Task.CompletedTask"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "System.Threading.CancellationToken",
            "Name": "cancellationToken"
          }
        ],
        "Name": "StopAsync",
        "Modifiers": 2,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.Infrastructure.Messaging.IMessageHandler",
            "Name": "Stop"
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "Task.CompletedTask"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "messageType"
          },
          {
            "Type": "string",
            "Name": "message"
          }
        ],
        "Name": "HandleMessageAsync",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task\u003Cbool\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.DateTime",
            "Name": "ToString",
            "Arguments": [
              {
                "Type": "string",
                "Text": "yyyy-MM-dd HH:mm:ss:ffffff"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.IO.Path",
            "Name": "Combine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_logPath"
              },
              {
                "Type": "string",
                "Text": "{DateTime.Now.ToString(\u0022yyyy-MM-dd\u0022)}-auditlog.txt"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.DateTime",
            "Name": "ToString",
            "Arguments": [
              {
                "Type": "string",
                "Text": "yyyy-MM-dd"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.IO.File",
            "Name": "AppendAllTextAsync",
            "Arguments": [
              {
                "Type": "string",
                "Text": "logFile"
              },
              {
                "Type": "string",
                "Text": "logMessage"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Information",
            "Arguments": [
              {
                "Type": "string",
                "Text": "{MessageType} - {Body}"
              },
              {
                "Type": "string",
                "Text": "messageType"
              },
              {
                "Type": "string",
                "Text": "message"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "true"
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.AuditlogService.AuditlogWorkerConfig",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "string",
        "Name": "LogPath",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "PitStop.Controllers.HomeController",
    "BaseTypes": [
      "Microsoft.AspNetCore.Mvc.Controller"
    ],
    "Modifiers": 2,
    "Methods": [
      {
        "Name": "Index",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpGetAttribute",
            "Name": "HttpGet"
          }
        ],
        "ReturnType": "Microsoft.AspNetCore.Mvc.IActionResult",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "View()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
            "Name": "View"
          }
        ]
      },
      {
        "Name": "About",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpGetAttribute",
            "Name": "HttpGet"
          }
        ],
        "ReturnType": "Microsoft.AspNetCore.Mvc.IActionResult",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "View()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
            "Name": "View"
          }
        ]
      },
      {
        "Name": "Error",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpGetAttribute",
            "Name": "HttpGet"
          }
        ],
        "ReturnType": "Microsoft.AspNetCore.Mvc.IActionResult",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "View()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
            "Name": "View"
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.CustomerManagementAPI.Commands.RegisterCustomer",
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.Command"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "string",
        "Name": "CustomerId",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "Name",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "Address",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "PostalCode",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "City",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "TelephoneNumber",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "EmailAddress",
        "Modifiers": 130
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          },
          {
            "Type": "string",
            "Name": "customerId"
          },
          {
            "Type": "string",
            "Name": "name"
          },
          {
            "Type": "string",
            "Name": "address"
          },
          {
            "Type": "string",
            "Name": "postalCode"
          },
          {
            "Type": "string",
            "Name": "city"
          },
          {
            "Type": "string",
            "Name": "telephoneNumber"
          },
          {
            "Type": "string",
            "Name": "emailAddress"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "CustomerId",
            "Operator": "=",
            "Right": "customerId"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Name",
            "Operator": "=",
            "Right": "name"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Address",
            "Operator": "=",
            "Right": "address"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "PostalCode",
            "Operator": "=",
            "Right": "postalCode"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "City",
            "Operator": "=",
            "Right": "city"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "TelephoneNumber",
            "Operator": "=",
            "Right": "telephoneNumber"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "EmailAddress",
            "Operator": "=",
            "Right": "emailAddress"
          }
        ],
        "Name": "RegisterCustomer",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.CustomerManagementAPI.DataAccess.CustomerManagementDBContext",
    "BaseTypes": [
      "Microsoft.EntityFrameworkCore.DbContext"
    ],
    "Modifiers": 2,
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "Microsoft.EntityFrameworkCore.DbContextOptions\u003CPitstop.CustomerManagementAPI.DataAccess.CustomerManagementDBContext\u003E",
            "Name": "options"
          }
        ],
        "Name": "CustomerManagementDBContext",
        "Modifiers": 2
      }
    ],
    "Properties": [
      {
        "Type": "Microsoft.EntityFrameworkCore.DbSet\u003CPitstop.CustomerManagementAPI.Model.Customer\u003E",
        "Name": "Customers",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "builder"
          }
        ],
        "Name": "OnModelCreating",
        "Modifiers": 72,
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder\u003CPitstop.CustomerManagementAPI.Model.Customer\u003E",
            "Name": "HasKey",
            "Arguments": [
              {
                "Type": "System.Linq.Expressions.Expression\u003CSystem.Func\u003CPitstop.CustomerManagementAPI.Model.Customer, object?\u003E\u003E",
                "Text": "m =\u003E m.CustomerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "Entity\u003CCustomer\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "Name": "ToTable",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Customer"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "Entity\u003CCustomer\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.DbContext",
            "Name": "OnModelCreating",
            "Arguments": [
              {
                "Type": "Microsoft.EntityFrameworkCore.ModelBuilder",
                "Text": "builder"
              }
            ]
          }
        ]
      },
      {
        "Name": "MigrateDB",
        "Modifiers": 2,
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.Policy",
            "Name": "Execute",
            "Arguments": [
              {
                "Type": "System.Action",
                "Text": "() =\u003E Database.Migrate()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.RetrySyntax",
            "Name": "WaitAndRetry",
            "Arguments": [
              {
                "Type": "int",
                "Text": "10"
              },
              {
                "Type": "System.Func\u003Cint, System.TimeSpan\u003E",
                "Text": "r =\u003E TimeSpan.FromSeconds(10)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.Policy",
            "Name": "Handle\u003CException\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.TimeSpan",
            "Name": "FromSeconds",
            "Arguments": [
              {
                "Type": "int",
                "Text": "10"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions",
            "Name": "Migrate"
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.CustomerManagementAPI.DataAccess.CustomerManagementDBContextModelSnapshot",
    "BaseTypes": [
      "Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot"
    ],
    "Modifiers": 32769,
    "Attributes": [
      {
        "Type": "Microsoft.EntityFrameworkCore.Infrastructure.DbContextAttribute",
        "Name": "DbContext",
        "Arguments": [
          {
            "Name": "contextType",
            "Type": "System.Type",
            "Value": "typeof(CustomerManagementDBContext)"
          }
        ]
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "modelBuilder"
          }
        ],
        "Name": "BuildModel",
        "Modifiers": 72,
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "HasAnnotation",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Relational:MaxIdentifierLength"
              },
              {
                "Type": "int",
                "Text": "128"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "HasAnnotation",
            "Arguments": [
              {
                "Type": "string",
                "Text": "ProductVersion"
              },
              {
                "Type": "string",
                "Text": "6.0.1"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions",
            "Name": "UseIdentityColumns",
            "Arguments": [
              {
                "Type": "Microsoft.EntityFrameworkCore.ModelBuilder",
                "Text": "modelBuilder"
              },
              {
                "Type": "long",
                "Text": "1"
              },
              {
                "Type": "int",
                "Text": "1"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "Entity",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Pitstop.CustomerManagementAPI.Model.Customer"
              },
              {
                "Type": "System.Action\u003CMicrosoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder\u003E",
                "Text": "b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022CustomerId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Address\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022City\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022EmailAddress\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022PostalCode\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022TelephoneNumber\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.HasKey(\u0022CustomerId\u0022);\r\n\r\n                    b.ToTable(\u0022Customer\u0022, (string)null);\r\n                }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "Name": "HasColumnType",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(450)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "CustomerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "Name": "HasColumnType",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(max)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Address"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "Name": "HasColumnType",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(max)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "City"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "Name": "HasColumnType",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(max)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "EmailAddress"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "Name": "HasColumnType",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(max)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Name"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "Name": "HasColumnType",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(max)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "PostalCode"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "Name": "HasColumnType",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(max)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "TelephoneNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "HasKey",
            "Arguments": [
              {
                "Type": "string",
                "Text": "CustomerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "Name": "ToTable",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Customer"
              },
              {
                "Type": "string",
                "Text": "(string)null"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.CustomerManagementAPI.DataAccess.v1",
    "BaseTypes": [
      "Microsoft.EntityFrameworkCore.Migrations.Migration"
    ],
    "Modifiers": 32770,
    "Attributes": [
      {
        "Type": "Microsoft.EntityFrameworkCore.Infrastructure.DbContextAttribute",
        "Name": "DbContext",
        "Arguments": [
          {
            "Name": "contextType",
            "Type": "System.Type",
            "Value": "typeof(CustomerManagementDBContext)"
          }
        ]
      },
      {
        "Type": "Microsoft.EntityFrameworkCore.Migrations.MigrationAttribute",
        "Name": "Migration",
        "Arguments": [
          {
            "Name": "id",
            "Type": "string",
            "Value": "20220123135622_v1"
          }
        ]
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder",
            "Name": "migrationBuilder"
          }
        ],
        "Name": "Up",
        "Modifiers": 72,
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder",
            "Name": "CreateTable",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Customer"
              },
              {
                "Type": "System.Func\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder, \u003Canonymous type: Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E CustomerId, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Name, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Address, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E PostalCode, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E City, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E TelephoneNumber, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E EmailAddress\u003E\u003E",
                "Text": "table =\u003E new\r\n                {\r\n                    CustomerId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    Name = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    Address = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    PostalCode = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    City = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    TelephoneNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    EmailAddress = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                }"
              },
              {
                "Type": "System.Action\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder\u003C\u003Canonymous type: Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E CustomerId, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Name, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Address, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E PostalCode, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E City, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E TelephoneNumber, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E EmailAddress\u003E\u003E\u003E",
                "Text": "table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_Customer\u0022, x =\u003E x.CustomerId);\r\n                }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder",
            "Name": "Column\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(450)"
              },
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder",
            "Name": "Column\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(max)"
              },
              {
                "Type": "bool",
                "Text": "true"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder",
            "Name": "Column\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(max)"
              },
              {
                "Type": "bool",
                "Text": "true"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder",
            "Name": "Column\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(max)"
              },
              {
                "Type": "bool",
                "Text": "true"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder",
            "Name": "Column\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(max)"
              },
              {
                "Type": "bool",
                "Text": "true"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder",
            "Name": "Column\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(max)"
              },
              {
                "Type": "bool",
                "Text": "true"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder",
            "Name": "Column\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(max)"
              },
              {
                "Type": "bool",
                "Text": "true"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder\u003C\u003Canonymous type: Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E CustomerId, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Name, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Address, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E PostalCode, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E City, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E TelephoneNumber, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E EmailAddress\u003E\u003E",
            "Name": "PrimaryKey",
            "Arguments": [
              {
                "Type": "string",
                "Text": "PK_Customer"
              },
              {
                "Type": "System.Linq.Expressions.Expression\u003CSystem.Func\u003C\u003Canonymous type: Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E CustomerId, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Name, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Address, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E PostalCode, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E City, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E TelephoneNumber, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E EmailAddress\u003E, object\u003E\u003E",
                "Text": "x =\u003E x.CustomerId"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder",
            "Name": "migrationBuilder"
          }
        ],
        "Name": "Down",
        "Modifiers": 72,
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder",
            "Name": "DropTable",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Customer"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "modelBuilder"
          }
        ],
        "Name": "BuildTargetModel",
        "Modifiers": 72,
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "HasAnnotation",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Relational:MaxIdentifierLength"
              },
              {
                "Type": "int",
                "Text": "128"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "HasAnnotation",
            "Arguments": [
              {
                "Type": "string",
                "Text": "ProductVersion"
              },
              {
                "Type": "string",
                "Text": "6.0.1"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions",
            "Name": "UseIdentityColumns",
            "Arguments": [
              {
                "Type": "Microsoft.EntityFrameworkCore.ModelBuilder",
                "Text": "modelBuilder"
              },
              {
                "Type": "long",
                "Text": "1"
              },
              {
                "Type": "int",
                "Text": "1"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "Entity",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Pitstop.CustomerManagementAPI.Model.Customer"
              },
              {
                "Type": "System.Action\u003CMicrosoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder\u003E",
                "Text": "b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022CustomerId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Address\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022City\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022EmailAddress\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Name\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022PostalCode\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022TelephoneNumber\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.HasKey(\u0022CustomerId\u0022);\r\n\r\n                    b.ToTable(\u0022Customer\u0022, (string)null);\r\n                }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "Name": "HasColumnType",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(450)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "CustomerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "Name": "HasColumnType",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(max)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Address"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "Name": "HasColumnType",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(max)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "City"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "Name": "HasColumnType",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(max)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "EmailAddress"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "Name": "HasColumnType",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(max)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Name"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "Name": "HasColumnType",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(max)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "PostalCode"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "Name": "HasColumnType",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(max)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "TelephoneNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "HasKey",
            "Arguments": [
              {
                "Type": "string",
                "Text": "CustomerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "Name": "ToTable",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Customer"
              },
              {
                "Type": "string",
                "Text": "(string)null"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.CustomerManagementAPI.Events.CustomerRegistered",
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.Event"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "string",
        "Name": "CustomerId",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "Name",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "Address",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "PostalCode",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "City",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "TelephoneNumber",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "EmailAddress",
        "Modifiers": 130
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          },
          {
            "Type": "string",
            "Name": "customerId"
          },
          {
            "Type": "string",
            "Name": "name"
          },
          {
            "Type": "string",
            "Name": "address"
          },
          {
            "Type": "string",
            "Name": "postalCode"
          },
          {
            "Type": "string",
            "Name": "city"
          },
          {
            "Type": "string",
            "Name": "telephoneNumber"
          },
          {
            "Type": "string",
            "Name": "emailAddress"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "CustomerId",
            "Operator": "=",
            "Right": "customerId"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Name",
            "Operator": "=",
            "Right": "name"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Address",
            "Operator": "=",
            "Right": "address"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "PostalCode",
            "Operator": "=",
            "Right": "postalCode"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "City",
            "Operator": "=",
            "Right": "city"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "TelephoneNumber",
            "Operator": "=",
            "Right": "telephoneNumber"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "EmailAddress",
            "Operator": "=",
            "Right": "emailAddress"
          }
        ],
        "Name": "CustomerRegistered",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.CustomerManagementAPI.Mappers.Mappers",
    "Modifiers": 18,
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "Pitstop.CustomerManagementAPI.Commands.RegisterCustomer",
            "Name": "command"
          }
        ],
        "Name": "MapToCustomerRegistered",
        "Modifiers": 18,
        "ReturnType": "Pitstop.CustomerManagementAPI.Events.CustomerRegistered",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "new CustomerRegistered     (\r\n        System.Guid.NewGuid(),\r\n        command.CustomerId,\r\n        command.Name,\r\n        command.Address,\r\n        command.PostalCode,\r\n        command.City,\r\n        command.TelephoneNumber,\r\n        command.EmailAddress\r\n    )"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.CustomerManagementAPI.Events.CustomerRegistered",
            "Name": "CustomerRegistered",
            "Arguments": [
              {
                "Type": "System.Guid",
                "Text": "System.Guid.NewGuid()"
              },
              {
                "Type": "string",
                "Text": "command.CustomerId"
              },
              {
                "Type": "string",
                "Text": "command.Name"
              },
              {
                "Type": "string",
                "Text": "command.Address"
              },
              {
                "Type": "string",
                "Text": "command.PostalCode"
              },
              {
                "Type": "string",
                "Text": "command.City"
              },
              {
                "Type": "string",
                "Text": "command.TelephoneNumber"
              },
              {
                "Type": "string",
                "Text": "command.EmailAddress"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Guid",
            "Name": "NewGuid"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.CustomerManagementAPI.Commands.RegisterCustomer",
            "Name": "command"
          }
        ],
        "Name": "MapToCustomer",
        "Modifiers": 18,
        "ReturnType": "Pitstop.CustomerManagementAPI.Model.Customer",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "new Customer { CustomerId = command.CustomerId, Name = command.Name, Address = command.Address, PostalCode = command.PostalCode, City = command.City, TelephoneNumber = command.TelephoneNumber, EmailAddress = command.EmailAddress }"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.CustomerManagementAPI.Model.Customer",
            "Name": "Customer",
            "Arguments": [
              {
                "Type": "string",
                "Text": "CustomerId = command.CustomerId"
              },
              {
                "Type": "string",
                "Text": "Name = command.Name"
              },
              {
                "Type": "string",
                "Text": "Address = command.Address"
              },
              {
                "Type": "string",
                "Text": "PostalCode = command.PostalCode"
              },
              {
                "Type": "string",
                "Text": "City = command.City"
              },
              {
                "Type": "string",
                "Text": "TelephoneNumber = command.TelephoneNumber"
              },
              {
                "Type": "string",
                "Text": "EmailAddress = command.EmailAddress"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "CustomerId",
            "Operator": "=",
            "Right": "command.CustomerId"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Name",
            "Operator": "=",
            "Right": "command.Name"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Address",
            "Operator": "=",
            "Right": "command.Address"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "PostalCode",
            "Operator": "=",
            "Right": "command.PostalCode"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "City",
            "Operator": "=",
            "Right": "command.City"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "TelephoneNumber",
            "Operator": "=",
            "Right": "command.TelephoneNumber"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "EmailAddress",
            "Operator": "=",
            "Right": "command.EmailAddress"
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.CustomerManagementAPI.Model.Customer",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "string",
        "Name": "CustomerId",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "Name",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "Address",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "PostalCode",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "City",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "TelephoneNumber",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "EmailAddress",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.Infrastructure.Messaging.Command",
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.Message"
    ],
    "Modifiers": 2,
    "Constructors": [
      {
        "Name": "Command",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          }
        ],
        "Name": "Command",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "messageType"
          }
        ],
        "Name": "Command",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          },
          {
            "Type": "string",
            "Name": "messageType"
          }
        ],
        "Name": "Command",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.Infrastructure.Messaging.Configuration.Configuration",
    "Modifiers": 18,
    "Fields": [
      {
        "Type": "int",
        "Initializer": "5672",
        "Name": "DEFAULT_PORT",
        "Modifiers": 516
      },
      {
        "Type": "string",
        "Initializer": "/",
        "Name": "DEFAULT_VIRTUAL_HOST",
        "Modifiers": 20
      },
      {
        "Type": "string",
        "Name": "_host",
        "Modifiers": 20
      },
      {
        "Type": "string",
        "Name": "_virtualHost",
        "Modifiers": 20
      },
      {
        "Type": "string",
        "Name": "_userName",
        "Modifiers": 20
      },
      {
        "Type": "string",
        "Name": "_password",
        "Modifiers": 20
      },
      {
        "Type": "string",
        "Name": "_exchange",
        "Modifiers": 20
      },
      {
        "Type": "string",
        "Name": "_queue",
        "Modifiers": 20
      },
      {
        "Type": "string",
        "Name": "_routingKey",
        "Modifiers": 20
      },
      {
        "Type": "int",
        "Name": "_port",
        "Modifiers": 20
      },
      {
        "Type": "System.Collections.Generic.List\u003Cstring\u003E",
        "Name": "_errors",
        "Modifiers": 20
      },
      {
        "Type": "bool",
        "Name": "_isValid",
        "Modifiers": 20
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "Microsoft.Extensions.DependencyInjection.IServiceCollection",
            "Name": "services"
          },
          {
            "Type": "Microsoft.Extensions.Configuration.IConfiguration",
            "Name": "config"
          }
        ],
        "Name": "UseRabbitMQMessageHandler",
        "Modifiers": 18,
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.Infrastructure.Messaging.Configuration.Configuration",
            "Name": "GetRabbitMQSettings",
            "Arguments": [
              {
                "Type": "Microsoft.Extensions.Configuration.IConfiguration",
                "Text": "config"
              },
              {
                "Type": "string",
                "Text": "RabbitMQHandler"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions",
            "Name": "AddTransient\u003CIMessageHandler\u003E",
            "Arguments": [
              {
                "Type": "System.Func\u003CSystem.IServiceProvider, Pitstop.Infrastructure.Messaging.IMessageHandler\u003E",
                "Text": "_ =\u003E new RabbitMQMessageHandler(\r\n            _host, _virtualHost, _userName, _password, _exchange, _queue, _routingKey, _port)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.Infrastructure.Messaging.RabbitMQMessageHandler",
            "Name": "RabbitMQMessageHandler",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_host"
              },
              {
                "Type": "string",
                "Text": "_virtualHost"
              },
              {
                "Type": "string",
                "Text": "_userName"
              },
              {
                "Type": "string",
                "Text": "_password"
              },
              {
                "Type": "string",
                "Text": "_exchange"
              },
              {
                "Type": "string",
                "Text": "_queue"
              },
              {
                "Type": "string",
                "Text": "_routingKey"
              },
              {
                "Type": "int",
                "Text": "_port"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Microsoft.Extensions.DependencyInjection.IServiceCollection",
            "Name": "services"
          },
          {
            "Type": "Microsoft.Extensions.Configuration.IConfiguration",
            "Name": "config"
          }
        ],
        "Name": "UseRabbitMQMessagePublisher",
        "Modifiers": 18,
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.Infrastructure.Messaging.Configuration.Configuration",
            "Name": "GetRabbitMQSettings",
            "Arguments": [
              {
                "Type": "Microsoft.Extensions.Configuration.IConfiguration",
                "Text": "config"
              },
              {
                "Type": "string",
                "Text": "RabbitMQPublisher"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions",
            "Name": "AddTransient\u003CIMessagePublisher\u003E",
            "Arguments": [
              {
                "Type": "System.Func\u003CSystem.IServiceProvider, Pitstop.Infrastructure.Messaging.IMessagePublisher\u003E",
                "Text": "_ =\u003E new RabbitMQMessagePublisher(\r\n            _host, _virtualHost, _userName, _password, _exchange, _port)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.Infrastructure.Messaging.RabbitMQMessagePublisher",
            "Name": "RabbitMQMessagePublisher",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_host"
              },
              {
                "Type": "string",
                "Text": "_virtualHost"
              },
              {
                "Type": "string",
                "Text": "_userName"
              },
              {
                "Type": "string",
                "Text": "_password"
              },
              {
                "Type": "string",
                "Text": "_exchange"
              },
              {
                "Type": "int",
                "Text": "_port"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Microsoft.Extensions.Configuration.IConfiguration",
            "Name": "config"
          },
          {
            "Type": "string",
            "Name": "sectionName"
          }
        ],
        "Name": "GetRabbitMQSettings",
        "Modifiers": 20,
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_isValid",
            "Operator": "=",
            "Right": "true"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_errors",
            "Operator": "=",
            "Right": "new List\u003Cstring\u003E()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Collections.Generic.List\u003Cstring\u003E",
            "Name": "List\u003Cstring\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.Extensions.Configuration.IConfiguration",
            "Name": "GetSection",
            "Arguments": [
              {
                "Type": "string",
                "Text": "sectionName"
              }
            ]
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "!configSection.Exists()",
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.Infrastructure.Messaging.Configuration.InvalidConfigurationException",
                    "Name": "InvalidConfigurationException",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "$\u0022Required config-section \u0027{sectionName}\u0027 not found.\u0022"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.Infrastructure.Messaging.Configuration.Configuration",
            "Name": "DetermineHost",
            "Arguments": [
              {
                "Type": "Microsoft.Extensions.Configuration.IConfigurationSection",
                "Text": "configSection"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.Infrastructure.Messaging.Configuration.Configuration",
            "Name": "DetermineVirtualHost",
            "Arguments": [
              {
                "Type": "Microsoft.Extensions.Configuration.IConfigurationSection",
                "Text": "configSection"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.Infrastructure.Messaging.Configuration.Configuration",
            "Name": "DeterminePort",
            "Arguments": [
              {
                "Type": "Microsoft.Extensions.Configuration.IConfigurationSection",
                "Text": "configSection"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.Infrastructure.Messaging.Configuration.Configuration",
            "Name": "DetermineUsername",
            "Arguments": [
              {
                "Type": "Microsoft.Extensions.Configuration.IConfigurationSection",
                "Text": "configSection"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.Infrastructure.Messaging.Configuration.Configuration",
            "Name": "DeterminePassword",
            "Arguments": [
              {
                "Type": "Microsoft.Extensions.Configuration.IConfigurationSection",
                "Text": "configSection"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.Infrastructure.Messaging.Configuration.Configuration",
            "Name": "DetermineExchange",
            "Arguments": [
              {
                "Type": "Microsoft.Extensions.Configuration.IConfigurationSection",
                "Text": "configSection"
              }
            ]
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "sectionName == \u0022RabbitMQHandler\u0022",
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.Infrastructure.Messaging.Configuration.Configuration",
                    "Name": "DetermineQueue",
                    "Arguments": [
                      {
                        "Type": "Microsoft.Extensions.Configuration.IConfigurationSection",
                        "Text": "configSection"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.Infrastructure.Messaging.Configuration.Configuration",
                    "Name": "DetermineRoutingKey",
                    "Arguments": [
                      {
                        "Type": "Microsoft.Extensions.Configuration.IConfigurationSection",
                        "Text": "configSection"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "!_isValid",
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Text.StringBuilder",
                    "Name": "StringBuilder",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "\u0022Invalid RabbitMQ configuration:\u0022"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Collections.Generic.List\u003Cstring\u003E",
                    "Name": "ForEach",
                    "Arguments": [
                      {
                        "Type": "System.Action\u003Cstring\u003E",
                        "Text": "e =\u003E errorMessage.AppendLine(e)"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Text.StringBuilder",
                    "Name": "AppendLine",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "e"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.Infrastructure.Messaging.Configuration.InvalidConfigurationException",
                    "Name": "InvalidConfigurationException",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "errorMessage.ToString()"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Text.StringBuilder",
                    "Name": "ToString"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Microsoft.Extensions.Configuration.IConfigurationSection",
            "Name": "configSection"
          }
        ],
        "Name": "DetermineHost",
        "Modifiers": 20,
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_host",
            "Operator": "=",
            "Right": "configSection[\u0022Host\u0022]"
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "string.IsNullOrEmpty(_host)",
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Collections.Generic.List\u003Cstring\u003E",
                    "Name": "Add",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "Required config-setting \u0027Host\u0027 not found."
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "_isValid",
                    "Operator": "=",
                    "Right": "false"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Microsoft.Extensions.Configuration.IConfigurationSection",
            "Name": "configSection"
          }
        ],
        "Name": "DetermineVirtualHost",
        "Modifiers": 20,
        "Statements": [
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "string.IsNullOrEmpty(vhostSetting)",
                "Statements": [
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "_virtualHost",
                    "Operator": "=",
                    "Right": "DEFAULT_VIRTUAL_HOST"
                  }
                ]
              },
              {
                "Statements": [
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "_virtualHost",
                    "Operator": "=",
                    "Right": "configSection[\u0022VirtualHost\u0022]"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Microsoft.Extensions.Configuration.IConfigurationSection",
            "Name": "configSection"
          }
        ],
        "Name": "DeterminePort",
        "Modifiers": 20,
        "Statements": [
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "string.IsNullOrEmpty(portSetting)",
                "Statements": [
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "_port",
                    "Operator": "=",
                    "Right": "DEFAULT_PORT"
                  }
                ]
              },
              {
                "Statements": [
                  {
                    "$type": "DendroDocs.If, DendroDocs.Shared",
                    "Sections": [
                      {
                        "Condition": "int.TryParse(portSetting, out int result)",
                        "Statements": [
                          {
                            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                            "Left": "_port",
                            "Operator": "=",
                            "Right": "result"
                          }
                        ]
                      },
                      {
                        "Statements": [
                          {
                            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                            "Left": "_isValid",
                            "Operator": "=",
                            "Right": "false"
                          },
                          {
                            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                            "ContainingType": "System.Collections.Generic.List\u003Cstring\u003E",
                            "Name": "Add",
                            "Arguments": [
                              {
                                "Type": "string",
                                "Text": "Unable to parse config-setting \u0027Port\u0027 into an integer."
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Microsoft.Extensions.Configuration.IConfigurationSection",
            "Name": "configSection"
          }
        ],
        "Name": "DetermineUsername",
        "Modifiers": 20,
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_userName",
            "Operator": "=",
            "Right": "configSection[\u0022UserName\u0022]"
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "string.IsNullOrEmpty(_userName)",
                "Statements": [
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "_isValid",
                    "Operator": "=",
                    "Right": "false"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Collections.Generic.List\u003Cstring\u003E",
                    "Name": "Add",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "Required config-setting \u0027UserName\u0027 not found."
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Microsoft.Extensions.Configuration.IConfigurationSection",
            "Name": "configSection"
          }
        ],
        "Name": "DeterminePassword",
        "Modifiers": 20,
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_password",
            "Operator": "=",
            "Right": "configSection[\u0022Password\u0022]"
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "string.IsNullOrEmpty(_password)",
                "Statements": [
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "_isValid",
                    "Operator": "=",
                    "Right": "false"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Collections.Generic.List\u003Cstring\u003E",
                    "Name": "Add",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "Required config-setting \u0027Password\u0027 not found."
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Microsoft.Extensions.Configuration.IConfigurationSection",
            "Name": "configSection"
          }
        ],
        "Name": "DetermineExchange",
        "Modifiers": 20,
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_exchange",
            "Operator": "=",
            "Right": "configSection[\u0022Exchange\u0022]"
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "string.IsNullOrEmpty(_exchange)",
                "Statements": [
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "_isValid",
                    "Operator": "=",
                    "Right": "false"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Collections.Generic.List\u003Cstring\u003E",
                    "Name": "Add",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "Required config-setting \u0027Exchange\u0027 not found."
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Microsoft.Extensions.Configuration.IConfigurationSection",
            "Name": "configSection"
          }
        ],
        "Name": "DetermineQueue",
        "Modifiers": 20,
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_queue",
            "Operator": "=",
            "Right": "configSection[\u0022Queue\u0022]"
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "string.IsNullOrEmpty(_queue)",
                "Statements": [
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "_isValid",
                    "Operator": "=",
                    "Right": "false"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Collections.Generic.List\u003Cstring\u003E",
                    "Name": "Add",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "Required config-setting \u0027Queue\u0027 not found."
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Microsoft.Extensions.Configuration.IConfigurationSection",
            "Name": "configSection"
          }
        ],
        "Name": "DetermineRoutingKey",
        "Modifiers": 20,
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_routingKey",
            "Operator": "=",
            "Right": "configSection[\u0022RoutingKey\u0022] ?? \u0022\u0022"
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.Infrastructure.Messaging.Configuration.InvalidConfigurationException",
    "BaseTypes": [
      "System.Exception"
    ],
    "Modifiers": 2,
    "Constructors": [
      {
        "Name": "InvalidConfigurationException",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "message"
          }
        ],
        "Name": "InvalidConfigurationException",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "message"
          },
          {
            "Type": "System.Exception",
            "Name": "innerException"
          }
        ],
        "Name": "InvalidConfigurationException",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.Infrastructure.Messaging.Event",
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.Message"
    ],
    "Modifiers": 2,
    "Constructors": [
      {
        "Name": "Event",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          }
        ],
        "Name": "Event",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "messageType"
          }
        ],
        "Name": "Event",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          },
          {
            "Type": "string",
            "Name": "messageType"
          }
        ],
        "Name": "Event",
        "Modifiers": 2
      }
    ]
  },
  {
    "Type": 1,
    "FullName": "Pitstop.Infrastructure.Messaging.IMessageHandler",
    "Modifiers": 2,
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "Pitstop.Infrastructure.Messaging.IMessageHandlerCallback",
            "Name": "callback"
          }
        ],
        "Name": "Start"
      },
      {
        "Name": "Stop"
      }
    ]
  },
  {
    "Type": 1,
    "FullName": "Pitstop.Infrastructure.Messaging.IMessageHandlerCallback",
    "Modifiers": 2,
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "messageType"
          },
          {
            "Type": "string",
            "Name": "message"
          }
        ],
        "Name": "HandleMessageAsync",
        "ReturnType": "System.Threading.Tasks.Task\u003Cbool\u003E"
      }
    ]
  },
  {
    "Type": 1,
    "FullName": "Pitstop.Infrastructure.Messaging.IMessagePublisher",
    "Modifiers": 2,
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "messageType"
          },
          {
            "Type": "object",
            "Name": "message"
          },
          {
            "Type": "string",
            "Name": "routingKey"
          }
        ],
        "Name": "PublishMessageAsync",
        "DocumentationComments": {
          "Summary": "Publish a message.",
          "Params": {
            "messageType": "Type of the message.",
            "message": "The message to publish.",
            "routingKey": "The routingkey to use (RabbitMQ specific)."
          }
        },
        "ReturnType": "System.Threading.Tasks.Task"
      }
    ]
  },
  {
    "FullName": "Pitstop.Infrastructure.Messaging.Message",
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "System.Guid",
        "Name": "MessageId",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "MessageType",
        "Modifiers": 130
      }
    ],
    "Constructors": [
      {
        "Name": "Message",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "MessageId",
            "Operator": "=",
            "Right": "messageId"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "MessageType",
            "Operator": "=",
            "Right": "this.GetType().Name"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "object",
            "Name": "GetType"
          }
        ],
        "Name": "Message",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "messageType"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "MessageType",
            "Operator": "=",
            "Right": "messageType"
          }
        ],
        "Name": "Message",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          },
          {
            "Type": "string",
            "Name": "messageType"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "MessageId",
            "Operator": "=",
            "Right": "messageId"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "MessageType",
            "Operator": "=",
            "Right": "messageType"
          }
        ],
        "Name": "Message",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.Infrastructure.Messaging.MessageSerializer",
    "DocumentationComments": {
      "Summary": "Serializer used for all messages."
    },
    "Modifiers": 18,
    "Fields": [
      {
        "Type": "Newtonsoft.Json.JsonSerializerSettings",
        "Name": "_serializerSettings",
        "Modifiers": 20
      }
    ],
    "Constructors": [
      {
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_serializerSettings",
            "Operator": "=",
            "Right": "new JsonSerializerSettings()\r\n        {\r\n            DateFormatHandling = DateFormatHandling.IsoDateFormat\r\n        }"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Newtonsoft.Json.JsonSerializerSettings",
            "Name": "JsonSerializerSettings",
            "Arguments": [
              {
                "Type": "Newtonsoft.Json.DateFormatHandling",
                "Text": "DateFormatHandling = DateFormatHandling.IsoDateFormat"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "DateFormatHandling",
            "Operator": "=",
            "Right": "DateFormatHandling.IsoDateFormat"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Collections.Generic.ICollection\u003CNewtonsoft.Json.JsonConverter\u003E",
            "Name": "Add",
            "Arguments": [
              {
                "Type": "Newtonsoft.Json.Converters.StringEnumConverter",
                "Text": "new StringEnumConverter { NamingStrategy = new CamelCaseNamingStrategy() }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Newtonsoft.Json.Converters.StringEnumConverter",
            "Name": "StringEnumConverter",
            "Arguments": [
              {
                "Type": "Newtonsoft.Json.Serialization.NamingStrategy",
                "Text": "NamingStrategy = new CamelCaseNamingStrategy()"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "NamingStrategy",
            "Operator": "=",
            "Right": "new CamelCaseNamingStrategy()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Newtonsoft.Json.Serialization.CamelCaseNamingStrategy",
            "Name": "CamelCaseNamingStrategy"
          }
        ],
        "Name": "MessageSerializer",
        "Modifiers": 20,
        "DocumentationComments": {
          "Summary": "Constructor."
        }
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "object",
            "Name": "value"
          }
        ],
        "Name": "Serialize",
        "Modifiers": 18,
        "DocumentationComments": {
          "Summary": "Serialize an object to a JSON string.",
          "Params": {
            "value": "The value to serialize."
          }
        },
        "ReturnType": "string",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "JsonConvert.SerializeObject(value, _serializerSettings)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Newtonsoft.Json.JsonConvert",
            "Name": "SerializeObject",
            "Arguments": [
              {
                "Type": "object",
                "Text": "value"
              },
              {
                "Type": "Newtonsoft.Json.JsonSerializerSettings",
                "Text": "_serializerSettings"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "value"
          }
        ],
        "Name": "Deserialize",
        "Modifiers": 18,
        "DocumentationComments": {
          "Summary": "Deserialize JSON to an object.",
          "Params": {
            "value": "The JSON data to deserialize."
          }
        },
        "ReturnType": "Newtonsoft.Json.Linq.JObject",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "JsonConvert.DeserializeObject\u003CJObject\u003E(value, _serializerSettings)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Newtonsoft.Json.JsonConvert",
            "Name": "DeserializeObject\u003CJObject\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "value"
              },
              {
                "Type": "Newtonsoft.Json.JsonSerializerSettings",
                "Text": "_serializerSettings"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.Infrastructure.Messaging.RabbitMQMessageHandler",
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.IMessageHandler"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "int",
        "Initializer": "5672",
        "Name": "DEFAULT_PORT",
        "Modifiers": 516
      },
      {
        "Type": "string",
        "Initializer": "/",
        "Name": "DEFAULT_VIRTUAL_HOST",
        "Modifiers": 516
      },
      {
        "Type": "System.Collections.Generic.List\u003Cstring\u003E",
        "Name": "_hosts",
        "Modifiers": 132
      },
      {
        "Type": "string",
        "Name": "_username",
        "Modifiers": 132
      },
      {
        "Type": "string",
        "Name": "_virtualHost",
        "Modifiers": 132
      },
      {
        "Type": "string",
        "Name": "_password",
        "Modifiers": 132
      },
      {
        "Type": "string",
        "Name": "_exchange",
        "Modifiers": 132
      },
      {
        "Type": "string",
        "Name": "_queueName",
        "Modifiers": 132
      },
      {
        "Type": "string",
        "Name": "_routingKey",
        "Modifiers": 132
      },
      {
        "Type": "int",
        "Name": "_port",
        "Modifiers": 132
      },
      {
        "Type": "RabbitMQ.Client.IConnection",
        "Name": "_connection"
      },
      {
        "Type": "RabbitMQ.Client.IChannel",
        "Name": "_channel"
      },
      {
        "Type": "RabbitMQ.Client.Events.AsyncEventingBasicConsumer",
        "Name": "_consumer"
      },
      {
        "Type": "string",
        "Name": "_consumerTag"
      },
      {
        "Type": "Pitstop.Infrastructure.Messaging.IMessageHandlerCallback",
        "Name": "_callback"
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "host"
          },
          {
            "Type": "string",
            "Name": "username"
          },
          {
            "Type": "string",
            "Name": "password"
          },
          {
            "Type": "string",
            "Name": "exchange"
          },
          {
            "Type": "string",
            "Name": "queueName"
          },
          {
            "Type": "string",
            "Name": "routingKey"
          }
        ],
        "Name": "RabbitMQMessageHandler",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "host"
          },
          {
            "Type": "string",
            "Name": "virtualHost"
          },
          {
            "Type": "string",
            "Name": "username"
          },
          {
            "Type": "string",
            "Name": "password"
          },
          {
            "Type": "string",
            "Name": "exchange"
          },
          {
            "Type": "string",
            "Name": "queueName"
          },
          {
            "Type": "string",
            "Name": "routingKey"
          }
        ],
        "Name": "RabbitMQMessageHandler",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "host"
          },
          {
            "Type": "string",
            "Name": "username"
          },
          {
            "Type": "string",
            "Name": "password"
          },
          {
            "Type": "string",
            "Name": "exchange"
          },
          {
            "Type": "string",
            "Name": "queueName"
          },
          {
            "Type": "string",
            "Name": "routingKey"
          },
          {
            "Type": "int",
            "Name": "port"
          }
        ],
        "Name": "RabbitMQMessageHandler",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "host"
          },
          {
            "Type": "string",
            "Name": "virtualHost"
          },
          {
            "Type": "string",
            "Name": "username"
          },
          {
            "Type": "string",
            "Name": "password"
          },
          {
            "Type": "string",
            "Name": "exchange"
          },
          {
            "Type": "string",
            "Name": "queueName"
          },
          {
            "Type": "string",
            "Name": "routingKey"
          },
          {
            "Type": "int",
            "Name": "port"
          }
        ],
        "Name": "RabbitMQMessageHandler",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "System.Collections.Generic.IEnumerable\u003Cstring\u003E",
            "Name": "hosts"
          },
          {
            "Type": "string",
            "Name": "username"
          },
          {
            "Type": "string",
            "Name": "password"
          },
          {
            "Type": "string",
            "Name": "exchange"
          },
          {
            "Type": "string",
            "Name": "queueName"
          },
          {
            "Type": "string",
            "Name": "routingKey"
          }
        ],
        "Name": "RabbitMQMessageHandler",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "System.Collections.Generic.IEnumerable\u003Cstring\u003E",
            "Name": "hosts"
          },
          {
            "Type": "string",
            "Name": "virtualHost"
          },
          {
            "Type": "string",
            "Name": "username"
          },
          {
            "Type": "string",
            "Name": "password"
          },
          {
            "Type": "string",
            "Name": "exchange"
          },
          {
            "Type": "string",
            "Name": "queueName"
          },
          {
            "Type": "string",
            "Name": "routingKey"
          },
          {
            "Type": "int",
            "Name": "port"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_hosts",
            "Operator": "=",
            "Right": "[.. hosts]"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_virtualHost",
            "Operator": "=",
            "Right": "virtualHost"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_port",
            "Operator": "=",
            "Right": "port"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_username",
            "Operator": "=",
            "Right": "username"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_password",
            "Operator": "=",
            "Right": "password"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_exchange",
            "Operator": "=",
            "Right": "exchange"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_queueName",
            "Operator": "=",
            "Right": "queueName"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_routingKey",
            "Operator": "=",
            "Right": "routingKey"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "StringBuilder"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Create RabbitMQ message-handler instance using config:"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": " - Hosts: {string.Join(\u0027,\u0027, _hosts.ToArray())}"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "string",
            "Name": "Join",
            "Arguments": [
              {
                "Type": "char",
                "Text": ","
              },
              {
                "Type": "string[]",
                "Text": "_hosts.ToArray()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Collections.Generic.List\u003Cstring\u003E",
            "Name": "ToArray"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": " - VirtualHost: {_virtualHost}"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": " - Port: {_port}"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": " - UserName: {_username}"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": " - Password: {new string(\u0027*\u0027, _password.Length)}"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "string",
            "Name": "string",
            "Arguments": [
              {
                "Type": "char",
                "Text": "\u0027*\u0027"
              },
              {
                "Type": "int",
                "Text": "_password.Length"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": " - Exchange: {_exchange}"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": " - Queue: {_queueName}"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "Append",
            "Arguments": [
              {
                "Type": "string",
                "Text": " - RoutingKey: {_routingKey}"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Information",
            "Arguments": [
              {
                "Type": "string",
                "Text": "logMessage.ToString()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "ToString"
          }
        ],
        "Name": "RabbitMQMessageHandler",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "Pitstop.Infrastructure.Messaging.IMessageHandlerCallback",
            "Name": "callback"
          }
        ],
        "Name": "Start",
        "Modifiers": 2,
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_callback",
            "Operator": "=",
            "Right": "callback"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.Policy",
            "Name": "Execute",
            "Arguments": [
              {
                "Type": "System.Func\u003CSystem.Threading.Tasks.Task\u003E",
                "Text": "async () =\u003E\r\n            {\r\n                var factory = new ConnectionFactory() { VirtualHost = _virtualHost, UserName = _username, Password = _password, Port = _port };\r\n                _connection = await factory.CreateConnectionAsync(_hosts);\r\n                _channel = await _connection.CreateChannelAsync();\r\n                await _channel.ExchangeDeclareAsync(_exchange, \u0022fanout\u0022, durable: true, autoDelete: false);\r\n                await _channel.QueueDeclareAsync(_queueName, durable: true, autoDelete: false, exclusive: false);\r\n                await _channel.QueueBindAsync(_queueName, _exchange, _routingKey);\r\n                _consumer = new AsyncEventingBasicConsumer(_channel);\r\n                _consumer.ReceivedAsync \u002B= Consumer_Received;\r\n                _consumerTag = await _channel.BasicConsumeAsync(_queueName, false, _consumer);\r\n            }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.RetrySyntax",
            "Name": "WaitAndRetry",
            "Arguments": [
              {
                "Type": "int",
                "Text": "9"
              },
              {
                "Type": "System.Func\u003Cint, System.TimeSpan\u003E",
                "Text": "r =\u003E TimeSpan.FromSeconds(5)"
              },
              {
                "Type": "System.Action\u003CSystem.Exception, System.TimeSpan\u003E",
                "Text": "(ex, ts) =\u003E { Log.Error(\u0022Error connecting to RabbitMQ. Retrying in 5 sec.\u0022); }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.Policy",
            "Name": "Handle\u003CException\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.TimeSpan",
            "Name": "FromSeconds",
            "Arguments": [
              {
                "Type": "int",
                "Text": "5"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Error",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Error connecting to RabbitMQ. Retrying in 5 sec."
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "RabbitMQ.Client.ConnectionFactory",
            "Name": "ConnectionFactory",
            "Arguments": [
              {
                "Type": "string",
                "Text": "VirtualHost = _virtualHost"
              },
              {
                "Type": "string",
                "Text": "UserName = _username"
              },
              {
                "Type": "string",
                "Text": "Password = _password"
              },
              {
                "Type": "int",
                "Text": "Port = _port"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "VirtualHost",
            "Operator": "=",
            "Right": "_virtualHost"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "UserName",
            "Operator": "=",
            "Right": "_username"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Password",
            "Operator": "=",
            "Right": "_password"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Port",
            "Operator": "=",
            "Right": "_port"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_connection",
            "Operator": "=",
            "Right": "await factory.CreateConnectionAsync(_hosts)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "RabbitMQ.Client.ConnectionFactory",
            "Name": "CreateConnectionAsync",
            "Arguments": [
              {
                "Type": "System.Collections.Generic.List\u003Cstring\u003E",
                "Text": "_hosts"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_channel",
            "Operator": "=",
            "Right": "await _connection.CreateChannelAsync()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "RabbitMQ.Client.IConnection",
            "Name": "CreateChannelAsync"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "RabbitMQ.Client.IChannel",
            "Name": "ExchangeDeclareAsync",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_exchange"
              },
              {
                "Type": "string",
                "Text": "fanout"
              },
              {
                "Type": "bool",
                "Text": "true"
              },
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "RabbitMQ.Client.IChannel",
            "Name": "QueueDeclareAsync",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_queueName"
              },
              {
                "Type": "bool",
                "Text": "true"
              },
              {
                "Type": "bool",
                "Text": "false"
              },
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "RabbitMQ.Client.IChannel",
            "Name": "QueueBindAsync",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_queueName"
              },
              {
                "Type": "string",
                "Text": "_exchange"
              },
              {
                "Type": "string",
                "Text": "_routingKey"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_consumer",
            "Operator": "=",
            "Right": "new AsyncEventingBasicConsumer(_channel)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "RabbitMQ.Client.Events.AsyncEventingBasicConsumer",
            "Name": "AsyncEventingBasicConsumer",
            "Arguments": [
              {
                "Type": "RabbitMQ.Client.IChannel",
                "Text": "_channel"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_consumer.ReceivedAsync",
            "Operator": "\u002B=",
            "Right": "Consumer_Received"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_consumerTag",
            "Operator": "=",
            "Right": "await _channel.BasicConsumeAsync(_queueName, false, _consumer)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "RabbitMQ.Client.IChannelExtensions",
            "Name": "BasicConsumeAsync",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_queueName"
              },
              {
                "Type": "bool",
                "Text": "false"
              },
              {
                "Type": "RabbitMQ.Client.Events.AsyncEventingBasicConsumer",
                "Text": "_consumer"
              }
            ]
          }
        ]
      },
      {
        "Name": "Stop",
        "Modifiers": 258,
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "RabbitMQ.Client.IChannel",
            "Name": "BasicCancelAsync",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_consumerTag"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "RabbitMQ.Client.IChannelExtensions",
            "Name": "CloseAsync",
            "Arguments": [
              {
                "Type": "int",
                "Text": "200"
              },
              {
                "Type": "string",
                "Text": "Goodbye"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "RabbitMQ.Client.IConnectionExtensions",
            "Name": "CloseAsync"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "object",
            "Name": "sender"
          },
          {
            "Type": "RabbitMQ.Client.Events.BasicDeliverEventArgs",
            "Name": "ea"
          }
        ],
        "Name": "Consumer_Received",
        "Modifiers": 260,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "await HandleEvent(ea)",
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "RabbitMQ.Client.IChannel",
                    "Name": "BasicAckAsync",
                    "Arguments": [
                      {
                        "Type": "ulong",
                        "Text": "ea.DeliveryTag"
                      },
                      {
                        "Type": "bool",
                        "Text": "false"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "RabbitMQ.Client.Events.BasicDeliverEventArgs",
            "Name": "ea"
          }
        ],
        "Name": "HandleEvent",
        "ReturnType": "System.Threading.Tasks.Task\u003Cbool\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.Encoding",
            "Name": "GetString",
            "Arguments": [
              {
                "Type": "byte[]",
                "Text": "(byte[])ea.BasicProperties.Headers[\u0022MessageType\u0022]"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.Encoding",
            "Name": "GetString",
            "Arguments": [
              {
                "Type": "byte[]",
                "Text": "ea.Body.ToArray()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.ReadOnlyMemory\u003Cbyte\u003E",
            "Name": "ToArray"
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "_callback.HandleMessageAsync(messageType, body)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.Infrastructure.Messaging.IMessageHandlerCallback",
            "Name": "HandleMessageAsync",
            "Arguments": [
              {
                "Type": "string",
                "Text": "messageType"
              },
              {
                "Type": "string",
                "Text": "body"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.Infrastructure.Messaging.RabbitMQMessagePublisher",
    "DocumentationComments": {
      "Summary": "RabbitMQ implementation of the MessagePublisher."
    },
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.IMessagePublisher",
      "System.IDisposable"
    ],
    "Modifiers": 1026,
    "Fields": [
      {
        "Type": "int",
        "Initializer": "5672",
        "Name": "DEFAULT_PORT",
        "Modifiers": 516
      },
      {
        "Type": "string",
        "Initializer": "/",
        "Name": "DEFAULT_VIRTUAL_HOST",
        "Modifiers": 516
      },
      {
        "Type": "System.Collections.Generic.List\u003Cstring\u003E",
        "Name": "_hosts",
        "Modifiers": 132
      },
      {
        "Type": "string",
        "Name": "_virtualHost",
        "Modifiers": 132
      },
      {
        "Type": "int",
        "Name": "_port",
        "Modifiers": 132
      },
      {
        "Type": "string",
        "Name": "_username",
        "Modifiers": 132
      },
      {
        "Type": "string",
        "Name": "_password",
        "Modifiers": 132
      },
      {
        "Type": "string",
        "Name": "_exchange",
        "Modifiers": 132
      },
      {
        "Type": "RabbitMQ.Client.IConnection",
        "Name": "_connection"
      },
      {
        "Type": "RabbitMQ.Client.IChannel",
        "Name": "_channel"
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "host"
          },
          {
            "Type": "string",
            "Name": "username"
          },
          {
            "Type": "string",
            "Name": "password"
          },
          {
            "Type": "string",
            "Name": "exchange"
          },
          {
            "Type": "int",
            "Name": "port"
          }
        ],
        "Name": "RabbitMQMessagePublisher",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "host"
          },
          {
            "Type": "string",
            "Name": "virtualHost"
          },
          {
            "Type": "string",
            "Name": "username"
          },
          {
            "Type": "string",
            "Name": "password"
          },
          {
            "Type": "string",
            "Name": "exchange"
          }
        ],
        "Name": "RabbitMQMessagePublisher",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "host"
          },
          {
            "Type": "string",
            "Name": "virtualHost"
          },
          {
            "Type": "string",
            "Name": "username"
          },
          {
            "Type": "string",
            "Name": "password"
          },
          {
            "Type": "string",
            "Name": "exchange"
          },
          {
            "Type": "int",
            "Name": "port"
          }
        ],
        "Name": "RabbitMQMessagePublisher",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "host"
          },
          {
            "Type": "string",
            "Name": "username"
          },
          {
            "Type": "string",
            "Name": "password"
          },
          {
            "Type": "string",
            "Name": "exchange"
          }
        ],
        "Name": "RabbitMQMessagePublisher",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "System.Collections.Generic.IEnumerable\u003Cstring\u003E",
            "Name": "hosts"
          },
          {
            "Type": "string",
            "Name": "username"
          },
          {
            "Type": "string",
            "Name": "password"
          },
          {
            "Type": "string",
            "Name": "exchange"
          }
        ],
        "Name": "RabbitMQMessagePublisher",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "System.Collections.Generic.IEnumerable\u003Cstring\u003E",
            "Name": "hosts"
          },
          {
            "Type": "string",
            "Name": "virtualHost"
          },
          {
            "Type": "string",
            "Name": "username"
          },
          {
            "Type": "string",
            "Name": "password"
          },
          {
            "Type": "string",
            "Name": "exchange"
          },
          {
            "Type": "int",
            "Name": "port"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_hosts",
            "Operator": "=",
            "Right": "[.. hosts]"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_port",
            "Operator": "=",
            "Right": "port"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_virtualHost",
            "Operator": "=",
            "Right": "virtualHost"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_username",
            "Operator": "=",
            "Right": "username"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_password",
            "Operator": "=",
            "Right": "password"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_exchange",
            "Operator": "=",
            "Right": "exchange"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "StringBuilder"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Create RabbitMQ message-publisher instance using config:"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": " - Hosts: {string.Join(\u0027,\u0027, _hosts.ToArray())}"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "string",
            "Name": "Join",
            "Arguments": [
              {
                "Type": "char",
                "Text": ","
              },
              {
                "Type": "string[]",
                "Text": "_hosts.ToArray()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Collections.Generic.List\u003Cstring\u003E",
            "Name": "ToArray"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": " - VirtualHost: {_virtualHost}"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": " - Port: {_port}"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": " - UserName: {_username}"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": " - Password: {new string(\u0027*\u0027, _password.Length)}"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "string",
            "Name": "string",
            "Arguments": [
              {
                "Type": "char",
                "Text": "\u0027*\u0027"
              },
              {
                "Type": "int",
                "Text": "_password.Length"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "Append",
            "Arguments": [
              {
                "Type": "string",
                "Text": " - Exchange: {_exchange}"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Information",
            "Arguments": [
              {
                "Type": "string",
                "Text": "logMessage.ToString()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "ToString"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.Infrastructure.Messaging.RabbitMQMessagePublisher",
            "Name": "Connect"
          }
        ],
        "Name": "RabbitMQMessagePublisher",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "messageType"
          },
          {
            "Type": "object",
            "Name": "message"
          },
          {
            "Type": "string",
            "Name": "routingKey"
          }
        ],
        "Name": "PublishMessageAsync",
        "Modifiers": 2,
        "DocumentationComments": {
          "Summary": "Publish a message.",
          "Params": {
            "messageType": "Type of the message.",
            "message": "The message to publish.",
            "routingKey": "The routingkey to use (RabbitMQ specific)."
          }
        },
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "Task.Run(async () =\u003E\r\n            {\r\n                string data = MessageSerializer.Serialize(message);\r\n                var body = Encoding.UTF8.GetBytes(data);\r\n                var properties = new BasicProperties\r\n                {\r\n                    Headers = new Dictionary\u003Cstring, object\u003E { { \u0022MessageType\u0022, messageType } }\r\n                };\r\n                await _channel.BasicPublishAsync(_exchange, routingKey, false, properties, body);\r\n            })"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task",
            "Name": "Run",
            "Arguments": [
              {
                "Type": "System.Func\u003CSystem.Threading.Tasks.Task?\u003E",
                "Text": "async () =\u003E\r\n            {\r\n                string data = MessageSerializer.Serialize(message);\r\n                var body = Encoding.UTF8.GetBytes(data);\r\n                var properties = new BasicProperties\r\n                {\r\n                    Headers = new Dictionary\u003Cstring, object\u003E { { \u0022MessageType\u0022, messageType } }\r\n                };\r\n                await _channel.BasicPublishAsync(_exchange, routingKey, false, properties, body);\r\n            }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.Infrastructure.Messaging.MessageSerializer",
            "Name": "Serialize",
            "Arguments": [
              {
                "Type": "object",
                "Text": "message"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.Encoding",
            "Name": "GetBytes",
            "Arguments": [
              {
                "Type": "string",
                "Text": "data"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "RabbitMQ.Client.BasicProperties",
            "Name": "BasicProperties",
            "Arguments": [
              {
                "Type": "System.Collections.Generic.IDictionary\u003Cstring, object?\u003E",
                "Text": "Headers = new Dictionary\u003Cstring, object\u003E { { \u0022MessageType\u0022, messageType } }"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Headers",
            "Operator": "=",
            "Right": "new Dictionary\u003Cstring, object\u003E { { \u0022MessageType\u0022, messageType } }"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Collections.Generic.Dictionary\u003Cstring, object\u003E",
            "Name": "Dictionary\u003Cstring, object\u003E",
            "Arguments": [
              {
                "Type": "System.Collections.Generic.Dictionary\u003Cstring, object\u003E",
                "Text": "{ \u0022MessageType\u0022, messageType }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "RabbitMQ.Client.IChannel",
            "Name": "BasicPublishAsync",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_exchange"
              },
              {
                "Type": "string",
                "Text": "routingKey"
              },
              {
                "Type": "bool",
                "Text": "false"
              },
              {
                "Type": "RabbitMQ.Client.BasicProperties",
                "Text": "properties"
              },
              {
                "Type": "byte[]",
                "Text": "body"
              }
            ]
          }
        ]
      },
      {
        "Name": "Connect",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.Policy",
            "Name": "Execute",
            "Arguments": [
              {
                "Type": "System.Func\u003CSystem.Threading.Tasks.Task\u003E",
                "Text": "async () =\u003E\r\n            {\r\n                var factory = new ConnectionFactory() { VirtualHost = _virtualHost, UserName = _username, Password = _password, Port = _port };\r\n                factory.AutomaticRecoveryEnabled = true;\r\n                _connection = await factory.CreateConnectionAsync(_hosts);\r\n                _channel = await _connection.CreateChannelAsync();\r\n                await _channel.ExchangeDeclareAsync(_exchange, \u0022fanout\u0022, durable: true, autoDelete: false);\r\n            }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.RetrySyntax",
            "Name": "WaitAndRetry",
            "Arguments": [
              {
                "Type": "int",
                "Text": "9"
              },
              {
                "Type": "System.Func\u003Cint, System.TimeSpan\u003E",
                "Text": "r =\u003E TimeSpan.FromSeconds(5)"
              },
              {
                "Type": "System.Action\u003CSystem.Exception, System.TimeSpan\u003E",
                "Text": "(ex, ts) =\u003E { Log.Error(\u0022Error connecting to RabbitMQ. Retrying in 5 sec.\u0022); }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.Policy",
            "Name": "Handle\u003CException\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.TimeSpan",
            "Name": "FromSeconds",
            "Arguments": [
              {
                "Type": "int",
                "Text": "5"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Error",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Error connecting to RabbitMQ. Retrying in 5 sec."
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "RabbitMQ.Client.ConnectionFactory",
            "Name": "ConnectionFactory",
            "Arguments": [
              {
                "Type": "string",
                "Text": "VirtualHost = _virtualHost"
              },
              {
                "Type": "string",
                "Text": "UserName = _username"
              },
              {
                "Type": "string",
                "Text": "Password = _password"
              },
              {
                "Type": "int",
                "Text": "Port = _port"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "VirtualHost",
            "Operator": "=",
            "Right": "_virtualHost"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "UserName",
            "Operator": "=",
            "Right": "_username"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Password",
            "Operator": "=",
            "Right": "_password"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Port",
            "Operator": "=",
            "Right": "_port"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "factory.AutomaticRecoveryEnabled",
            "Operator": "=",
            "Right": "true"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_connection",
            "Operator": "=",
            "Right": "await factory.CreateConnectionAsync(_hosts)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "RabbitMQ.Client.ConnectionFactory",
            "Name": "CreateConnectionAsync",
            "Arguments": [
              {
                "Type": "System.Collections.Generic.List\u003Cstring\u003E",
                "Text": "_hosts"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_channel",
            "Operator": "=",
            "Right": "await _connection.CreateChannelAsync()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "RabbitMQ.Client.IConnection",
            "Name": "CreateChannelAsync"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "RabbitMQ.Client.IChannel",
            "Name": "ExchangeDeclareAsync",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_exchange"
              },
              {
                "Type": "string",
                "Text": "fanout"
              },
              {
                "Type": "bool",
                "Text": "true"
              },
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          }
        ]
      },
      {
        "Name": "Dispose",
        "Modifiers": 2,
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.IDisposable",
            "Name": ""
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_channel",
            "Operator": "=",
            "Right": "null"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.IDisposable",
            "Name": ""
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_connection",
            "Operator": "=",
            "Right": "null"
          }
        ]
      }
    ]
  },
  {
    "Type": 1,
    "FullName": "Pitstop.InvoiceService.CommunicationChannels.IEmailCommunicator",
    "Modifiers": 2,
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "System.Net.Mail.MailMessage",
            "Name": "message"
          }
        ],
        "Name": "SendEmailAsync",
        "ReturnType": "System.Threading.Tasks.Task"
      }
    ]
  },
  {
    "FullName": "Pitstop.InvoiceService.CommunicationChannels.SMTPEmailCommunicator",
    "BaseTypes": [
      "Pitstop.InvoiceService.CommunicationChannels.IEmailCommunicator"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "string",
        "Name": "_smptServer"
      },
      {
        "Type": "int",
        "Name": "_smtpPort"
      },
      {
        "Type": "string",
        "Name": "_userName"
      },
      {
        "Type": "string",
        "Name": "_password"
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "smtpServer"
          },
          {
            "Type": "int",
            "Name": "smtpPort"
          },
          {
            "Type": "string",
            "Name": "userName"
          },
          {
            "Type": "string",
            "Name": "password"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_smptServer",
            "Operator": "=",
            "Right": "smtpServer"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_smtpPort",
            "Operator": "=",
            "Right": "smtpPort"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_userName",
            "Operator": "=",
            "Right": "userName"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_password",
            "Operator": "=",
            "Right": "password"
          }
        ],
        "Name": "SMTPEmailCommunicator",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "System.Net.Mail.MailMessage",
            "Name": "message"
          }
        ],
        "Name": "SendEmailAsync",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Net.Mail.SmtpClient",
            "Name": "SmtpClient",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_smptServer"
              },
              {
                "Type": "int",
                "Text": "_smtpPort"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "client.UseDefaultCredentials",
            "Operator": "=",
            "Right": "false"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "client.Credentials",
            "Operator": "=",
            "Right": "new NetworkCredential(\u0022_username\u0022, \u0022_password\u0022)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Net.NetworkCredential",
            "Name": "NetworkCredential",
            "Arguments": [
              {
                "Type": "string",
                "Text": "\u0022_username\u0022"
              },
              {
                "Type": "string",
                "Text": "\u0022_password\u0022"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task",
            "Name": "ContinueWith",
            "Arguments": [
              {
                "Type": "System.Action\u003CSystem.Threading.Tasks.Task\u003E",
                "Text": "_ =\u003E Log.Information($\u0022Invoice mail sent to printing company.\u0022)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.Policy",
            "Name": "Execute",
            "Arguments": [
              {
                "Type": "System.Func\u003CSystem.Threading.Tasks.Task\u003E",
                "Text": "() =\u003E client.SendMailAsync(message)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.RetrySyntax",
            "Name": "WaitAndRetry",
            "Arguments": [
              {
                "Type": "int",
                "Text": "3"
              },
              {
                "Type": "System.Func\u003Cint, System.TimeSpan\u003E",
                "Text": "r =\u003E TimeSpan.FromSeconds(2)"
              },
              {
                "Type": "System.Action\u003CSystem.Exception, System.TimeSpan\u003E",
                "Text": "(ex, ts) =\u003E { Log.Error(\u0022Error sending mail. Retrying in 2 sec.\u0022); }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.Policy",
            "Name": "Handle\u003CException\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.TimeSpan",
            "Name": "FromSeconds",
            "Arguments": [
              {
                "Type": "int",
                "Text": "2"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Error",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Error sending mail. Retrying in 2 sec."
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Net.Mail.SmtpClient",
            "Name": "SendMailAsync",
            "Arguments": [
              {
                "Type": "System.Net.Mail.MailMessage",
                "Text": "message"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Information",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Invoice mail sent to printing company."
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.InvoiceService.Events.CustomerRegistered",
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.Event"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "string",
        "Name": "CustomerId",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "Name",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "Address",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "PostalCode",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "City",
        "Modifiers": 130
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          },
          {
            "Type": "string",
            "Name": "customerId"
          },
          {
            "Type": "string",
            "Name": "name"
          },
          {
            "Type": "string",
            "Name": "address"
          },
          {
            "Type": "string",
            "Name": "postalCode"
          },
          {
            "Type": "string",
            "Name": "city"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "CustomerId",
            "Operator": "=",
            "Right": "customerId"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Name",
            "Operator": "=",
            "Right": "name"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Address",
            "Operator": "=",
            "Right": "address"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "PostalCode",
            "Operator": "=",
            "Right": "postalCode"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "City",
            "Operator": "=",
            "Right": "city"
          }
        ],
        "Name": "CustomerRegistered",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.InvoiceService.Events.DayHasPassed",
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.Event"
    ],
    "Modifiers": 2,
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          }
        ],
        "Name": "DayHasPassed",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.InvoiceService.Events.MaintenanceJobFinished",
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.Event"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "string",
        "Name": "JobId",
        "Modifiers": 130
      },
      {
        "Type": "System.DateTime",
        "Name": "StartTime",
        "Modifiers": 130
      },
      {
        "Type": "System.DateTime",
        "Name": "EndTime",
        "Modifiers": 130
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          },
          {
            "Type": "string",
            "Name": "jobId"
          },
          {
            "Type": "System.DateTime",
            "Name": "startTime"
          },
          {
            "Type": "System.DateTime",
            "Name": "endTime"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "JobId",
            "Operator": "=",
            "Right": "jobId"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "StartTime",
            "Operator": "=",
            "Right": "startTime"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "EndTime",
            "Operator": "=",
            "Right": "endTime"
          }
        ],
        "Name": "MaintenanceJobFinished",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.InvoiceService.Events.MaintenanceJobPlanned",
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.Event"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "string",
        "Name": "JobId",
        "Modifiers": 130
      },
      {
        "Type": "(string Id, string Name, string TelephoneNumber)",
        "Name": "CustomerInfo",
        "Modifiers": 130
      },
      {
        "Type": "(string LicenseNumber, string Brand, string Type)",
        "Name": "VehicleInfo",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "Description",
        "Modifiers": 130
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          },
          {
            "Type": "string",
            "Name": "jobId"
          },
          {
            "Type": "(string Id, string Name, string TelephoneNumber)",
            "Name": "customerInfo"
          },
          {
            "Type": "(string LicenseNumber, string Brand, string Type)",
            "Name": "vehicleInfo"
          },
          {
            "Type": "string",
            "Name": "description"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "JobId",
            "Operator": "=",
            "Right": "jobId"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "CustomerInfo",
            "Operator": "=",
            "Right": "customerInfo"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "VehicleInfo",
            "Operator": "=",
            "Right": "vehicleInfo"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Description",
            "Operator": "=",
            "Right": "description"
          }
        ],
        "Name": "MaintenanceJobPlanned",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.InvoiceService.InvoiceWorker",
    "BaseTypes": [
      "Microsoft.Extensions.Hosting.IHostedService",
      "Pitstop.Infrastructure.Messaging.IMessageHandlerCallback"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "decimal",
        "Initializer": "18.50",
        "Name": "HOURLY_RATE",
        "Modifiers": 516
      },
      {
        "Type": "Pitstop.Infrastructure.Messaging.IMessageHandler",
        "Name": "_messageHandler"
      },
      {
        "Type": "Pitstop.InvoiceService.Repositories.IInvoiceRepository",
        "Name": "_repo"
      },
      {
        "Type": "Pitstop.InvoiceService.CommunicationChannels.IEmailCommunicator",
        "Name": "_emailCommunicator"
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "Pitstop.Infrastructure.Messaging.IMessageHandler",
            "Name": "messageHandler"
          },
          {
            "Type": "Pitstop.InvoiceService.Repositories.IInvoiceRepository",
            "Name": "repo"
          },
          {
            "Type": "Pitstop.InvoiceService.CommunicationChannels.IEmailCommunicator",
            "Name": "emailCommunicator"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_messageHandler",
            "Operator": "=",
            "Right": "messageHandler"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_repo",
            "Operator": "=",
            "Right": "repo"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_emailCommunicator",
            "Operator": "=",
            "Right": "emailCommunicator"
          }
        ],
        "Name": "InvoiceWorker",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "System.Threading.CancellationToken",
            "Name": "cancellationToken"
          }
        ],
        "Name": "StartAsync",
        "Modifiers": 2,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.Infrastructure.Messaging.IMessageHandler",
            "Name": "Start",
            "Arguments": [
              {
                "Type": "Pitstop.InvoiceService.InvoiceWorker",
                "Text": "this"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "Task.CompletedTask"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "System.Threading.CancellationToken",
            "Name": "cancellationToken"
          }
        ],
        "Name": "StopAsync",
        "Modifiers": 2,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.Infrastructure.Messaging.IMessageHandler",
            "Name": "Stop"
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "Task.CompletedTask"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "messageType"
          },
          {
            "Type": "string",
            "Name": "message"
          }
        ],
        "Name": "HandleMessageAsync",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task\u003Cbool\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.Infrastructure.Messaging.MessageSerializer",
            "Name": "Deserialize",
            "Arguments": [
              {
                "Type": "string",
                "Text": "message"
              }
            ]
          },
          {
            "$type": "DendroDocs.Switch, DendroDocs.Shared",
            "Sections": [
              {
                "Labels": [
                  "\u0022CustomerRegistered\u0022"
                ],
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.InvoiceService.InvoiceWorker",
                    "Name": "HandleAsync",
                    "Arguments": [
                      {
                        "Type": "Pitstop.InvoiceService.Events.CustomerRegistered",
                        "Text": "messageObject.ToObject\u003CCustomerRegistered\u003E()"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Newtonsoft.Json.Linq.JToken",
                    "Name": "ToObject\u003CCustomerRegistered\u003E"
                  }
                ]
              },
              {
                "Labels": [
                  "\u0022MaintenanceJobPlanned\u0022"
                ],
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.InvoiceService.InvoiceWorker",
                    "Name": "HandleAsync",
                    "Arguments": [
                      {
                        "Type": "Pitstop.InvoiceService.Events.MaintenanceJobPlanned",
                        "Text": "messageObject.ToObject\u003CMaintenanceJobPlanned\u003E()"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Newtonsoft.Json.Linq.JToken",
                    "Name": "ToObject\u003CMaintenanceJobPlanned\u003E"
                  }
                ]
              },
              {
                "Labels": [
                  "\u0022MaintenanceJobFinished\u0022"
                ],
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.InvoiceService.InvoiceWorker",
                    "Name": "HandleAsync",
                    "Arguments": [
                      {
                        "Type": "Pitstop.InvoiceService.Events.MaintenanceJobFinished",
                        "Text": "messageObject.ToObject\u003CMaintenanceJobFinished\u003E()"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Newtonsoft.Json.Linq.JToken",
                    "Name": "ToObject\u003CMaintenanceJobFinished\u003E"
                  }
                ]
              },
              {
                "Labels": [
                  "\u0022DayHasPassed\u0022"
                ],
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.InvoiceService.InvoiceWorker",
                    "Name": "HandleAsync",
                    "Arguments": [
                      {
                        "Type": "Pitstop.InvoiceService.Events.DayHasPassed",
                        "Text": "messageObject.ToObject\u003CDayHasPassed\u003E()"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Newtonsoft.Json.Linq.JToken",
                    "Name": "ToObject\u003CDayHasPassed\u003E"
                  }
                ]
              }
            ],
            "Expression": "messageType"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Error",
            "Arguments": [
              {
                "Type": "System.Exception",
                "Text": "ex"
              },
              {
                "Type": "string",
                "Text": "Error while handling {messageType} event."
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "true"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.InvoiceService.Events.CustomerRegistered",
            "Name": "cr"
          }
        ],
        "Name": "HandleAsync",
        "Modifiers": 260,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Information",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Register customer: {Id}, {Name}, {Address}, {PostalCode}, {City}"
              },
              {
                "Type": "string",
                "Text": "cr.CustomerId"
              },
              {
                "Type": "string",
                "Text": "cr.Name"
              },
              {
                "Type": "string",
                "Text": "cr.Address"
              },
              {
                "Type": "string",
                "Text": "cr.PostalCode"
              },
              {
                "Type": "string",
                "Text": "cr.City"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.InvoiceService.Model.Customer",
            "Name": "Customer",
            "Arguments": [
              {
                "Type": "string",
                "Text": "CustomerId = cr.CustomerId"
              },
              {
                "Type": "string",
                "Text": "Name = cr.Name"
              },
              {
                "Type": "string",
                "Text": "Address = cr.Address"
              },
              {
                "Type": "string",
                "Text": "PostalCode = cr.PostalCode"
              },
              {
                "Type": "string",
                "Text": "City = cr.City"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "CustomerId",
            "Operator": "=",
            "Right": "cr.CustomerId"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Name",
            "Operator": "=",
            "Right": "cr.Name"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Address",
            "Operator": "=",
            "Right": "cr.Address"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "PostalCode",
            "Operator": "=",
            "Right": "cr.PostalCode"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "City",
            "Operator": "=",
            "Right": "cr.City"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.InvoiceService.Repositories.IInvoiceRepository",
            "Name": "RegisterCustomerAsync",
            "Arguments": [
              {
                "Type": "Pitstop.InvoiceService.Model.Customer",
                "Text": "customer"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.InvoiceService.Events.MaintenanceJobPlanned",
            "Name": "mjp"
          }
        ],
        "Name": "HandleAsync",
        "Modifiers": 260,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Information",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Register Maintenance Job: {Id}, {Description}, {CustomerId}, {VehicleLicenseNumber}"
              },
              {
                "Type": "string",
                "Text": "mjp.JobId"
              },
              {
                "Type": "string",
                "Text": "mjp.Description"
              },
              {
                "Type": "string",
                "Text": "mjp.CustomerInfo.Id"
              },
              {
                "Type": "string",
                "Text": "mjp.VehicleInfo.LicenseNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.InvoiceService.Model.MaintenanceJob",
            "Name": "MaintenanceJob",
            "Arguments": [
              {
                "Type": "string",
                "Text": "JobId = mjp.JobId.ToString()"
              },
              {
                "Type": "string",
                "Text": "CustomerId = mjp.CustomerInfo.Id"
              },
              {
                "Type": "string",
                "Text": "LicenseNumber = mjp.VehicleInfo.LicenseNumber"
              },
              {
                "Type": "string",
                "Text": "Description = mjp.Description"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "JobId",
            "Operator": "=",
            "Right": "mjp.JobId.ToString()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "string",
            "Name": "ToString"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "CustomerId",
            "Operator": "=",
            "Right": "mjp.CustomerInfo.Id"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "LicenseNumber",
            "Operator": "=",
            "Right": "mjp.VehicleInfo.LicenseNumber"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Description",
            "Operator": "=",
            "Right": "mjp.Description"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.InvoiceService.Repositories.IInvoiceRepository",
            "Name": "RegisterMaintenanceJobAsync",
            "Arguments": [
              {
                "Type": "Pitstop.InvoiceService.Model.MaintenanceJob",
                "Text": "job"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.InvoiceService.Events.MaintenanceJobFinished",
            "Name": "mjf"
          }
        ],
        "Name": "HandleAsync",
        "Modifiers": 260,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Information",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Finish Maintenance Job: {Id}, {StartTime}, {EndTime}"
              },
              {
                "Type": "string",
                "Text": "mjf.JobId"
              },
              {
                "Type": "System.DateTime",
                "Text": "mjf.StartTime"
              },
              {
                "Type": "System.DateTime",
                "Text": "mjf.EndTime"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.InvoiceService.Repositories.IInvoiceRepository",
            "Name": "MarkMaintenanceJobAsFinished",
            "Arguments": [
              {
                "Type": "string",
                "Text": "mjf.JobId"
              },
              {
                "Type": "System.DateTime",
                "Text": "mjf.StartTime"
              },
              {
                "Type": "System.DateTime",
                "Text": "mjf.EndTime"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.InvoiceService.Events.DayHasPassed",
            "Name": "dhp"
          }
        ],
        "Name": "HandleAsync",
        "Modifiers": 260,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.InvoiceService.Repositories.IInvoiceRepository",
            "Name": "GetMaintenanceJobsToBeInvoicedAsync"
          },
          {
            "$type": "DendroDocs.ForEach, DendroDocs.Shared",
            "Expression": "jobsPerCustomer in jobs.GroupBy(job =\u003E job.CustomerId)",
            "Statements": [
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "Pitstop.InvoiceService.Repositories.IInvoiceRepository",
                "Name": "GetCustomerAsync",
                "Arguments": [
                  {
                    "Type": "string",
                    "Text": "customerId"
                  }
                ]
              },
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "Pitstop.InvoiceService.Model.Invoice",
                "Name": "Invoice",
                "Arguments": [
                  {
                    "Type": "string",
                    "Text": "InvoiceId = $\u0022{invoiceDate.ToString(\u0022yyyyMMddhhmmss\u0022)}-{customerId.Substring(0, 4)}\u0022"
                  },
                  {
                    "Type": "System.DateTime",
                    "Text": "InvoiceDate = invoiceDate.Date"
                  },
                  {
                    "Type": "string",
                    "Text": "CustomerId = customer.CustomerId"
                  },
                  {
                    "Type": "string",
                    "Text": "JobIds = string.Join(\u0027|\u0027, jobsPerCustomer.Select(j =\u003E j.JobId))"
                  }
                ]
              },
              {
                "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                "Left": "InvoiceId",
                "Operator": "=",
                "Right": "$\u0022{invoiceDate.ToString(\u0022yyyyMMddhhmmss\u0022)}-{customerId.Substring(0, 4)}\u0022"
              },
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "System.DateTime",
                "Name": "ToString",
                "Arguments": [
                  {
                    "Type": "string",
                    "Text": "yyyyMMddhhmmss"
                  }
                ]
              },
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "string",
                "Name": "Substring",
                "Arguments": [
                  {
                    "Type": "int",
                    "Text": "0"
                  },
                  {
                    "Type": "int",
                    "Text": "4"
                  }
                ]
              },
              {
                "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                "Left": "InvoiceDate",
                "Operator": "=",
                "Right": "invoiceDate.Date"
              },
              {
                "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                "Left": "CustomerId",
                "Operator": "=",
                "Right": "customer.CustomerId"
              },
              {
                "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                "Left": "JobIds",
                "Operator": "=",
                "Right": "string.Join(\u0027|\u0027, jobsPerCustomer.Select(j =\u003E j.JobId))"
              },
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "string",
                "Name": "Join",
                "Arguments": [
                  {
                    "Type": "char",
                    "Text": "|"
                  },
                  {
                    "Type": "System.Collections.Generic.IEnumerable\u003Cstring\u003E",
                    "Text": "jobsPerCustomer.Select(j =\u003E j.JobId)"
                  }
                ]
              },
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "System.Linq.Enumerable",
                "Name": "Select",
                "Arguments": [
                  {
                    "Type": "System.Func\u003CPitstop.InvoiceService.Model.MaintenanceJob, string\u003E",
                    "Text": "j =\u003E j.JobId"
                  }
                ]
              },
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "System.Text.StringBuilder",
                "Name": "StringBuilder"
              },
              {
                "$type": "DendroDocs.ForEach, DendroDocs.Shared",
                "Expression": "job in jobsPerCustomer",
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.DateTime",
                    "Name": "Subtract",
                    "Arguments": [
                      {
                        "Type": "System.DateTime",
                        "Text": "job.StartTime.Value"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Math",
                    "Name": "Round",
                    "Arguments": [
                      {
                        "Type": "decimal",
                        "Text": "(decimal)duration.TotalHours * HOURLY_RATE"
                      },
                      {
                        "Type": "int",
                        "Text": "2"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "totalAmount",
                    "Operator": "\u002B=",
                    "Right": "amount"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Text.StringBuilder",
                    "Name": "AppendLine",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "{job.EndTime.Value.ToString(\u0022dd-MM-yyyy\u0022)} : {job.Description} on vehicle with license {job.LicenseNumber} - Duration: {duration.TotalHours} hour - Amount: \u0026euro; {amount}"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.DateTime",
                    "Name": "ToString",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "dd-MM-yyyy"
                      }
                    ]
                  }
                ]
              },
              {
                "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                "Left": "invoice.Specification",
                "Operator": "=",
                "Right": "specification.ToString()"
              },
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "System.Text.StringBuilder",
                "Name": "ToString"
              },
              {
                "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                "Left": "invoice.Amount",
                "Operator": "=",
                "Right": "totalAmount"
              },
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "Pitstop.InvoiceService.InvoiceWorker",
                "Name": "SendInvoice",
                "Arguments": [
                  {
                    "Type": "Pitstop.InvoiceService.Model.Customer",
                    "Text": "customer"
                  },
                  {
                    "Type": "Pitstop.InvoiceService.Model.Invoice",
                    "Text": "invoice"
                  }
                ]
              },
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "Pitstop.InvoiceService.Repositories.IInvoiceRepository",
                "Name": "RegisterInvoiceAsync",
                "Arguments": [
                  {
                    "Type": "Pitstop.InvoiceService.Model.Invoice",
                    "Text": "invoice"
                  }
                ]
              },
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "Serilog.Log",
                "Name": "Information",
                "Arguments": [
                  {
                    "Type": "string",
                    "Text": "Invoice {Id} sent to {Customer}"
                  },
                  {
                    "Type": "string",
                    "Text": "invoice.InvoiceId"
                  },
                  {
                    "Type": "string",
                    "Text": "customer.Name"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.InvoiceService.Model.Customer",
            "Name": "customer"
          },
          {
            "Type": "Pitstop.InvoiceService.Model.Invoice",
            "Name": "invoice"
          }
        ],
        "Name": "SendInvoice",
        "Modifiers": 260,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "StringBuilder"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "\u003Chtm\u003E\u003Cbody style=\u0027width: 1150px; font-family: Arial;\u0027\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "\u003Cimage src=\u0027cid:banner.jpg\u0027\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "\u003Ctable style=\u0027width: 100%; border: 0px; font-size: 25pt;\u0027\u003E\u003Ctr\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "\u003Ctd\u003EPITSTOP GARAGE\u003C/td\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "\u003Ctd style=\u0027text-align: right;\u0027\u003EINVOICE\u003C/td\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "\u003C/tr\u003E\u003C/table\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "\u003Chr\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "\u003Ctable style=\u0027width: 100%; border: 0px;\u0027\u003E\u003Ctr\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "\u003Ctd width=\u0027150px\u0027 valign=\u0027top\u0027\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Invoice reference\u003Cbr/\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Invoice date\u003Cbr/\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Amount\u003Cbr/\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Payment due by\u003Cbr/\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "\u003C/td\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "\u003Ctd valign=\u0027top\u0027\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": ": {invoice.InvoiceId}\u003Cbr/\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": ": {invoice.InvoiceDate.ToString(\u0022dd-MM-yyyy\u0022)}\u003Cbr/\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.DateTime",
            "Name": "ToString",
            "Arguments": [
              {
                "Type": "string",
                "Text": "dd-MM-yyyy"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": ": \u0026euro; {invoice.Amount}\u003Cbr/\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": ": {invoice.InvoiceDate.AddDays(30).ToString(\u0022dd-MM-yyyy\u0022)}\u003Cbr/\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.DateTime",
            "Name": "ToString",
            "Arguments": [
              {
                "Type": "string",
                "Text": "dd-MM-yyyy"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.DateTime",
            "Name": "AddDays",
            "Arguments": [
              {
                "Type": "int",
                "Text": "30"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "\u003C/td\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "\u003Ctd width=\u002750px\u0027 valign=\u0027top\u0027\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "To:"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "\u003C/td\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "\u003Ctd valign=\u0027top\u0027\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "{customer.Name}\u003Cbr/\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "{customer.Address}\u003Cbr/\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "{customer.PostalCode}\u003Cbr/\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "{customer.City}\u003Cbr/\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "\u003C/td\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "\u003C/tr\u003E\u003C/table\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "\u003Chr\u003E\u003Cbr/\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Dear {customer.Name},\u003Cbr/\u003E\u003Cbr/\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Hereby we send you an invoice for maintenance we executed on your vehicle(s):\u003Cbr/\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "\u003Col\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.ForEach, DendroDocs.Shared",
            "Expression": "specificationLine in invoice.Specification.Split(\u0027\\n\u0027)",
            "Statements": [
              {
                "$type": "DendroDocs.If, DendroDocs.Shared",
                "Sections": [
                  {
                    "Condition": "specificationLine.Length \u003E 0",
                    "Statements": [
                      {
                        "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                        "ContainingType": "System.Text.StringBuilder",
                        "Name": "AppendLine",
                        "Arguments": [
                          {
                            "Type": "string",
                            "Text": "\u003Cli\u003E{specificationLine}\u003C/li\u003E"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "\u003C/ol\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Total amount : \u0026euro; {invoice.Amount}\u003Cbr/\u003E\u003Cbr/\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Payment terms : Payment within 30 days of invoice date.\u003Cbr/\u003E\u003Cbr/\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Payment details\u003Cbr/\u003E\u003Cbr/\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "\u003Ctable style=\u0027width: 100%; border: 0px;\u0027\u003E\u003Ctr\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "\u003Ctd width=\u0027120px\u0027 valign=\u0027top\u0027\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Bank\u003Cbr/\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Name\u003Cbr/\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "IBAN\u003Cbr/\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Reference\u003Cbr/\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "\u003C/td\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "\u003Ctd valign=\u0027top\u0027\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": ": ING\u003Cbr/\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": ": Pitstop Garage\u003Cbr/\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": ": NL20INGB0001234567\u003Cbr/\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": ": {invoice.InvoiceId}\u003Cbr/\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "\u003C/td\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "\u003C/tr\u003E\u003C/table\u003E\u003Cbr/\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Greetings,\u003Cbr/\u003E\u003Cbr/\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "The PitStop crew\u003Cbr/\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "AppendLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "\u003C/htm\u003E\u003C/body\u003E"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Net.Mail.MailMessage",
            "Name": "MailMessage",
            "Arguments": [
              {
                "Type": "System.Net.Mail.MailAddress",
                "Text": "From = new MailAddress(\u0022invoicing@pitstop.nl\u0022)"
              },
              {
                "Type": "string",
                "Text": "Subject = $\u0022Pitstop Garage Invoice #{invoice.InvoiceId}\u0022"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "From",
            "Operator": "=",
            "Right": "new MailAddress(\u0022invoicing@pitstop.nl\u0022)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Net.Mail.MailAddress",
            "Name": "MailAddress",
            "Arguments": [
              {
                "Type": "string",
                "Text": "\u0022invoicing@pitstop.nl\u0022"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Subject",
            "Operator": "=",
            "Right": "$\u0022Pitstop Garage Invoice #{invoice.InvoiceId}\u0022"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Net.Mail.MailAddressCollection",
            "Name": "Add",
            "Arguments": [
              {
                "Type": "string",
                "Text": "pitstop@prestoprint.nl"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "mailMessage.Body",
            "Operator": "=",
            "Right": "body.ToString()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Text.StringBuilder",
            "Name": "ToString"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "mailMessage.IsBodyHtml",
            "Operator": "=",
            "Right": "true"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Net.Mail.Attachment",
            "Name": "Attachment",
            "Arguments": [
              {
                "Type": "string",
                "Text": "@\u0022Assets/banner.jpg\u0022"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "bannerImage.ContentId",
            "Operator": "=",
            "Right": "contentID"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "bannerImage.ContentDisposition.Inline",
            "Operator": "=",
            "Right": "true"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "bannerImage.ContentDisposition.DispositionType",
            "Operator": "=",
            "Right": "DispositionTypeNames.Inline"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Collections.ObjectModel.Collection\u003CSystem.Net.Mail.Attachment\u003E",
            "Name": "Add",
            "Arguments": [
              {
                "Type": "System.Net.Mail.Attachment",
                "Text": "bannerImage"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.InvoiceService.CommunicationChannels.IEmailCommunicator",
            "Name": "SendEmailAsync",
            "Arguments": [
              {
                "Type": "System.Net.Mail.MailMessage",
                "Text": "mailMessage"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.InvoiceService.Model.Customer",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "string",
        "Name": "CustomerId",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "Name",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "Address",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "PostalCode",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "City",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.InvoiceService.Model.Invoice",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "string",
        "Name": "InvoiceId",
        "Modifiers": 2
      },
      {
        "Type": "System.DateTime",
        "Name": "InvoiceDate",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "CustomerId",
        "Modifiers": 2
      },
      {
        "Type": "decimal",
        "Name": "Amount",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "Specification",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "JobIds",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.InvoiceService.Model.MaintenanceJob",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "string",
        "Name": "JobId",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "LicenseNumber",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "CustomerId",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "Description",
        "Modifiers": 2
      },
      {
        "Type": "System.DateTime?",
        "Name": "StartTime",
        "Modifiers": 2
      },
      {
        "Type": "System.DateTime?",
        "Name": "EndTime",
        "Modifiers": 2
      },
      {
        "Type": "bool",
        "Name": "Finished",
        "Modifiers": 2
      },
      {
        "Type": "bool",
        "Name": "InvoiceSent",
        "Modifiers": 2
      }
    ]
  },
  {
    "Type": 1,
    "FullName": "Pitstop.InvoiceService.Repositories.IInvoiceRepository",
    "Modifiers": 2,
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "Pitstop.InvoiceService.Model.Customer",
            "Name": "customer"
          }
        ],
        "Name": "RegisterCustomerAsync",
        "ReturnType": "System.Threading.Tasks.Task"
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "customerId"
          }
        ],
        "Name": "GetCustomerAsync",
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.InvoiceService.Model.Customer\u003E"
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.InvoiceService.Model.MaintenanceJob",
            "Name": "job"
          }
        ],
        "Name": "RegisterMaintenanceJobAsync",
        "ReturnType": "System.Threading.Tasks.Task"
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "jobId"
          },
          {
            "Type": "System.DateTime",
            "Name": "startTime"
          },
          {
            "Type": "System.DateTime",
            "Name": "endTime"
          }
        ],
        "Name": "MarkMaintenanceJobAsFinished",
        "ReturnType": "System.Threading.Tasks.Task"
      },
      {
        "Name": "GetMaintenanceJobsToBeInvoicedAsync",
        "ReturnType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.IEnumerable\u003CPitstop.InvoiceService.Model.MaintenanceJob\u003E\u003E"
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.InvoiceService.Model.Invoice",
            "Name": "invoice"
          }
        ],
        "Name": "RegisterInvoiceAsync",
        "ReturnType": "System.Threading.Tasks.Task"
      }
    ]
  },
  {
    "FullName": "Pitstop.InvoiceService.Repositories.SqlServerInvoiceRepository",
    "BaseTypes": [
      "Pitstop.InvoiceService.Repositories.IInvoiceRepository"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "string",
        "Name": "_connectionString"
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "connectionString"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_connectionString",
            "Operator": "=",
            "Right": "connectionString"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Information",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Initialize Database"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task",
            "Name": "Wait"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.AsyncPolicy",
            "Name": "ExecuteAsync",
            "Arguments": [
              {
                "Type": "System.Func\u003CSystem.Threading.Tasks.Task\u003E",
                "Text": "InitializeDBAsync"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.AsyncRetrySyntax",
            "Name": "WaitAndRetryAsync",
            "Arguments": [
              {
                "Type": "int",
                "Text": "10"
              },
              {
                "Type": "System.Func\u003Cint, System.TimeSpan\u003E",
                "Text": "r =\u003E TimeSpan.FromSeconds(10)"
              },
              {
                "Type": "System.Action\u003CSystem.Exception, System.TimeSpan\u003E",
                "Text": "(ex, ts) =\u003E { Log.Error(\u0022Error connecting to DB. Retrying in 10 sec.\u0022); }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.Policy",
            "Name": "Handle\u003CException\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.TimeSpan",
            "Name": "FromSeconds",
            "Arguments": [
              {
                "Type": "int",
                "Text": "10"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Error",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Error connecting to DB. Retrying in 10 sec."
              }
            ]
          }
        ],
        "Name": "SqlServerInvoiceRepository",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "customerId"
          }
        ],
        "Name": "GetCustomerAsync",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.InvoiceService.Model.Customer\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.SqlClient.SqlConnection",
            "Name": "SqlConnection",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_connectionString"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await conn.QueryFirstOrDefaultAsync\u003CCustomer\u003E(\u0022select * from Customer where CustomerId = @CustomerId\u0022,\r\n                    new { CustomerId = customerId })"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Dapper.SqlMapper",
            "Name": "QueryFirstOrDefaultAsync\u003CCustomer\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "select * from Customer where CustomerId = @CustomerId"
              },
              {
                "Type": "\u003Canonymous type: string CustomerId\u003E",
                "Text": "new { CustomerId = customerId }"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.InvoiceService.Model.MaintenanceJob",
            "Name": "job"
          }
        ],
        "Name": "RegisterMaintenanceJobAsync",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.SqlClient.SqlConnection",
            "Name": "SqlConnection",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_connectionString"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Dapper.SqlMapper",
            "Name": "ExecuteAsync",
            "Arguments": [
              {
                "Type": "string",
                "Text": "sql"
              },
              {
                "Type": "Pitstop.InvoiceService.Model.MaintenanceJob",
                "Text": "job"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.InvoiceService.Model.Customer",
            "Name": "customer"
          }
        ],
        "Name": "RegisterCustomerAsync",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.SqlClient.SqlConnection",
            "Name": "SqlConnection",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_connectionString"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Dapper.SqlMapper",
            "Name": "ExecuteAsync",
            "Arguments": [
              {
                "Type": "string",
                "Text": "sql"
              },
              {
                "Type": "Pitstop.InvoiceService.Model.Customer",
                "Text": "customer"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "jobId"
          },
          {
            "Type": "System.DateTime",
            "Name": "startTime"
          },
          {
            "Type": "System.DateTime",
            "Name": "endTime"
          }
        ],
        "Name": "MarkMaintenanceJobAsFinished",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.SqlClient.SqlConnection",
            "Name": "SqlConnection",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_connectionString"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Dapper.SqlMapper",
            "Name": "ExecuteAsync",
            "Arguments": [
              {
                "Type": "string",
                "Text": "query"
              },
              {
                "Type": "\u003Canonymous type: string JobId, System.DateTime StartTime, System.DateTime EndTime\u003E",
                "Text": "new { JobId = jobId, StartTime = startTime, EndTime = endTime }"
              }
            ]
          }
        ]
      },
      {
        "Name": "GetMaintenanceJobsToBeInvoicedAsync",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.IEnumerable\u003CPitstop.InvoiceService.Model.MaintenanceJob\u003E\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.SqlClient.SqlConnection",
            "Name": "SqlConnection",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_connectionString"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await conn.QueryAsync\u003CMaintenanceJob\u003E(query)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Dapper.SqlMapper",
            "Name": "QueryAsync\u003CMaintenanceJob\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "query"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.InvoiceService.Model.Invoice",
            "Name": "invoice"
          }
        ],
        "Name": "RegisterInvoiceAsync",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.SqlClient.SqlConnection",
            "Name": "SqlConnection",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_connectionString"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Dapper.SqlMapper",
            "Name": "ExecuteAsync",
            "Arguments": [
              {
                "Type": "string",
                "Text": "sql"
              },
              {
                "Type": "Pitstop.InvoiceService.Model.Invoice",
                "Text": "invoice"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Linq.Enumerable",
            "Name": "Select",
            "Arguments": [
              {
                "Type": "System.Func\u003Cstring, \u003Canonymous type: string JobId\u003E\u003E",
                "Text": "jobId =\u003E new { JobId = jobId }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "string",
            "Name": "Split",
            "Arguments": [
              {
                "Type": "char",
                "Text": "|"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "sql",
            "Operator": "=",
            "Right": "\u0022update MaintenanceJob \u0022 \u002B\r\n                    \u0022set InvoiceSent = 1 \u0022 \u002B\r\n                    \u0022where JobId = @JobId \u0022"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Dapper.SqlMapper",
            "Name": "ExecuteAsync",
            "Arguments": [
              {
                "Type": "string",
                "Text": "sql"
              },
              {
                "Type": "System.Collections.Generic.IEnumerable\u003C\u003Canonymous type: string JobId\u003E\u003E",
                "Text": "jobIds"
              }
            ]
          }
        ]
      },
      {
        "Name": "InitializeDBAsync",
        "Modifiers": 260,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.SqlClient.SqlConnection",
            "Name": "SqlConnection",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_connectionString.Replace(\u0022Invoicing\u0022, \u0022master\u0022)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "string",
            "Name": "Replace",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Invoicing"
              },
              {
                "Type": "string",
                "Text": "master"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.Common.DbConnection",
            "Name": "OpenAsync"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Dapper.SqlMapper",
            "Name": "ExecuteAsync",
            "Arguments": [
              {
                "Type": "string",
                "Text": "sql"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.SqlClient.SqlConnection",
            "Name": "SqlConnection",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_connectionString"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.Common.DbConnection",
            "Name": "OpenAsync"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Dapper.SqlMapper",
            "Name": "ExecuteAsync",
            "Arguments": [
              {
                "Type": "string",
                "Text": "sql"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.NotificationService.Events.CustomerRegistered",
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.Event"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "string",
        "Name": "CustomerId",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "Name",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "TelephoneNumber",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "EmailAddress",
        "Modifiers": 130
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          },
          {
            "Type": "string",
            "Name": "customerId"
          },
          {
            "Type": "string",
            "Name": "name"
          },
          {
            "Type": "string",
            "Name": "telephoneNumber"
          },
          {
            "Type": "string",
            "Name": "emailAddress"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "CustomerId",
            "Operator": "=",
            "Right": "customerId"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Name",
            "Operator": "=",
            "Right": "name"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "TelephoneNumber",
            "Operator": "=",
            "Right": "telephoneNumber"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "EmailAddress",
            "Operator": "=",
            "Right": "emailAddress"
          }
        ],
        "Name": "CustomerRegistered",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.NotificationService.Events.DayHasPassed",
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.Event"
    ],
    "Modifiers": 2,
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          }
        ],
        "Name": "DayHasPassed",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.NotificationService.Events.MaintenanceJobFinished",
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.Event"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "string",
        "Name": "JobId",
        "Modifiers": 130
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          },
          {
            "Type": "string",
            "Name": "jobId"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "JobId",
            "Operator": "=",
            "Right": "jobId"
          }
        ],
        "Name": "MaintenanceJobFinished",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.NotificationService.Events.MaintenanceJobPlanned",
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.Event"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "System.Guid",
        "Name": "JobId",
        "Modifiers": 130
      },
      {
        "Type": "System.DateTime",
        "Name": "StartTime",
        "Modifiers": 130
      },
      {
        "Type": "System.DateTime",
        "Name": "EndTime",
        "Modifiers": 130
      },
      {
        "Type": "(string Id, string Name, string TelephoneNumber)",
        "Name": "CustomerInfo",
        "Modifiers": 130
      },
      {
        "Type": "(string LicenseNumber, string Brand, string Type)",
        "Name": "VehicleInfo",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "Description",
        "Modifiers": 130
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          },
          {
            "Type": "System.Guid",
            "Name": "jobId"
          },
          {
            "Type": "System.DateTime",
            "Name": "startTime"
          },
          {
            "Type": "System.DateTime",
            "Name": "endTime"
          },
          {
            "Type": "(string Id, string Name, string TelephoneNumber)",
            "Name": "customerInfo"
          },
          {
            "Type": "(string LicenseNumber, string Brand, string Type)",
            "Name": "vehicleInfo"
          },
          {
            "Type": "string",
            "Name": "description"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "JobId",
            "Operator": "=",
            "Right": "jobId"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "StartTime",
            "Operator": "=",
            "Right": "startTime"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "EndTime",
            "Operator": "=",
            "Right": "endTime"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "CustomerInfo",
            "Operator": "=",
            "Right": "customerInfo"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "VehicleInfo",
            "Operator": "=",
            "Right": "vehicleInfo"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Description",
            "Operator": "=",
            "Right": "description"
          }
        ],
        "Name": "MaintenanceJobPlanned",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.NotificationService.Model.Customer",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "string",
        "Name": "CustomerId",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "Name",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "TelephoneNumber",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "EmailAddress",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.NotificationService.Model.MaintenanceJob",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "string",
        "Name": "JobId",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "LicenseNumber",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "CustomerId",
        "Modifiers": 2
      },
      {
        "Type": "System.DateTime",
        "Name": "StartTime",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "Description",
        "Modifiers": 2
      }
    ]
  },
  {
    "Type": 1,
    "FullName": "Pitstop.NotificationService.NotificationChannels.IEmailNotifier",
    "Modifiers": 2,
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "to"
          },
          {
            "Type": "string",
            "Name": "from"
          },
          {
            "Type": "string",
            "Name": "subject"
          },
          {
            "Type": "string",
            "Name": "body"
          }
        ],
        "Name": "SendEmailAsync",
        "ReturnType": "System.Threading.Tasks.Task"
      }
    ]
  },
  {
    "FullName": "Pitstop.NotificationService.NotificationChannels.SMTPEmailNotifier",
    "BaseTypes": [
      "Pitstop.NotificationService.NotificationChannels.IEmailNotifier"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "string",
        "Name": "_smptServer"
      },
      {
        "Type": "int",
        "Name": "_smtpPort"
      },
      {
        "Type": "string",
        "Name": "_userName"
      },
      {
        "Type": "string",
        "Name": "_password"
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "smtpServer"
          },
          {
            "Type": "int",
            "Name": "smtpPort"
          },
          {
            "Type": "string",
            "Name": "userName"
          },
          {
            "Type": "string",
            "Name": "password"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_smptServer",
            "Operator": "=",
            "Right": "smtpServer"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_smtpPort",
            "Operator": "=",
            "Right": "smtpPort"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_userName",
            "Operator": "=",
            "Right": "userName"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_password",
            "Operator": "=",
            "Right": "password"
          }
        ],
        "Name": "SMTPEmailNotifier",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "to"
          },
          {
            "Type": "string",
            "Name": "from"
          },
          {
            "Type": "string",
            "Name": "subject"
          },
          {
            "Type": "string",
            "Name": "body"
          }
        ],
        "Name": "SendEmailAsync",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Net.Mail.SmtpClient",
            "Name": "SmtpClient",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_smptServer"
              },
              {
                "Type": "int",
                "Text": "_smtpPort"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "client.UseDefaultCredentials",
            "Operator": "=",
            "Right": "false"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "client.Credentials",
            "Operator": "=",
            "Right": "new NetworkCredential(\u0022_username\u0022, \u0022_password\u0022)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Net.NetworkCredential",
            "Name": "NetworkCredential",
            "Arguments": [
              {
                "Type": "string",
                "Text": "\u0022_username\u0022"
              },
              {
                "Type": "string",
                "Text": "\u0022_password\u0022"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Net.Mail.MailMessage",
            "Name": "MailMessage"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "mailMessage.From",
            "Operator": "=",
            "Right": "new MailAddress(from)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Net.Mail.MailAddress",
            "Name": "MailAddress",
            "Arguments": [
              {
                "Type": "string",
                "Text": "from"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Net.Mail.MailAddressCollection",
            "Name": "Add",
            "Arguments": [
              {
                "Type": "string",
                "Text": "to"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "mailMessage.Body",
            "Operator": "=",
            "Right": "body"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "mailMessage.Subject",
            "Operator": "=",
            "Right": "subject"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task",
            "Name": "ContinueWith",
            "Arguments": [
              {
                "Type": "System.Action\u003CSystem.Threading.Tasks.Task\u003E",
                "Text": "_ =\u003E Log.Information(\u0022Notification mail sent to {Recipient}.\u0022, to)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.Policy",
            "Name": "Execute",
            "Arguments": [
              {
                "Type": "System.Func\u003CSystem.Threading.Tasks.Task\u003E",
                "Text": "() =\u003E client.SendMailAsync(mailMessage)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.RetrySyntax",
            "Name": "WaitAndRetry",
            "Arguments": [
              {
                "Type": "int",
                "Text": "3"
              },
              {
                "Type": "System.Func\u003Cint, System.TimeSpan\u003E",
                "Text": "r =\u003E TimeSpan.FromSeconds(2)"
              },
              {
                "Type": "System.Action\u003CSystem.Exception, System.TimeSpan\u003E",
                "Text": "(ex, ts) =\u003E { Log.Error(\u0022Error sending mail. Retrying in 2 sec.\u0022); }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.Policy",
            "Name": "Handle\u003CException\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.TimeSpan",
            "Name": "FromSeconds",
            "Arguments": [
              {
                "Type": "int",
                "Text": "2"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Error",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Error sending mail. Retrying in 2 sec."
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Net.Mail.SmtpClient",
            "Name": "SendMailAsync",
            "Arguments": [
              {
                "Type": "System.Net.Mail.MailMessage",
                "Text": "mailMessage"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Information",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Notification mail sent to {Recipient}."
              },
              {
                "Type": "string",
                "Text": "to"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.NotificationService.NotificationWorker",
    "BaseTypes": [
      "Microsoft.Extensions.Hosting.IHostedService",
      "Pitstop.Infrastructure.Messaging.IMessageHandlerCallback"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "Pitstop.Infrastructure.Messaging.IMessageHandler",
        "Name": "_messageHandler"
      },
      {
        "Type": "Pitstop.NotificationService.Repositories.INotificationRepository",
        "Name": "_repo"
      },
      {
        "Type": "Pitstop.NotificationService.NotificationChannels.IEmailNotifier",
        "Name": "_emailNotifier"
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "Pitstop.Infrastructure.Messaging.IMessageHandler",
            "Name": "messageHandler"
          },
          {
            "Type": "Pitstop.NotificationService.Repositories.INotificationRepository",
            "Name": "repo"
          },
          {
            "Type": "Pitstop.NotificationService.NotificationChannels.IEmailNotifier",
            "Name": "emailNotifier"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_messageHandler",
            "Operator": "=",
            "Right": "messageHandler"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_repo",
            "Operator": "=",
            "Right": "repo"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_emailNotifier",
            "Operator": "=",
            "Right": "emailNotifier"
          }
        ],
        "Name": "NotificationWorker",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "System.Threading.CancellationToken",
            "Name": "cancellationToken"
          }
        ],
        "Name": "StartAsync",
        "Modifiers": 2,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.Infrastructure.Messaging.IMessageHandler",
            "Name": "Start",
            "Arguments": [
              {
                "Type": "Pitstop.NotificationService.NotificationWorker",
                "Text": "this"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "Task.CompletedTask"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "System.Threading.CancellationToken",
            "Name": "cancellationToken"
          }
        ],
        "Name": "StopAsync",
        "Modifiers": 2,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.Infrastructure.Messaging.IMessageHandler",
            "Name": "Stop"
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "Task.CompletedTask"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "messageType"
          },
          {
            "Type": "string",
            "Name": "message"
          }
        ],
        "Name": "HandleMessageAsync",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task\u003Cbool\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.Infrastructure.Messaging.MessageSerializer",
            "Name": "Deserialize",
            "Arguments": [
              {
                "Type": "string",
                "Text": "message"
              }
            ]
          },
          {
            "$type": "DendroDocs.Switch, DendroDocs.Shared",
            "Sections": [
              {
                "Labels": [
                  "\u0022CustomerRegistered\u0022"
                ],
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.NotificationService.NotificationWorker",
                    "Name": "HandleAsync",
                    "Arguments": [
                      {
                        "Type": "Pitstop.NotificationService.Events.CustomerRegistered",
                        "Text": "messageObject.ToObject\u003CCustomerRegistered\u003E()"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Newtonsoft.Json.Linq.JToken",
                    "Name": "ToObject\u003CCustomerRegistered\u003E"
                  }
                ]
              },
              {
                "Labels": [
                  "\u0022MaintenanceJobPlanned\u0022"
                ],
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.NotificationService.NotificationWorker",
                    "Name": "HandleAsync",
                    "Arguments": [
                      {
                        "Type": "Pitstop.NotificationService.Events.MaintenanceJobPlanned",
                        "Text": "messageObject.ToObject\u003CMaintenanceJobPlanned\u003E()"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Newtonsoft.Json.Linq.JToken",
                    "Name": "ToObject\u003CMaintenanceJobPlanned\u003E"
                  }
                ]
              },
              {
                "Labels": [
                  "\u0022MaintenanceJobFinished\u0022"
                ],
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.NotificationService.NotificationWorker",
                    "Name": "HandleAsync",
                    "Arguments": [
                      {
                        "Type": "Pitstop.NotificationService.Events.MaintenanceJobFinished",
                        "Text": "messageObject.ToObject\u003CMaintenanceJobFinished\u003E()"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Newtonsoft.Json.Linq.JToken",
                    "Name": "ToObject\u003CMaintenanceJobFinished\u003E"
                  }
                ]
              },
              {
                "Labels": [
                  "\u0022DayHasPassed\u0022"
                ],
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.NotificationService.NotificationWorker",
                    "Name": "HandleAsync",
                    "Arguments": [
                      {
                        "Type": "Pitstop.NotificationService.Events.DayHasPassed",
                        "Text": "messageObject.ToObject\u003CDayHasPassed\u003E()"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Newtonsoft.Json.Linq.JToken",
                    "Name": "ToObject\u003CDayHasPassed\u003E"
                  }
                ]
              },
              {
                "Labels": [
                  "default"
                ]
              }
            ],
            "Expression": "messageType"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Error",
            "Arguments": [
              {
                "Type": "System.Exception",
                "Text": "ex"
              },
              {
                "Type": "string",
                "Text": "Error while handling {messageType} event."
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "true"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.NotificationService.Events.CustomerRegistered",
            "Name": "cr"
          }
        ],
        "Name": "HandleAsync",
        "Modifiers": 260,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.NotificationService.Model.Customer",
            "Name": "Customer",
            "Arguments": [
              {
                "Type": "string",
                "Text": "CustomerId = cr.CustomerId"
              },
              {
                "Type": "string",
                "Text": "Name = cr.Name"
              },
              {
                "Type": "string",
                "Text": "TelephoneNumber = cr.TelephoneNumber"
              },
              {
                "Type": "string",
                "Text": "EmailAddress = cr.EmailAddress"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "CustomerId",
            "Operator": "=",
            "Right": "cr.CustomerId"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Name",
            "Operator": "=",
            "Right": "cr.Name"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "TelephoneNumber",
            "Operator": "=",
            "Right": "cr.TelephoneNumber"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "EmailAddress",
            "Operator": "=",
            "Right": "cr.EmailAddress"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Information",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Register customer: {Id}, {Name}, {TelephoneNumber}, {Email}"
              },
              {
                "Type": "string",
                "Text": "customer.CustomerId"
              },
              {
                "Type": "string",
                "Text": "customer.Name"
              },
              {
                "Type": "string",
                "Text": "customer.TelephoneNumber"
              },
              {
                "Type": "string",
                "Text": "customer.EmailAddress"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.NotificationService.Repositories.INotificationRepository",
            "Name": "RegisterCustomerAsync",
            "Arguments": [
              {
                "Type": "Pitstop.NotificationService.Model.Customer",
                "Text": "customer"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.NotificationService.Events.MaintenanceJobPlanned",
            "Name": "mjp"
          }
        ],
        "Name": "HandleAsync",
        "Modifiers": 260,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.NotificationService.Model.MaintenanceJob",
            "Name": "MaintenanceJob",
            "Arguments": [
              {
                "Type": "string",
                "Text": "JobId = mjp.JobId.ToString()"
              },
              {
                "Type": "string",
                "Text": "CustomerId = mjp.CustomerInfo.Id"
              },
              {
                "Type": "string",
                "Text": "LicenseNumber = mjp.VehicleInfo.LicenseNumber"
              },
              {
                "Type": "System.DateTime",
                "Text": "StartTime = mjp.StartTime"
              },
              {
                "Type": "string",
                "Text": "Description = mjp.Description"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "JobId",
            "Operator": "=",
            "Right": "mjp.JobId.ToString()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Guid",
            "Name": "ToString"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "CustomerId",
            "Operator": "=",
            "Right": "mjp.CustomerInfo.Id"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "LicenseNumber",
            "Operator": "=",
            "Right": "mjp.VehicleInfo.LicenseNumber"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "StartTime",
            "Operator": "=",
            "Right": "mjp.StartTime"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Description",
            "Operator": "=",
            "Right": "mjp.Description"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Information",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Register Maintenance Job: {Id}, {CustomerId}, {VehicleLicenseNumber}, {StartTime}, {Description}"
              },
              {
                "Type": "string",
                "Text": "job.JobId"
              },
              {
                "Type": "string",
                "Text": "job.CustomerId"
              },
              {
                "Type": "string",
                "Text": "job.LicenseNumber"
              },
              {
                "Type": "System.DateTime",
                "Text": "job.StartTime"
              },
              {
                "Type": "string",
                "Text": "job.Description"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.NotificationService.Repositories.INotificationRepository",
            "Name": "RegisterMaintenanceJobAsync",
            "Arguments": [
              {
                "Type": "Pitstop.NotificationService.Model.MaintenanceJob",
                "Text": "job"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.NotificationService.Events.MaintenanceJobFinished",
            "Name": "mjf"
          }
        ],
        "Name": "HandleAsync",
        "Modifiers": 260,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Information",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Remove finished Maintenance Job: {Id}"
              },
              {
                "Type": "string",
                "Text": "mjf.JobId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.NotificationService.Repositories.INotificationRepository",
            "Name": "RemoveMaintenanceJobsAsync",
            "Arguments": [
              {
                "Type": "string[]",
                "Text": "new string[] { mjf.JobId.ToString() }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "string",
            "Name": "ToString"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.NotificationService.Events.DayHasPassed",
            "Name": "dhp"
          }
        ],
        "Name": "HandleAsync",
        "Modifiers": 260,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.NotificationService.Repositories.INotificationRepository",
            "Name": "GetMaintenanceJobsForTodayAsync",
            "Arguments": [
              {
                "Type": "System.DateTime",
                "Text": "today"
              }
            ]
          },
          {
            "$type": "DendroDocs.ForEach, DendroDocs.Shared",
            "Expression": "jobsPerCustomer in jobsToNotify.GroupBy(job =\u003E job.CustomerId)",
            "Statements": [
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "Pitstop.NotificationService.Repositories.INotificationRepository",
                "Name": "GetCustomerAsync",
                "Arguments": [
                  {
                    "Type": "string",
                    "Text": "customerId"
                  }
                ]
              },
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "System.Text.StringBuilder",
                "Name": "StringBuilder"
              },
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "System.Text.StringBuilder",
                "Name": "AppendLine",
                "Arguments": [
                  {
                    "Type": "string",
                    "Text": "Dear {customer.Name},\\n"
                  }
                ]
              },
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "System.Text.StringBuilder",
                "Name": "AppendLine",
                "Arguments": [
                  {
                    "Type": "string",
                    "Text": "We would like to remind you that you have an appointment with us for maintenance on your vehicle(s):\\n"
                  }
                ]
              },
              {
                "$type": "DendroDocs.ForEach, DendroDocs.Shared",
                "Expression": "job in jobsPerCustomer",
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Text.StringBuilder",
                    "Name": "AppendLine",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "- {job.StartTime.ToString(\u0022dd-MM-yyyy\u0022)} at {job.StartTime.ToString(\u0022HH:mm\u0022)} : {job.Description} on vehicle with license-number {job.LicenseNumber}"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.DateTime",
                    "Name": "ToString",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "dd-MM-yyyy"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.DateTime",
                    "Name": "ToString",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "HH:mm"
                      }
                    ]
                  }
                ]
              },
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "System.Text.StringBuilder",
                "Name": "AppendLine",
                "Arguments": [
                  {
                    "Type": "string",
                    "Text": "\\nPlease make sure you\u0027re present at least 10 minutes before the (first) job is planned."
                  }
                ]
              },
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "System.Text.StringBuilder",
                "Name": "AppendLine",
                "Arguments": [
                  {
                    "Type": "string",
                    "Text": "Once arrived, you can notify your arrival at our front-desk.\\n"
                  }
                ]
              },
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "System.Text.StringBuilder",
                "Name": "AppendLine",
                "Arguments": [
                  {
                    "Type": "string",
                    "Text": "Greetings,\\n"
                  }
                ]
              },
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "System.Text.StringBuilder",
                "Name": "AppendLine",
                "Arguments": [
                  {
                    "Type": "string",
                    "Text": "The PitStop crew"
                  }
                ]
              },
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "Serilog.Log",
                "Name": "Information",
                "Arguments": [
                  {
                    "Type": "string",
                    "Text": "Sent notification to: {CustomerName}"
                  },
                  {
                    "Type": "string",
                    "Text": "customer.Name"
                  }
                ]
              },
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "Pitstop.NotificationService.NotificationChannels.IEmailNotifier",
                "Name": "SendEmailAsync",
                "Arguments": [
                  {
                    "Type": "string",
                    "Text": "customer.EmailAddress"
                  },
                  {
                    "Type": "string",
                    "Text": "noreply@pitstop.nl"
                  },
                  {
                    "Type": "string",
                    "Text": "Vehicle maintenance reminder"
                  },
                  {
                    "Type": "string",
                    "Text": "body.ToString()"
                  }
                ]
              },
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "System.Text.StringBuilder",
                "Name": "ToString"
              },
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "Pitstop.NotificationService.Repositories.INotificationRepository",
                "Name": "RemoveMaintenanceJobsAsync",
                "Arguments": [
                  {
                    "Type": "System.Collections.Generic.IEnumerable\u003Cstring\u003E",
                    "Text": "jobsPerCustomer.Select(job =\u003E job.JobId)"
                  }
                ]
              },
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "System.Linq.Enumerable",
                "Name": "Select",
                "Arguments": [
                  {
                    "Type": "System.Func\u003CPitstop.NotificationService.Model.MaintenanceJob, string\u003E",
                    "Text": "job =\u003E job.JobId"
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "Type": 1,
    "FullName": "Pitstop.NotificationService.Repositories.INotificationRepository",
    "Modifiers": 2,
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "Pitstop.NotificationService.Model.Customer",
            "Name": "customer"
          }
        ],
        "Name": "RegisterCustomerAsync",
        "ReturnType": "System.Threading.Tasks.Task"
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.NotificationService.Model.MaintenanceJob",
            "Name": "job"
          }
        ],
        "Name": "RegisterMaintenanceJobAsync",
        "ReturnType": "System.Threading.Tasks.Task"
      },
      {
        "Parameters": [
          {
            "Type": "System.DateTime",
            "Name": "date"
          }
        ],
        "Name": "GetMaintenanceJobsForTodayAsync",
        "ReturnType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.IEnumerable\u003CPitstop.NotificationService.Model.MaintenanceJob\u003E\u003E"
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "customerId"
          }
        ],
        "Name": "GetCustomerAsync",
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.NotificationService.Model.Customer\u003E"
      },
      {
        "Parameters": [
          {
            "Type": "System.Collections.Generic.IEnumerable\u003Cstring\u003E",
            "Name": "jobIds"
          }
        ],
        "Name": "RemoveMaintenanceJobsAsync",
        "ReturnType": "System.Threading.Tasks.Task"
      }
    ]
  },
  {
    "FullName": "Pitstop.NotificationService.Repositories.SqlServerNotificationRepository",
    "BaseTypes": [
      "Pitstop.NotificationService.Repositories.INotificationRepository"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "string",
        "Name": "_connectionString"
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "connectionString"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_connectionString",
            "Operator": "=",
            "Right": "connectionString"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Information",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Initialize Database"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task",
            "Name": "Wait"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.AsyncPolicy",
            "Name": "ExecuteAsync",
            "Arguments": [
              {
                "Type": "System.Func\u003CSystem.Threading.Tasks.Task\u003E",
                "Text": "InitializeDBAsync"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.AsyncRetrySyntax",
            "Name": "WaitAndRetryAsync",
            "Arguments": [
              {
                "Type": "int",
                "Text": "10"
              },
              {
                "Type": "System.Func\u003Cint, System.TimeSpan\u003E",
                "Text": "r =\u003E TimeSpan.FromSeconds(10)"
              },
              {
                "Type": "System.Action\u003CSystem.Exception, System.TimeSpan\u003E",
                "Text": "(ex, ts) =\u003E { Log.Error(\u0022Error connecting to DB. Retrying in 10 sec.\u0022); }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.Policy",
            "Name": "Handle\u003CException\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.TimeSpan",
            "Name": "FromSeconds",
            "Arguments": [
              {
                "Type": "int",
                "Text": "10"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Error",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Error connecting to DB. Retrying in 10 sec."
              }
            ]
          }
        ],
        "Name": "SqlServerNotificationRepository",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "customerId"
          }
        ],
        "Name": "GetCustomerAsync",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.NotificationService.Model.Customer\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.SqlClient.SqlConnection",
            "Name": "SqlConnection",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_connectionString"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await conn.QueryFirstOrDefaultAsync\u003CCustomer\u003E(\u0022select * from Customer where CustomerId = @CustomerId\u0022,\r\n                new { CustomerId = customerId })"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Dapper.SqlMapper",
            "Name": "QueryFirstOrDefaultAsync\u003CCustomer\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "select * from Customer where CustomerId = @CustomerId"
              },
              {
                "Type": "\u003Canonymous type: string CustomerId\u003E",
                "Text": "new { CustomerId = customerId }"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.NotificationService.Model.MaintenanceJob",
            "Name": "job"
          }
        ],
        "Name": "RegisterMaintenanceJobAsync",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.SqlClient.SqlConnection",
            "Name": "SqlConnection",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_connectionString"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Dapper.SqlMapper",
            "Name": "ExecuteAsync",
            "Arguments": [
              {
                "Type": "string",
                "Text": "sql"
              },
              {
                "Type": "Pitstop.NotificationService.Model.MaintenanceJob",
                "Text": "job"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.NotificationService.Model.Customer",
            "Name": "customer"
          }
        ],
        "Name": "RegisterCustomerAsync",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.SqlClient.SqlConnection",
            "Name": "SqlConnection",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_connectionString"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Dapper.SqlMapper",
            "Name": "ExecuteAsync",
            "Arguments": [
              {
                "Type": "string",
                "Text": "sql"
              },
              {
                "Type": "Pitstop.NotificationService.Model.Customer",
                "Text": "customer"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "System.DateTime",
            "Name": "date"
          }
        ],
        "Name": "GetMaintenanceJobsForTodayAsync",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.IEnumerable\u003CPitstop.NotificationService.Model.MaintenanceJob\u003E\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.SqlClient.SqlConnection",
            "Name": "SqlConnection",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_connectionString"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await conn.QueryAsync\u003CMaintenanceJob\u003E(\r\n                \u0022select * from MaintenanceJob where StartTime \u003E= @Today and StartTime \u003C @Tomorrow\u0022,\r\n                new { Today = date.Date, Tomorrow = date.AddDays(1).Date })"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Dapper.SqlMapper",
            "Name": "QueryAsync\u003CMaintenanceJob\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "select * from MaintenanceJob where StartTime \u003E= @Today and StartTime \u003C @Tomorrow"
              },
              {
                "Type": "\u003Canonymous type: System.DateTime Today, System.DateTime Tomorrow\u003E",
                "Text": "new { Today = date.Date, Tomorrow = date.AddDays(1).Date }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.DateTime",
            "Name": "AddDays",
            "Arguments": [
              {
                "Type": "int",
                "Text": "1"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "System.Collections.Generic.IEnumerable\u003Cstring\u003E",
            "Name": "jobIds"
          }
        ],
        "Name": "RemoveMaintenanceJobsAsync",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.SqlClient.SqlConnection",
            "Name": "SqlConnection",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_connectionString"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Dapper.SqlMapper",
            "Name": "ExecuteAsync",
            "Arguments": [
              {
                "Type": "string",
                "Text": "sql"
              },
              {
                "Type": "System.Collections.Generic.IEnumerable\u003C\u003Canonymous type: string JobId\u003E\u003E",
                "Text": "jobIds.Select(j =\u003E new { JobId = j })"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Linq.Enumerable",
            "Name": "Select",
            "Arguments": [
              {
                "Type": "System.Func\u003Cstring, \u003Canonymous type: string JobId\u003E\u003E",
                "Text": "j =\u003E new { JobId = j }"
              }
            ]
          }
        ]
      },
      {
        "Name": "InitializeDBAsync",
        "Modifiers": 260,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.SqlClient.SqlConnection",
            "Name": "SqlConnection",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_connectionString.Replace(\u0022Notification\u0022, \u0022master\u0022)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "string",
            "Name": "Replace",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Notification"
              },
              {
                "Type": "string",
                "Text": "master"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.Common.DbConnection",
            "Name": "OpenAsync"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Dapper.SqlMapper",
            "Name": "ExecuteAsync",
            "Arguments": [
              {
                "Type": "string",
                "Text": "sql"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.SqlClient.SqlConnection",
            "Name": "SqlConnection",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_connectionString"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.Common.DbConnection",
            "Name": "OpenAsync"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Dapper.SqlMapper",
            "Name": "ExecuteAsync",
            "Arguments": [
              {
                "Type": "string",
                "Text": "sql"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.TestUtils.TestDataGenerators",
    "Modifiers": 18,
    "Fields": [
      {
        "Type": "System.Random",
        "Initializer": "new Random ()",
        "Name": "_rnd",
        "Modifiers": 20
      },
      {
        "Type": "string",
        "Initializer": "DFGHJKLNPRSTXYZ",
        "Name": "_validLicenseNumberChars",
        "Modifiers": 20
      }
    ],
    "Methods": [
      {
        "Name": "GenerateRandomLicenseNumber",
        "Modifiers": 18,
        "DocumentationComments": {
          "Summary": "Generate random licensenumber."
        },
        "ReturnType": "string",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Random",
            "Name": "Next",
            "Arguments": [
              {
                "Type": "int",
                "Text": "1"
              },
              {
                "Type": "int",
                "Text": "9"
              }
            ]
          },
          {
            "$type": "DendroDocs.Switch, DendroDocs.Shared",
            "Sections": [
              {
                "Labels": [
                  "1"
                ],
                "Statements": [
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "licenseNumber",
                    "Operator": "=",
                    "Right": "string.Format(\u0022{0:00}-{1}-{2:00}\u0022, _rnd.Next(1, 99), GenerateRandomCharacters(2), _rnd.Next(1, 99))"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "string",
                    "Name": "Format",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "{0:00}-{1}-{2:00}"
                      },
                      {
                        "Type": "int",
                        "Text": "_rnd.Next(1, 99)"
                      },
                      {
                        "Type": "string",
                        "Text": "GenerateRandomCharacters(2)"
                      },
                      {
                        "Type": "int",
                        "Text": "_rnd.Next(1, 99)"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Random",
                    "Name": "Next",
                    "Arguments": [
                      {
                        "Type": "int",
                        "Text": "1"
                      },
                      {
                        "Type": "int",
                        "Text": "99"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.TestUtils.TestDataGenerators",
                    "Name": "GenerateRandomCharacters",
                    "Arguments": [
                      {
                        "Type": "int",
                        "Text": "2"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Random",
                    "Name": "Next",
                    "Arguments": [
                      {
                        "Type": "int",
                        "Text": "1"
                      },
                      {
                        "Type": "int",
                        "Text": "99"
                      }
                    ]
                  }
                ]
              },
              {
                "Labels": [
                  "2"
                ],
                "Statements": [
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "licenseNumber",
                    "Operator": "=",
                    "Right": "string.Format(\u0022{0}-{1:00}-{2}\u0022, GenerateRandomCharacters(2), _rnd.Next(1, 99), GenerateRandomCharacters(2))"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "string",
                    "Name": "Format",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "{0}-{1:00}-{2}"
                      },
                      {
                        "Type": "string",
                        "Text": "GenerateRandomCharacters(2)"
                      },
                      {
                        "Type": "int",
                        "Text": "_rnd.Next(1, 99)"
                      },
                      {
                        "Type": "string",
                        "Text": "GenerateRandomCharacters(2)"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.TestUtils.TestDataGenerators",
                    "Name": "GenerateRandomCharacters",
                    "Arguments": [
                      {
                        "Type": "int",
                        "Text": "2"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Random",
                    "Name": "Next",
                    "Arguments": [
                      {
                        "Type": "int",
                        "Text": "1"
                      },
                      {
                        "Type": "int",
                        "Text": "99"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.TestUtils.TestDataGenerators",
                    "Name": "GenerateRandomCharacters",
                    "Arguments": [
                      {
                        "Type": "int",
                        "Text": "2"
                      }
                    ]
                  }
                ]
              },
              {
                "Labels": [
                  "3"
                ],
                "Statements": [
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "licenseNumber",
                    "Operator": "=",
                    "Right": "string.Format(\u0022{0}-{1}-{2:00}\u0022, GenerateRandomCharacters(2), GenerateRandomCharacters(2), _rnd.Next(1, 99))"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "string",
                    "Name": "Format",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "{0}-{1}-{2:00}"
                      },
                      {
                        "Type": "string",
                        "Text": "GenerateRandomCharacters(2)"
                      },
                      {
                        "Type": "string",
                        "Text": "GenerateRandomCharacters(2)"
                      },
                      {
                        "Type": "int",
                        "Text": "_rnd.Next(1, 99)"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.TestUtils.TestDataGenerators",
                    "Name": "GenerateRandomCharacters",
                    "Arguments": [
                      {
                        "Type": "int",
                        "Text": "2"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.TestUtils.TestDataGenerators",
                    "Name": "GenerateRandomCharacters",
                    "Arguments": [
                      {
                        "Type": "int",
                        "Text": "2"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Random",
                    "Name": "Next",
                    "Arguments": [
                      {
                        "Type": "int",
                        "Text": "1"
                      },
                      {
                        "Type": "int",
                        "Text": "99"
                      }
                    ]
                  }
                ]
              },
              {
                "Labels": [
                  "4"
                ],
                "Statements": [
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "licenseNumber",
                    "Operator": "=",
                    "Right": "string.Format(\u0022{0:00}-{1}-{2}\u0022, _rnd.Next(1, 99), GenerateRandomCharacters(2), GenerateRandomCharacters(2))"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "string",
                    "Name": "Format",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "{0:00}-{1}-{2}"
                      },
                      {
                        "Type": "int",
                        "Text": "_rnd.Next(1, 99)"
                      },
                      {
                        "Type": "string",
                        "Text": "GenerateRandomCharacters(2)"
                      },
                      {
                        "Type": "string",
                        "Text": "GenerateRandomCharacters(2)"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Random",
                    "Name": "Next",
                    "Arguments": [
                      {
                        "Type": "int",
                        "Text": "1"
                      },
                      {
                        "Type": "int",
                        "Text": "99"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.TestUtils.TestDataGenerators",
                    "Name": "GenerateRandomCharacters",
                    "Arguments": [
                      {
                        "Type": "int",
                        "Text": "2"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.TestUtils.TestDataGenerators",
                    "Name": "GenerateRandomCharacters",
                    "Arguments": [
                      {
                        "Type": "int",
                        "Text": "2"
                      }
                    ]
                  }
                ]
              },
              {
                "Labels": [
                  "5"
                ],
                "Statements": [
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "licenseNumber",
                    "Operator": "=",
                    "Right": "string.Format(\u0022{0:00}-{1}-{2}\u0022, _rnd.Next(1, 99), GenerateRandomCharacters(3), _rnd.Next(1, 10))"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "string",
                    "Name": "Format",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "{0:00}-{1}-{2}"
                      },
                      {
                        "Type": "int",
                        "Text": "_rnd.Next(1, 99)"
                      },
                      {
                        "Type": "string",
                        "Text": "GenerateRandomCharacters(3)"
                      },
                      {
                        "Type": "int",
                        "Text": "_rnd.Next(1, 10)"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Random",
                    "Name": "Next",
                    "Arguments": [
                      {
                        "Type": "int",
                        "Text": "1"
                      },
                      {
                        "Type": "int",
                        "Text": "99"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.TestUtils.TestDataGenerators",
                    "Name": "GenerateRandomCharacters",
                    "Arguments": [
                      {
                        "Type": "int",
                        "Text": "3"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Random",
                    "Name": "Next",
                    "Arguments": [
                      {
                        "Type": "int",
                        "Text": "1"
                      },
                      {
                        "Type": "int",
                        "Text": "10"
                      }
                    ]
                  }
                ]
              },
              {
                "Labels": [
                  "6"
                ],
                "Statements": [
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "licenseNumber",
                    "Operator": "=",
                    "Right": "string.Format(\u0022{0}-{1}-{2:00}\u0022, _rnd.Next(1, 9), GenerateRandomCharacters(3), _rnd.Next(1, 10))"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "string",
                    "Name": "Format",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "{0}-{1}-{2:00}"
                      },
                      {
                        "Type": "int",
                        "Text": "_rnd.Next(1, 9)"
                      },
                      {
                        "Type": "string",
                        "Text": "GenerateRandomCharacters(3)"
                      },
                      {
                        "Type": "int",
                        "Text": "_rnd.Next(1, 10)"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Random",
                    "Name": "Next",
                    "Arguments": [
                      {
                        "Type": "int",
                        "Text": "1"
                      },
                      {
                        "Type": "int",
                        "Text": "9"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.TestUtils.TestDataGenerators",
                    "Name": "GenerateRandomCharacters",
                    "Arguments": [
                      {
                        "Type": "int",
                        "Text": "3"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Random",
                    "Name": "Next",
                    "Arguments": [
                      {
                        "Type": "int",
                        "Text": "1"
                      },
                      {
                        "Type": "int",
                        "Text": "10"
                      }
                    ]
                  }
                ]
              },
              {
                "Labels": [
                  "7"
                ],
                "Statements": [
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "licenseNumber",
                    "Operator": "=",
                    "Right": "string.Format(\u0022{0}-{1:000}-{2}\u0022, GenerateRandomCharacters(2), _rnd.Next(1, 999), GenerateRandomCharacters(1))"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "string",
                    "Name": "Format",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "{0}-{1:000}-{2}"
                      },
                      {
                        "Type": "string",
                        "Text": "GenerateRandomCharacters(2)"
                      },
                      {
                        "Type": "int",
                        "Text": "_rnd.Next(1, 999)"
                      },
                      {
                        "Type": "string",
                        "Text": "GenerateRandomCharacters(1)"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.TestUtils.TestDataGenerators",
                    "Name": "GenerateRandomCharacters",
                    "Arguments": [
                      {
                        "Type": "int",
                        "Text": "2"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Random",
                    "Name": "Next",
                    "Arguments": [
                      {
                        "Type": "int",
                        "Text": "1"
                      },
                      {
                        "Type": "int",
                        "Text": "999"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.TestUtils.TestDataGenerators",
                    "Name": "GenerateRandomCharacters",
                    "Arguments": [
                      {
                        "Type": "int",
                        "Text": "1"
                      }
                    ]
                  }
                ]
              },
              {
                "Labels": [
                  "8"
                ],
                "Statements": [
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "licenseNumber",
                    "Operator": "=",
                    "Right": "string.Format(\u0022{0}-{1:000}-{2}\u0022, GenerateRandomCharacters(1), _rnd.Next(1, 999), GenerateRandomCharacters(2))"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "string",
                    "Name": "Format",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "{0}-{1:000}-{2}"
                      },
                      {
                        "Type": "string",
                        "Text": "GenerateRandomCharacters(1)"
                      },
                      {
                        "Type": "int",
                        "Text": "_rnd.Next(1, 999)"
                      },
                      {
                        "Type": "string",
                        "Text": "GenerateRandomCharacters(2)"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.TestUtils.TestDataGenerators",
                    "Name": "GenerateRandomCharacters",
                    "Arguments": [
                      {
                        "Type": "int",
                        "Text": "1"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Random",
                    "Name": "Next",
                    "Arguments": [
                      {
                        "Type": "int",
                        "Text": "1"
                      },
                      {
                        "Type": "int",
                        "Text": "999"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.TestUtils.TestDataGenerators",
                    "Name": "GenerateRandomCharacters",
                    "Arguments": [
                      {
                        "Type": "int",
                        "Text": "2"
                      }
                    ]
                  }
                ]
              }
            ],
            "Expression": "type"
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "licenseNumber"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "int",
            "Name": "amount"
          }
        ],
        "Name": "GenerateRandomCharacters",
        "Modifiers": 20,
        "ReturnType": "string",
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "chars[i]",
            "Operator": "=",
            "Right": "_validLicenseNumberChars[_rnd.Next(_validLicenseNumberChars.Length - 1)]"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Random",
            "Name": "Next",
            "Arguments": [
              {
                "Type": "int",
                "Text": "1"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "new string (chars)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "string",
            "Name": "string",
            "Arguments": [
              {
                "Type": "char[]",
                "Text": "chars"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.TimeService.Events.DayHasPassed",
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.Event"
    ],
    "Modifiers": 2,
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          }
        ],
        "Name": "DayHasPassed",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.TimeService.TimeWorker",
    "BaseTypes": [
      "Microsoft.Extensions.Hosting.IHostedService"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "System.DateTime",
        "Name": "_lastCheck"
      },
      {
        "Type": "System.Threading.CancellationTokenSource",
        "Name": "_cancellationTokenSource"
      },
      {
        "Type": "System.Threading.Tasks.Task",
        "Name": "_task"
      },
      {
        "Type": "Pitstop.Infrastructure.Messaging.IMessagePublisher",
        "Name": "_messagePublisher"
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "Pitstop.Infrastructure.Messaging.IMessagePublisher",
            "Name": "messagePublisher"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_cancellationTokenSource",
            "Operator": "=",
            "Right": "new CancellationTokenSource()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.CancellationTokenSource",
            "Name": "CancellationTokenSource"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_lastCheck",
            "Operator": "=",
            "Right": "DateTime.Now"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_messagePublisher",
            "Operator": "=",
            "Right": "messagePublisher"
          }
        ],
        "Name": "TimeWorker",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "System.Threading.CancellationToken",
            "Name": "cancellationToken"
          }
        ],
        "Name": "StartAsync",
        "Modifiers": 2,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_task",
            "Operator": "=",
            "Right": "Task.Run(() =\u003E Worker(), _cancellationTokenSource.Token)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task",
            "Name": "Run",
            "Arguments": [
              {
                "Type": "System.Action",
                "Text": "() =\u003E Worker()"
              },
              {
                "Type": "System.Threading.CancellationToken",
                "Text": "_cancellationTokenSource.Token"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.TimeService.TimeWorker",
            "Name": "Worker"
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "Task.CompletedTask"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "System.Threading.CancellationToken",
            "Name": "cancellationToken"
          }
        ],
        "Name": "StopAsync",
        "Modifiers": 2,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.CancellationTokenSource",
            "Name": "Cancel"
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "Task.CompletedTask"
          }
        ]
      },
      {
        "Name": "Worker",
        "Modifiers": 260,
        "Statements": [
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "DateTime.Now.Subtract(_lastCheck).Days \u003E 0",
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Serilog.Log",
                    "Name": "Information",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "Day has passed!"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "_lastCheck",
                    "Operator": "=",
                    "Right": "DateTime.Now"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.DateTime",
                    "Name": "AddDays",
                    "Arguments": [
                      {
                        "Type": "int",
                        "Text": "-1"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.TimeService.Events.DayHasPassed",
                    "Name": "DayHasPassed",
                    "Arguments": [
                      {
                        "Type": "System.Guid",
                        "Text": "Guid.NewGuid()"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Guid",
                    "Name": "NewGuid"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.Infrastructure.Messaging.IMessagePublisher",
                    "Name": "PublishMessageAsync",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "e.MessageType"
                      },
                      {
                        "Type": "Pitstop.TimeService.Events.DayHasPassed",
                        "Text": "e"
                      },
                      {
                        "Type": "string",
                        "Text": ""
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Thread",
            "Name": "Sleep",
            "Arguments": [
              {
                "Type": "int",
                "Text": "10000"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.VehicleManagement.Commands.RegisterVehicle",
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.Command"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "string",
        "Name": "LicenseNumber",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "Brand",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "Type",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "OwnerId",
        "Modifiers": 130
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          },
          {
            "Type": "string",
            "Name": "licenseNumber"
          },
          {
            "Type": "string",
            "Name": "brand"
          },
          {
            "Type": "string",
            "Name": "type"
          },
          {
            "Type": "string",
            "Name": "ownerId"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "LicenseNumber",
            "Operator": "=",
            "Right": "licenseNumber"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Brand",
            "Operator": "=",
            "Right": "brand"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Type",
            "Operator": "=",
            "Right": "type"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "OwnerId",
            "Operator": "=",
            "Right": "ownerId"
          }
        ],
        "Name": "RegisterVehicle",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.VehicleManagement.Controllers.VehiclesController",
    "BaseTypes": [
      "Microsoft.AspNetCore.Mvc.Controller"
    ],
    "Modifiers": 2,
    "Attributes": [
      {
        "Type": "Microsoft.AspNetCore.Mvc.RouteAttribute",
        "Name": "Route",
        "Arguments": [
          {
            "Name": "template",
            "Type": "string",
            "Value": "/api/[controller]"
          }
        ]
      }
    ],
    "Fields": [
      {
        "Type": "string",
        "Initializer": "^((\\d{1,3}|[a-z]{1,3})-){2}(\\d{1,3}|[a-z]{1,3})$",
        "Name": "NUMBER_PATTERN",
        "Modifiers": 516
      },
      {
        "Type": "Pitstop.Infrastructure.Messaging.IMessagePublisher",
        "Name": "_messagePublisher"
      },
      {
        "Type": "Pitstop.VehicleManagement.DataAccess.VehicleManagementDBContext",
        "Name": "_dbContext"
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "Pitstop.VehicleManagement.DataAccess.VehicleManagementDBContext",
            "Name": "dbContext"
          },
          {
            "Type": "Pitstop.Infrastructure.Messaging.IMessagePublisher",
            "Name": "messagePublisher"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_dbContext",
            "Operator": "=",
            "Right": "dbContext"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_messagePublisher",
            "Operator": "=",
            "Right": "messagePublisher"
          }
        ],
        "Name": "VehiclesController",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Name": "GetAllAsync",
        "Modifiers": 258,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpGetAttribute",
            "Name": "HttpGet"
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "Ok(await _dbContext.Vehicles.ToListAsync())"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
            "Name": "Ok",
            "Arguments": [
              {
                "Type": "System.Collections.Generic.List\u003CPitstop.VehicleManagement.Model.Vehicle\u003E",
                "Text": "await _dbContext.Vehicles.ToListAsync()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions",
            "Name": "ToListAsync"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "licenseNumber"
          }
        ],
        "Name": "GetByLicenseNumber",
        "Modifiers": 258,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpGetAttribute",
            "Name": "HttpGet"
          },
          {
            "Type": "Microsoft.AspNetCore.Mvc.RouteAttribute",
            "Name": "Route",
            "Arguments": [
              {
                "Name": "{licenseNumber}",
                "Type": "string",
                "Value": "{licenseNumber}"
              },
              {
                "Name": "Name",
                "Type": "string",
                "Value": "GetByLicenseNumber"
              }
            ]
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions",
            "Name": "FirstOrDefaultAsync",
            "Arguments": [
              {
                "Type": "System.Linq.Expressions.Expression\u003CSystem.Func\u003CPitstop.VehicleManagement.Model.Vehicle, bool\u003E\u003E",
                "Text": "v =\u003E v.LicenseNumber == licenseNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "vehicle == null",
                "Statements": [
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "NotFound()"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
                    "Name": "NotFound"
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "Ok(vehicle)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
            "Name": "Ok",
            "Arguments": [
              {
                "Type": "Pitstop.VehicleManagement.Model.Vehicle",
                "Text": "vehicle"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.VehicleManagement.Commands.RegisterVehicle",
            "Name": "command",
            "Attributes": [
              {
                "Type": "Microsoft.AspNetCore.Mvc.FromBodyAttribute",
                "Name": "FromBody"
              }
            ]
          }
        ],
        "Name": "RegisterAsync",
        "Modifiers": 258,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpPostAttribute",
            "Name": "HttpPost"
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "ModelState.IsValid",
                "Statements": [
                  {
                    "$type": "DendroDocs.If, DendroDocs.Shared",
                    "Sections": [
                      {
                        "Condition": "!Regex.IsMatch(command.LicenseNumber, NUMBER_PATTERN, RegexOptions.IgnoreCase)",
                        "Statements": [
                          {
                            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                            "Expression": "BadRequest($\u0022The specified license-number \u0027{command.LicenseNumber}\u0027 was not in the correct format.\u0022)"
                          },
                          {
                            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                            "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
                            "Name": "BadRequest",
                            "Arguments": [
                              {
                                "Type": "string",
                                "Text": "The specified license-number \u0027{command.LicenseNumber}\u0027 was not in the correct format."
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.VehicleManagementAPI.Mappers.Mappers",
                    "Name": "MapToVehicle"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Microsoft.EntityFrameworkCore.DbSet\u003CPitstop.VehicleManagement.Model.Vehicle\u003E",
                    "Name": "Add",
                    "Arguments": [
                      {
                        "Type": "Pitstop.VehicleManagement.Model.Vehicle",
                        "Text": "vehicle"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Microsoft.EntityFrameworkCore.DbContext",
                    "Name": "SaveChangesAsync"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.VehicleManagement.Events.VehicleRegistered",
                    "Name": "FromCommand",
                    "Arguments": [
                      {
                        "Type": "Pitstop.VehicleManagement.Commands.RegisterVehicle",
                        "Text": "command"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.Infrastructure.Messaging.IMessagePublisher",
                    "Name": "PublishMessageAsync",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "e.MessageType"
                      },
                      {
                        "Type": "Pitstop.VehicleManagement.Events.VehicleRegistered",
                        "Text": "e"
                      },
                      {
                        "Type": "string",
                        "Text": ""
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "CreatedAtRoute(\u0022GetByLicenseNumber\u0022, new { licenseNumber = vehicle.LicenseNumber }, vehicle)"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
                    "Name": "CreatedAtRoute",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "GetByLicenseNumber"
                      },
                      {
                        "Type": "\u003Canonymous type: string licenseNumber\u003E",
                        "Text": "new { licenseNumber = vehicle.LicenseNumber }"
                      },
                      {
                        "Type": "Pitstop.VehicleManagement.Model.Vehicle",
                        "Text": "vehicle"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "BadRequest()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
            "Name": "BadRequest"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary",
            "Name": "AddModelError",
            "Arguments": [
              {
                "Type": "string",
                "Text": ""
              },
              {
                "Type": "string",
                "Text": "Unable to save changes. Try again, and if the problem persists see your system administrator."
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "StatusCode(StatusCodes.Status500InternalServerError)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
            "Name": "StatusCode",
            "Arguments": [
              {
                "Type": "int",
                "Text": "StatusCodes.Status500InternalServerError"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.VehicleManagement.DataAccess.VehicleManagementDBContext",
    "BaseTypes": [
      "Microsoft.EntityFrameworkCore.DbContext"
    ],
    "Modifiers": 2,
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "Microsoft.EntityFrameworkCore.DbContextOptions\u003CPitstop.VehicleManagement.DataAccess.VehicleManagementDBContext\u003E",
            "Name": "options"
          }
        ],
        "Name": "VehicleManagementDBContext",
        "Modifiers": 2
      }
    ],
    "Properties": [
      {
        "Type": "Microsoft.EntityFrameworkCore.DbSet\u003CPitstop.VehicleManagement.Model.Vehicle\u003E",
        "Name": "Vehicles",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "builder"
          }
        ],
        "Name": "OnModelCreating",
        "Modifiers": 72,
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder\u003CPitstop.VehicleManagement.Model.Vehicle\u003E",
            "Name": "HasKey",
            "Arguments": [
              {
                "Type": "System.Linq.Expressions.Expression\u003CSystem.Func\u003CPitstop.VehicleManagement.Model.Vehicle, object?\u003E\u003E",
                "Text": "m =\u003E m.LicenseNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "Entity\u003CVehicle\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "Name": "ToTable",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Vehicle"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "Entity\u003CVehicle\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.DbContext",
            "Name": "OnModelCreating",
            "Arguments": [
              {
                "Type": "Microsoft.EntityFrameworkCore.ModelBuilder",
                "Text": "builder"
              }
            ]
          }
        ]
      },
      {
        "Name": "MigrateDB",
        "Modifiers": 2,
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.Policy",
            "Name": "Execute",
            "Arguments": [
              {
                "Type": "System.Action",
                "Text": "() =\u003E Database.Migrate()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.RetrySyntax",
            "Name": "WaitAndRetry",
            "Arguments": [
              {
                "Type": "int",
                "Text": "10"
              },
              {
                "Type": "System.Func\u003Cint, System.TimeSpan\u003E",
                "Text": "r =\u003E TimeSpan.FromSeconds(10)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.Policy",
            "Name": "Handle\u003CException\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.TimeSpan",
            "Name": "FromSeconds",
            "Arguments": [
              {
                "Type": "int",
                "Text": "10"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions",
            "Name": "Migrate"
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.VehicleManagement.Events.VehicleRegistered",
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.Event"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "string",
        "Name": "LicenseNumber",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "Brand",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "Type",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "OwnerId",
        "Modifiers": 130
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          },
          {
            "Type": "string",
            "Name": "licenseNumber"
          },
          {
            "Type": "string",
            "Name": "brand"
          },
          {
            "Type": "string",
            "Name": "type"
          },
          {
            "Type": "string",
            "Name": "ownerId"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "LicenseNumber",
            "Operator": "=",
            "Right": "licenseNumber"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Brand",
            "Operator": "=",
            "Right": "brand"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Type",
            "Operator": "=",
            "Right": "type"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "OwnerId",
            "Operator": "=",
            "Right": "ownerId"
          }
        ],
        "Name": "VehicleRegistered",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "Pitstop.VehicleManagement.Commands.RegisterVehicle",
            "Name": "command"
          }
        ],
        "Name": "FromCommand",
        "Modifiers": 18,
        "ReturnType": "Pitstop.VehicleManagement.Events.VehicleRegistered",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "new VehicleRegistered (\r\n            Guid.NewGuid(),\r\n            command.LicenseNumber,\r\n            command.Brand,\r\n            command.Type,\r\n            command.OwnerId\r\n        )"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.VehicleManagement.Events.VehicleRegistered",
            "Name": "VehicleRegistered",
            "Arguments": [
              {
                "Type": "System.Guid",
                "Text": "Guid.NewGuid()"
              },
              {
                "Type": "string",
                "Text": "command.LicenseNumber"
              },
              {
                "Type": "string",
                "Text": "command.Brand"
              },
              {
                "Type": "string",
                "Text": "command.Type"
              },
              {
                "Type": "string",
                "Text": "command.OwnerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Guid",
            "Name": "NewGuid"
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.VehicleManagement.Model.Vehicle",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "string",
        "Name": "LicenseNumber",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "Brand",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "Type",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "OwnerId",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.VehicleManagementAPI.DataAccess.v1",
    "BaseTypes": [
      "Microsoft.EntityFrameworkCore.Migrations.Migration"
    ],
    "Modifiers": 32770,
    "Attributes": [
      {
        "Type": "Microsoft.EntityFrameworkCore.Infrastructure.DbContextAttribute",
        "Name": "DbContext",
        "Arguments": [
          {
            "Name": "contextType",
            "Type": "System.Type",
            "Value": "typeof(VehicleManagementDBContext)"
          }
        ]
      },
      {
        "Type": "Microsoft.EntityFrameworkCore.Migrations.MigrationAttribute",
        "Name": "Migration",
        "Arguments": [
          {
            "Name": "id",
            "Type": "string",
            "Value": "20220123135704_v1"
          }
        ]
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder",
            "Name": "migrationBuilder"
          }
        ],
        "Name": "Up",
        "Modifiers": 72,
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder",
            "Name": "CreateTable",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Vehicle"
              },
              {
                "Type": "System.Func\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder, \u003Canonymous type: Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E LicenseNumber, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Brand, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Type, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E OwnerId\u003E\u003E",
                "Text": "table =\u003E new\r\n                {\r\n                    LicenseNumber = table.Column\u003Cstring\u003E(type: \u0022nvarchar(450)\u0022, nullable: false),\r\n                    Brand = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    Type = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true),\r\n                    OwnerId = table.Column\u003Cstring\u003E(type: \u0022nvarchar(max)\u0022, nullable: true)\r\n                }"
              },
              {
                "Type": "System.Action\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder\u003C\u003Canonymous type: Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E LicenseNumber, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Brand, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Type, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E OwnerId\u003E\u003E\u003E",
                "Text": "table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_Vehicle\u0022, x =\u003E x.LicenseNumber);\r\n                }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder",
            "Name": "Column\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(450)"
              },
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder",
            "Name": "Column\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(max)"
              },
              {
                "Type": "bool",
                "Text": "true"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder",
            "Name": "Column\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(max)"
              },
              {
                "Type": "bool",
                "Text": "true"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder",
            "Name": "Column\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(max)"
              },
              {
                "Type": "bool",
                "Text": "true"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder\u003C\u003Canonymous type: Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E LicenseNumber, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Brand, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Type, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E OwnerId\u003E\u003E",
            "Name": "PrimaryKey",
            "Arguments": [
              {
                "Type": "string",
                "Text": "PK_Vehicle"
              },
              {
                "Type": "System.Linq.Expressions.Expression\u003CSystem.Func\u003C\u003Canonymous type: Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E LicenseNumber, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Brand, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Type, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E OwnerId\u003E, object\u003E\u003E",
                "Text": "x =\u003E x.LicenseNumber"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder",
            "Name": "migrationBuilder"
          }
        ],
        "Name": "Down",
        "Modifiers": 72,
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder",
            "Name": "DropTable",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Vehicle"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "modelBuilder"
          }
        ],
        "Name": "BuildTargetModel",
        "Modifiers": 72,
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "HasAnnotation",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Relational:MaxIdentifierLength"
              },
              {
                "Type": "int",
                "Text": "128"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "HasAnnotation",
            "Arguments": [
              {
                "Type": "string",
                "Text": "ProductVersion"
              },
              {
                "Type": "string",
                "Text": "6.0.1"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions",
            "Name": "UseIdentityColumns",
            "Arguments": [
              {
                "Type": "Microsoft.EntityFrameworkCore.ModelBuilder",
                "Text": "modelBuilder"
              },
              {
                "Type": "long",
                "Text": "1"
              },
              {
                "Type": "int",
                "Text": "1"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "Entity",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Pitstop.VehicleManagement.Model.Vehicle"
              },
              {
                "Type": "System.Action\u003CMicrosoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder\u003E",
                "Text": "b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022LicenseNumber\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Brand\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022OwnerId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Type\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.HasKey(\u0022LicenseNumber\u0022);\r\n\r\n                    b.ToTable(\u0022Vehicle\u0022, (string)null);\r\n                }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "Name": "HasColumnType",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(450)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "LicenseNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "Name": "HasColumnType",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(max)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Brand"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "Name": "HasColumnType",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(max)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "OwnerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "Name": "HasColumnType",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(max)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Type"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "HasKey",
            "Arguments": [
              {
                "Type": "string",
                "Text": "LicenseNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "Name": "ToTable",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Vehicle"
              },
              {
                "Type": "string",
                "Text": "(string)null"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.VehicleManagementAPI.DataAccess.VehicleManagementDBContextModelSnapshot",
    "BaseTypes": [
      "Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot"
    ],
    "Modifiers": 32769,
    "Attributes": [
      {
        "Type": "Microsoft.EntityFrameworkCore.Infrastructure.DbContextAttribute",
        "Name": "DbContext",
        "Arguments": [
          {
            "Name": "contextType",
            "Type": "System.Type",
            "Value": "typeof(VehicleManagementDBContext)"
          }
        ]
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "modelBuilder"
          }
        ],
        "Name": "BuildModel",
        "Modifiers": 72,
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "HasAnnotation",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Relational:MaxIdentifierLength"
              },
              {
                "Type": "int",
                "Text": "128"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "HasAnnotation",
            "Arguments": [
              {
                "Type": "string",
                "Text": "ProductVersion"
              },
              {
                "Type": "string",
                "Text": "6.0.1"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.SqlServerModelBuilderExtensions",
            "Name": "UseIdentityColumns",
            "Arguments": [
              {
                "Type": "Microsoft.EntityFrameworkCore.ModelBuilder",
                "Text": "modelBuilder"
              },
              {
                "Type": "long",
                "Text": "1"
              },
              {
                "Type": "int",
                "Text": "1"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "Entity",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Pitstop.VehicleManagement.Model.Vehicle"
              },
              {
                "Type": "System.Action\u003CMicrosoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder\u003E",
                "Text": "b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022LicenseNumber\u0022)\r\n                        .HasColumnType(\u0022nvarchar(450)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Brand\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022OwnerId\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Type\u0022)\r\n                        .HasColumnType(\u0022nvarchar(max)\u0022);\r\n\r\n                    b.HasKey(\u0022LicenseNumber\u0022);\r\n\r\n                    b.ToTable(\u0022Vehicle\u0022, (string)null);\r\n                }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "Name": "HasColumnType",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(450)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "LicenseNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "Name": "HasColumnType",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(max)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Brand"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "Name": "HasColumnType",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(max)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "OwnerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions",
            "Name": "HasColumnType",
            "Arguments": [
              {
                "Type": "string",
                "Text": "nvarchar(max)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Type"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "HasKey",
            "Arguments": [
              {
                "Type": "string",
                "Text": "LicenseNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "Name": "ToTable",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Vehicle"
              },
              {
                "Type": "string",
                "Text": "(string)null"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.VehicleManagementAPI.Mappers.Mappers",
    "Modifiers": 18,
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "Pitstop.VehicleManagement.Commands.RegisterVehicle",
            "Name": "command"
          }
        ],
        "Name": "MapToVehicle",
        "Modifiers": 18,
        "ReturnType": "Pitstop.VehicleManagement.Model.Vehicle",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "new Vehicle { LicenseNumber = command.LicenseNumber, Brand = command.Brand, Type = command.Type, OwnerId = command.OwnerId }"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.VehicleManagement.Model.Vehicle",
            "Name": "Vehicle",
            "Arguments": [
              {
                "Type": "string",
                "Text": "LicenseNumber = command.LicenseNumber"
              },
              {
                "Type": "string",
                "Text": "Brand = command.Brand"
              },
              {
                "Type": "string",
                "Text": "Type = command.Type"
              },
              {
                "Type": "string",
                "Text": "OwnerId = command.OwnerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "LicenseNumber",
            "Operator": "=",
            "Right": "command.LicenseNumber"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Brand",
            "Operator": "=",
            "Right": "command.Brand"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Type",
            "Operator": "=",
            "Right": "command.Type"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "OwnerId",
            "Operator": "=",
            "Right": "command.OwnerId"
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.WebApp.Commands.FinishMaintenanceJob",
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.Command"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "System.Guid",
        "Name": "JobId",
        "Modifiers": 130
      },
      {
        "Type": "System.DateTime",
        "Name": "StartTime",
        "Modifiers": 130
      },
      {
        "Type": "System.DateTime",
        "Name": "EndTime",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "Notes",
        "Modifiers": 130
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          },
          {
            "Type": "System.Guid",
            "Name": "jobId"
          },
          {
            "Type": "System.DateTime",
            "Name": "startTime"
          },
          {
            "Type": "System.DateTime",
            "Name": "endTime"
          },
          {
            "Type": "string",
            "Name": "notes"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "JobId",
            "Operator": "=",
            "Right": "jobId"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "StartTime",
            "Operator": "=",
            "Right": "startTime"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "EndTime",
            "Operator": "=",
            "Right": "endTime"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Notes",
            "Operator": "=",
            "Right": "notes"
          }
        ],
        "Name": "FinishMaintenanceJob",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WebApp.Commands.PlanMaintenanceJob",
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.Command"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "System.Guid",
        "Name": "JobId",
        "Modifiers": 130
      },
      {
        "Type": "System.DateTime",
        "Name": "StartTime",
        "Modifiers": 130
      },
      {
        "Type": "System.DateTime",
        "Name": "EndTime",
        "Modifiers": 130
      },
      {
        "Type": "(string Id, string Name, string TelephoneNumber)",
        "Name": "CustomerInfo",
        "Modifiers": 130
      },
      {
        "Type": "(string LicenseNumber, string Brand, string Type)",
        "Name": "VehicleInfo",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "Description",
        "Modifiers": 130
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          },
          {
            "Type": "System.Guid",
            "Name": "jobId"
          },
          {
            "Type": "System.DateTime",
            "Name": "startTime"
          },
          {
            "Type": "System.DateTime",
            "Name": "endTime"
          },
          {
            "Type": "(string Id, string Name, string TelephoneNumber)",
            "Name": "customerInfo"
          },
          {
            "Type": "(string LicenseNumber, string Brand, string Type)",
            "Name": "vehicleInfo"
          },
          {
            "Type": "string",
            "Name": "description"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "JobId",
            "Operator": "=",
            "Right": "jobId"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "StartTime",
            "Operator": "=",
            "Right": "startTime"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "EndTime",
            "Operator": "=",
            "Right": "endTime"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "CustomerInfo",
            "Operator": "=",
            "Right": "customerInfo"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "VehicleInfo",
            "Operator": "=",
            "Right": "vehicleInfo"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Description",
            "Operator": "=",
            "Right": "description"
          }
        ],
        "Name": "PlanMaintenanceJob",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WebApp.Commands.RegisterCustomer",
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.Command"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "string",
        "Name": "CustomerId",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "Name",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "Address",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "PostalCode",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "City",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "TelephoneNumber",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "EmailAddress",
        "Modifiers": 130
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          },
          {
            "Type": "string",
            "Name": "customerId"
          },
          {
            "Type": "string",
            "Name": "name"
          },
          {
            "Type": "string",
            "Name": "address"
          },
          {
            "Type": "string",
            "Name": "postalCode"
          },
          {
            "Type": "string",
            "Name": "city"
          },
          {
            "Type": "string",
            "Name": "telephoneNumber"
          },
          {
            "Type": "string",
            "Name": "emailAddress"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "CustomerId",
            "Operator": "=",
            "Right": "customerId"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Name",
            "Operator": "=",
            "Right": "name"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Address",
            "Operator": "=",
            "Right": "address"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "PostalCode",
            "Operator": "=",
            "Right": "postalCode"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "City",
            "Operator": "=",
            "Right": "city"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "TelephoneNumber",
            "Operator": "=",
            "Right": "telephoneNumber"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "EmailAddress",
            "Operator": "=",
            "Right": "emailAddress"
          }
        ],
        "Name": "RegisterCustomer",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WebApp.Commands.RegisterPlanning",
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.Command"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "System.DateTime",
        "Name": "PlanningDate",
        "Modifiers": 130
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          },
          {
            "Type": "System.DateTime",
            "Name": "planningDate"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "PlanningDate",
            "Operator": "=",
            "Right": "planningDate"
          }
        ],
        "Name": "RegisterPlanning",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WebApp.Commands.RegisterVehicle",
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.Command"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "string",
        "Name": "LicenseNumber",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "Brand",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "Type",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "OwnerId",
        "Modifiers": 130
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          },
          {
            "Type": "string",
            "Name": "licenseNumber"
          },
          {
            "Type": "string",
            "Name": "brand"
          },
          {
            "Type": "string",
            "Name": "type"
          },
          {
            "Type": "string",
            "Name": "ownerId"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "LicenseNumber",
            "Operator": "=",
            "Right": "licenseNumber"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Brand",
            "Operator": "=",
            "Right": "brand"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Type",
            "Operator": "=",
            "Right": "type"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "OwnerId",
            "Operator": "=",
            "Right": "ownerId"
          }
        ],
        "Name": "RegisterVehicle",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "PitStop.WebApp.Controllers.CustomerManagementController",
    "BaseTypes": [
      "Microsoft.AspNetCore.Mvc.Controller"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "WebApp.RESTClients.ICustomerManagementAPI",
        "Name": "_customerManagementAPI",
        "Modifiers": 132
      },
      {
        "Type": "Microsoft.Extensions.Logging.ILogger",
        "Name": "_logger",
        "Modifiers": 132
      },
      {
        "Type": "PitStop.WebApp.Controllers.ResiliencyHelper",
        "Name": "_resiliencyHelper"
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "WebApp.RESTClients.ICustomerManagementAPI",
            "Name": "customerManagementAPI"
          },
          {
            "Type": "Microsoft.Extensions.Logging.ILogger\u003CPitStop.WebApp.Controllers.CustomerManagementController\u003E",
            "Name": "logger"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_customerManagementAPI",
            "Operator": "=",
            "Right": "customerManagementAPI"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_logger",
            "Operator": "=",
            "Right": "logger"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_resiliencyHelper",
            "Operator": "=",
            "Right": "new ResiliencyHelper(_logger)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "PitStop.WebApp.Controllers.ResiliencyHelper",
            "Name": "ResiliencyHelper",
            "Arguments": [
              {
                "Type": "Microsoft.Extensions.Logging.ILogger",
                "Text": "_logger"
              }
            ]
          }
        ],
        "Name": "CustomerManagementController",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Name": "Index",
        "Modifiers": 258,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpGetAttribute",
            "Name": "HttpGet"
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await _resiliencyHelper.ExecuteResilient(async () =\u003E\r\n        {\r\n            var model = new CustomerManagementViewModel\r\n            {\r\n                Customers = await _customerManagementAPI.GetCustomers()\r\n            };\r\n            return View(model);\r\n        }, View(\u0022Offline\u0022, new CustomerManagementOfflineViewModel()))"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "PitStop.WebApp.Controllers.ResiliencyHelper",
            "Name": "ExecuteResilient",
            "Arguments": [
              {
                "Type": "System.Func\u003CSystem.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E\u003E",
                "Text": "async () =\u003E\r\n        {\r\n            var model = new CustomerManagementViewModel\r\n            {\r\n                Customers = await _customerManagementAPI.GetCustomers()\r\n            };\r\n            return View(model);\r\n        }"
              },
              {
                "Type": "Microsoft.AspNetCore.Mvc.ViewResult",
                "Text": "View(\u0022Offline\u0022, new CustomerManagementOfflineViewModel())"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WebApp.ViewModels.CustomerManagementViewModel",
            "Name": "CustomerManagementViewModel",
            "Arguments": [
              {
                "Type": "System.Collections.Generic.IEnumerable\u003CPitstop.WebApp.Models.Customer\u003E",
                "Text": "Customers = await _customerManagementAPI.GetCustomers()"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Customers",
            "Operator": "=",
            "Right": "await _customerManagementAPI.GetCustomers()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "WebApp.RESTClients.ICustomerManagementAPI",
            "Name": "GetCustomers"
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "View(model)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
            "Name": "View",
            "Arguments": [
              {
                "Type": "Pitstop.WebApp.ViewModels.CustomerManagementViewModel",
                "Text": "model"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
            "Name": "View",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Offline"
              },
              {
                "Type": "Pitstop.WebApp.ViewModels.CustomerManagementOfflineViewModel",
                "Text": "new CustomerManagementOfflineViewModel ()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WebApp.ViewModels.CustomerManagementOfflineViewModel",
            "Name": "CustomerManagementOfflineViewModel"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "id"
          }
        ],
        "Name": "Details",
        "Modifiers": 258,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpGetAttribute",
            "Name": "HttpGet"
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await _resiliencyHelper.ExecuteResilient(async () =\u003E\r\n        {\r\n            var model = new CustomerManagementDetailsViewModel\r\n            {\r\n                Customer = await _customerManagementAPI.GetCustomerById(id)\r\n            };\r\n            return View(model);\r\n        }, View(\u0022Offline\u0022, new CustomerManagementOfflineViewModel()))"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "PitStop.WebApp.Controllers.ResiliencyHelper",
            "Name": "ExecuteResilient",
            "Arguments": [
              {
                "Type": "System.Func\u003CSystem.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E\u003E",
                "Text": "async () =\u003E\r\n        {\r\n            var model = new CustomerManagementDetailsViewModel\r\n            {\r\n                Customer = await _customerManagementAPI.GetCustomerById(id)\r\n            };\r\n            return View(model);\r\n        }"
              },
              {
                "Type": "Microsoft.AspNetCore.Mvc.ViewResult",
                "Text": "View(\u0022Offline\u0022, new CustomerManagementOfflineViewModel())"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WebApp.ViewModels.CustomerManagementDetailsViewModel",
            "Name": "CustomerManagementDetailsViewModel",
            "Arguments": [
              {
                "Type": "Pitstop.WebApp.Models.Customer",
                "Text": "Customer = await _customerManagementAPI.GetCustomerById(id)"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Customer",
            "Operator": "=",
            "Right": "await _customerManagementAPI.GetCustomerById(id)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "WebApp.RESTClients.ICustomerManagementAPI",
            "Name": "GetCustomerById",
            "Arguments": [
              {
                "Type": "string",
                "Text": "id"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "View(model)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
            "Name": "View",
            "Arguments": [
              {
                "Type": "Pitstop.WebApp.ViewModels.CustomerManagementDetailsViewModel",
                "Text": "model"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
            "Name": "View",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Offline"
              },
              {
                "Type": "Pitstop.WebApp.ViewModels.CustomerManagementOfflineViewModel",
                "Text": "new CustomerManagementOfflineViewModel ()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WebApp.ViewModels.CustomerManagementOfflineViewModel",
            "Name": "CustomerManagementOfflineViewModel"
          }
        ]
      },
      {
        "Name": "New",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpGetAttribute",
            "Name": "HttpGet"
          }
        ],
        "ReturnType": "Microsoft.AspNetCore.Mvc.IActionResult",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WebApp.ViewModels.CustomerManagementNewViewModel",
            "Name": "CustomerManagementNewViewModel",
            "Arguments": [
              {
                "Type": "Pitstop.WebApp.Models.Customer",
                "Text": "Customer = new Customer()"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Customer",
            "Operator": "=",
            "Right": "new Customer()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WebApp.Models.Customer",
            "Name": "Customer"
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "View(model)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
            "Name": "View",
            "Arguments": [
              {
                "Type": "Pitstop.WebApp.ViewModels.CustomerManagementNewViewModel",
                "Text": "model"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WebApp.ViewModels.CustomerManagementNewViewModel",
            "Name": "inputModel",
            "Attributes": [
              {
                "Type": "Microsoft.AspNetCore.Mvc.FromFormAttribute",
                "Name": "FromForm"
              }
            ]
          }
        ],
        "Name": "Register",
        "Modifiers": 258,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpPostAttribute",
            "Name": "HttpPost"
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "ModelState.IsValid",
                "Statements": [
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "await _resiliencyHelper.ExecuteResilient(async () =\u003E\r\n            {\r\n                RegisterCustomer cmd = inputModel.MapToRegisterCustomer();\r\n                await _customerManagementAPI.RegisterCustomer(cmd);\r\n                return RedirectToAction(\u0022Index\u0022);\r\n            }, View(\u0022Offline\u0022, new CustomerManagementOfflineViewModel()))"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "PitStop.WebApp.Controllers.ResiliencyHelper",
                    "Name": "ExecuteResilient",
                    "Arguments": [
                      {
                        "Type": "System.Func\u003CSystem.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E\u003E",
                        "Text": "async () =\u003E\r\n            {\r\n                RegisterCustomer cmd = inputModel.MapToRegisterCustomer();\r\n                await _customerManagementAPI.RegisterCustomer(cmd);\r\n                return RedirectToAction(\u0022Index\u0022);\r\n            }"
                      },
                      {
                        "Type": "Microsoft.AspNetCore.Mvc.ViewResult",
                        "Text": "View(\u0022Offline\u0022, new CustomerManagementOfflineViewModel())"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.WebApp.Mappers.Mappers",
                    "Name": "MapToRegisterCustomer"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "WebApp.RESTClients.ICustomerManagementAPI",
                    "Name": "RegisterCustomer",
                    "Arguments": [
                      {
                        "Type": "Pitstop.WebApp.Commands.RegisterCustomer",
                        "Text": "cmd"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "RedirectToAction(\u0022Index\u0022)"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
                    "Name": "RedirectToAction",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "Index"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
                    "Name": "View",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "Offline"
                      },
                      {
                        "Type": "Pitstop.WebApp.ViewModels.CustomerManagementOfflineViewModel",
                        "Text": "new CustomerManagementOfflineViewModel ()"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.WebApp.ViewModels.CustomerManagementOfflineViewModel",
                    "Name": "CustomerManagementOfflineViewModel"
                  }
                ]
              },
              {
                "Statements": [
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "View(\u0022New\u0022, inputModel)"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
                    "Name": "View",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "New"
                      },
                      {
                        "Type": "Pitstop.WebApp.ViewModels.CustomerManagementNewViewModel",
                        "Text": "inputModel"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "PitStop.WebApp.Controllers.ResiliencyHelper",
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "Microsoft.Extensions.Logging.ILogger",
        "Name": "_logger"
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "Microsoft.Extensions.Logging.ILogger",
            "Name": "logger"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_logger",
            "Operator": "=",
            "Right": "logger"
          }
        ],
        "Name": "ResiliencyHelper",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "System.Func\u003CSystem.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E\u003E",
            "Name": "action"
          },
          {
            "Type": "Microsoft.AspNetCore.Mvc.IActionResult",
            "Name": "fallbackResult"
          }
        ],
        "Name": "ExecuteResilient",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.AsyncRetrySyntax",
            "Name": "RetryAsync",
            "Arguments": [
              {
                "Type": "int",
                "Text": "5"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.Policy",
            "Name": "Handle\u003CException\u003E",
            "Arguments": [
              {
                "Type": "System.Func\u003CSystem.Exception, bool\u003E",
                "Text": "(ex) =\u003E\r\n                {\r\n                    _logger.LogWarning($\u0022Error occured during request-execution. Polly will retry. Exception: {ex.Message}\u0022);\r\n                    return true;\r\n                }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.Extensions.Logging.LoggerExtensions",
            "Name": "LogWarning",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Error occured during request-execution. Polly will retry. Exception: {ex.Message}"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "true"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.AsyncFallbackTResultSyntax",
            "Name": "FallbackAsync",
            "Arguments": [
              {
                "Type": "Microsoft.AspNetCore.Mvc.IActionResult",
                "Text": "fallbackResult"
              },
              {
                "Type": "System.Func\u003CPolly.DelegateResult\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E, Polly.Context, System.Threading.Tasks.Task\u003E",
                "Text": "(e, c) =\u003E Task.Run(() =\u003E _logger.LogError($\u0022Error occured during request-execution. Polly will fallback. Exception: {e.Exception.ToString()}\u0022))"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.Policy\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
            "Name": "Handle\u003CException\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task",
            "Name": "Run",
            "Arguments": [
              {
                "Type": "System.Action",
                "Text": "() =\u003E _logger.LogError($\u0022Error occured during request-execution. Polly will fallback. Exception: {e.Exception.ToString()}\u0022)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.Extensions.Logging.LoggerExtensions",
            "Name": "LogError",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Error occured during request-execution. Polly will fallback. Exception: {e.Exception.ToString()}"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Exception",
            "Name": "ToString"
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await fallbackPolicy\r\n            .WrapAsync(retryPolicy)\r\n            .ExecuteAsync(action)\r\n            .ConfigureAwait(false)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
            "Name": "ConfigureAwait",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.AsyncPolicy\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
            "Name": "ExecuteAsync",
            "Arguments": [
              {
                "Type": "System.Func\u003CSystem.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E\u003E",
                "Text": "action"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.AsyncPolicy\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
            "Name": "WrapAsync",
            "Arguments": [
              {
                "Type": "Polly.Retry.AsyncRetryPolicy",
                "Text": "retryPolicy"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "PitStop.WebApp.Controllers.VehicleManagementController",
    "BaseTypes": [
      "Microsoft.AspNetCore.Mvc.Controller"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "WebApp.RESTClients.IVehicleManagementAPI",
        "Name": "_vehicleManagementAPI"
      },
      {
        "Type": "WebApp.RESTClients.ICustomerManagementAPI",
        "Name": "_customerManagementAPI"
      },
      {
        "Type": "Microsoft.Extensions.Logging.ILogger",
        "Name": "_logger",
        "Modifiers": 132
      },
      {
        "Type": "PitStop.WebApp.Controllers.ResiliencyHelper",
        "Name": "_resiliencyHelper"
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "WebApp.RESTClients.IVehicleManagementAPI",
            "Name": "vehicleManagementAPI"
          },
          {
            "Type": "WebApp.RESTClients.ICustomerManagementAPI",
            "Name": "customerManagementAPI"
          },
          {
            "Type": "Microsoft.Extensions.Logging.ILogger\u003CPitStop.WebApp.Controllers.VehicleManagementController\u003E",
            "Name": "logger"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_vehicleManagementAPI",
            "Operator": "=",
            "Right": "vehicleManagementAPI"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_customerManagementAPI",
            "Operator": "=",
            "Right": "customerManagementAPI"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_logger",
            "Operator": "=",
            "Right": "logger"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_resiliencyHelper",
            "Operator": "=",
            "Right": "new ResiliencyHelper(_logger)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "PitStop.WebApp.Controllers.ResiliencyHelper",
            "Name": "ResiliencyHelper",
            "Arguments": [
              {
                "Type": "Microsoft.Extensions.Logging.ILogger",
                "Text": "_logger"
              }
            ]
          }
        ],
        "Name": "VehicleManagementController",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Name": "Index",
        "Modifiers": 258,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpGetAttribute",
            "Name": "HttpGet"
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await _resiliencyHelper.ExecuteResilient(async () =\u003E\r\n        {\r\n            var model = new VehicleManagementViewModel\r\n            {\r\n                Vehicles = await _vehicleManagementAPI.GetVehicles()\r\n            };\r\n            return View(model);\r\n        }, View(\u0022Offline\u0022, new VehicleManagementOfflineViewModel()))"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "PitStop.WebApp.Controllers.ResiliencyHelper",
            "Name": "ExecuteResilient",
            "Arguments": [
              {
                "Type": "System.Func\u003CSystem.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E\u003E",
                "Text": "async () =\u003E\r\n        {\r\n            var model = new VehicleManagementViewModel\r\n            {\r\n                Vehicles = await _vehicleManagementAPI.GetVehicles()\r\n            };\r\n            return View(model);\r\n        }"
              },
              {
                "Type": "Microsoft.AspNetCore.Mvc.ViewResult",
                "Text": "View(\u0022Offline\u0022, new VehicleManagementOfflineViewModel())"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WebApp.ViewModels.VehicleManagementViewModel",
            "Name": "VehicleManagementViewModel",
            "Arguments": [
              {
                "Type": "System.Collections.Generic.IEnumerable\u003CPitstop.WebApp.Models.Vehicle\u003E",
                "Text": "Vehicles = await _vehicleManagementAPI.GetVehicles()"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Vehicles",
            "Operator": "=",
            "Right": "await _vehicleManagementAPI.GetVehicles()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "WebApp.RESTClients.IVehicleManagementAPI",
            "Name": "GetVehicles"
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "View(model)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
            "Name": "View",
            "Arguments": [
              {
                "Type": "Pitstop.WebApp.ViewModels.VehicleManagementViewModel",
                "Text": "model"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
            "Name": "View",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Offline"
              },
              {
                "Type": "Pitstop.WebApp.ViewModels.VehicleManagementOfflineViewModel",
                "Text": "new VehicleManagementOfflineViewModel ()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WebApp.ViewModels.VehicleManagementOfflineViewModel",
            "Name": "VehicleManagementOfflineViewModel"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "licenseNumber"
          }
        ],
        "Name": "Details",
        "Modifiers": 258,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpGetAttribute",
            "Name": "HttpGet"
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await _resiliencyHelper.ExecuteResilient(async () =\u003E\r\n        {\r\n            Vehicle vehicle = await _vehicleManagementAPI.GetVehicleByLicenseNumber(licenseNumber);\r\n            Customer customer = await _customerManagementAPI.GetCustomerById(vehicle.OwnerId);\r\n\r\n            var model = new VehicleManagementDetailsViewModel\r\n            {\r\n                Vehicle = vehicle,\r\n                Owner = customer.Name\r\n            };\r\n            return View(model);\r\n        }, View(\u0022Offline\u0022, new VehicleManagementOfflineViewModel()))"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "PitStop.WebApp.Controllers.ResiliencyHelper",
            "Name": "ExecuteResilient",
            "Arguments": [
              {
                "Type": "System.Func\u003CSystem.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E\u003E",
                "Text": "async () =\u003E\r\n        {\r\n            Vehicle vehicle = await _vehicleManagementAPI.GetVehicleByLicenseNumber(licenseNumber);\r\n            Customer customer = await _customerManagementAPI.GetCustomerById(vehicle.OwnerId);\r\n\r\n            var model = new VehicleManagementDetailsViewModel\r\n            {\r\n                Vehicle = vehicle,\r\n                Owner = customer.Name\r\n            };\r\n            return View(model);\r\n        }"
              },
              {
                "Type": "Microsoft.AspNetCore.Mvc.ViewResult",
                "Text": "View(\u0022Offline\u0022, new VehicleManagementOfflineViewModel())"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "WebApp.RESTClients.IVehicleManagementAPI",
            "Name": "GetVehicleByLicenseNumber",
            "Arguments": [
              {
                "Type": "string",
                "Text": "licenseNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "WebApp.RESTClients.ICustomerManagementAPI",
            "Name": "GetCustomerById",
            "Arguments": [
              {
                "Type": "string",
                "Text": "vehicle.OwnerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WebApp.ViewModels.VehicleManagementDetailsViewModel",
            "Name": "VehicleManagementDetailsViewModel",
            "Arguments": [
              {
                "Type": "Pitstop.WebApp.Models.Vehicle",
                "Text": "Vehicle = vehicle"
              },
              {
                "Type": "string",
                "Text": "Owner = customer.Name"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Vehicle",
            "Operator": "=",
            "Right": "vehicle"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Owner",
            "Operator": "=",
            "Right": "customer.Name"
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "View(model)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
            "Name": "View",
            "Arguments": [
              {
                "Type": "Pitstop.WebApp.ViewModels.VehicleManagementDetailsViewModel",
                "Text": "model"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
            "Name": "View",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Offline"
              },
              {
                "Type": "Pitstop.WebApp.ViewModels.VehicleManagementOfflineViewModel",
                "Text": "new VehicleManagementOfflineViewModel ()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WebApp.ViewModels.VehicleManagementOfflineViewModel",
            "Name": "VehicleManagementOfflineViewModel"
          }
        ]
      },
      {
        "Name": "New",
        "Modifiers": 258,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpGetAttribute",
            "Name": "HttpGet"
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await _resiliencyHelper.ExecuteResilient(async () =\u003E\r\n        {\r\n                // get customerlist\r\n                var customers = await _customerManagementAPI.GetCustomers();\r\n\r\n            var model = new VehicleManagementNewViewModel\r\n            {\r\n                Vehicle = new Vehicle(),\r\n                Customers = customers.Select(c =\u003E new SelectListItem { Value = c.CustomerId, Text = c.Name })\r\n            };\r\n            return View(model);\r\n        }, View(\u0022Offline\u0022, new VehicleManagementOfflineViewModel()))"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "PitStop.WebApp.Controllers.ResiliencyHelper",
            "Name": "ExecuteResilient",
            "Arguments": [
              {
                "Type": "System.Func\u003CSystem.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E\u003E",
                "Text": "async () =\u003E\r\n        {\r\n                // get customerlist\r\n                var customers = await _customerManagementAPI.GetCustomers();\r\n\r\n            var model = new VehicleManagementNewViewModel\r\n            {\r\n                Vehicle = new Vehicle(),\r\n                Customers = customers.Select(c =\u003E new SelectListItem { Value = c.CustomerId, Text = c.Name })\r\n            };\r\n            return View(model);\r\n        }"
              },
              {
                "Type": "Microsoft.AspNetCore.Mvc.ViewResult",
                "Text": "View(\u0022Offline\u0022, new VehicleManagementOfflineViewModel())"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "WebApp.RESTClients.ICustomerManagementAPI",
            "Name": "GetCustomers"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WebApp.ViewModels.VehicleManagementNewViewModel",
            "Name": "VehicleManagementNewViewModel",
            "Arguments": [
              {
                "Type": "Pitstop.WebApp.Models.Vehicle",
                "Text": "Vehicle = new Vehicle()"
              },
              {
                "Type": "System.Collections.Generic.IEnumerable\u003CMicrosoft.AspNetCore.Mvc.Rendering.SelectListItem\u003E",
                "Text": "Customers = customers.Select(c =\u003E new SelectListItem { Value = c.CustomerId, Text = c.Name })"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Vehicle",
            "Operator": "=",
            "Right": "new Vehicle()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WebApp.Models.Vehicle",
            "Name": "Vehicle"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Customers",
            "Operator": "=",
            "Right": "customers.Select(c =\u003E new SelectListItem { Value = c.CustomerId, Text = c.Name })"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Linq.Enumerable",
            "Name": "Select",
            "Arguments": [
              {
                "Type": "System.Func\u003CPitstop.WebApp.Models.Customer, Microsoft.AspNetCore.Mvc.Rendering.SelectListItem\u003E",
                "Text": "c =\u003E new SelectListItem { Value = c.CustomerId, Text = c.Name }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.Rendering.SelectListItem",
            "Name": "SelectListItem",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Value = c.CustomerId"
              },
              {
                "Type": "string",
                "Text": "Text = c.Name"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Value",
            "Operator": "=",
            "Right": "c.CustomerId"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Text",
            "Operator": "=",
            "Right": "c.Name"
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "View(model)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
            "Name": "View",
            "Arguments": [
              {
                "Type": "Pitstop.WebApp.ViewModels.VehicleManagementNewViewModel",
                "Text": "model"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
            "Name": "View",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Offline"
              },
              {
                "Type": "Pitstop.WebApp.ViewModels.VehicleManagementOfflineViewModel",
                "Text": "new VehicleManagementOfflineViewModel ()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WebApp.ViewModels.VehicleManagementOfflineViewModel",
            "Name": "VehicleManagementOfflineViewModel"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WebApp.ViewModels.VehicleManagementNewViewModel",
            "Name": "inputModel",
            "Attributes": [
              {
                "Type": "Microsoft.AspNetCore.Mvc.FromFormAttribute",
                "Name": "FromForm"
              }
            ]
          }
        ],
        "Name": "Register",
        "Modifiers": 258,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpPostAttribute",
            "Name": "HttpPost"
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "ModelState.IsValid",
                "Statements": [
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "await _resiliencyHelper.ExecuteResilient(async () =\u003E\r\n            {\r\n                RegisterVehicle cmd = inputModel.MapToRegisterVehicle();\r\n                await _vehicleManagementAPI.RegisterVehicle(cmd);\r\n                return RedirectToAction(\u0022Index\u0022);\r\n            }, View(\u0022Offline\u0022, new VehicleManagementOfflineViewModel()))"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "PitStop.WebApp.Controllers.ResiliencyHelper",
                    "Name": "ExecuteResilient",
                    "Arguments": [
                      {
                        "Type": "System.Func\u003CSystem.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E\u003E",
                        "Text": "async () =\u003E\r\n            {\r\n                RegisterVehicle cmd = inputModel.MapToRegisterVehicle();\r\n                await _vehicleManagementAPI.RegisterVehicle(cmd);\r\n                return RedirectToAction(\u0022Index\u0022);\r\n            }"
                      },
                      {
                        "Type": "Microsoft.AspNetCore.Mvc.ViewResult",
                        "Text": "View(\u0022Offline\u0022, new VehicleManagementOfflineViewModel())"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.WebApp.Mappers.Mappers",
                    "Name": "MapToRegisterVehicle"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "WebApp.RESTClients.IVehicleManagementAPI",
                    "Name": "RegisterVehicle",
                    "Arguments": [
                      {
                        "Type": "Pitstop.WebApp.Commands.RegisterVehicle",
                        "Text": "cmd"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "RedirectToAction(\u0022Index\u0022)"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
                    "Name": "RedirectToAction",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "Index"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
                    "Name": "View",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "Offline"
                      },
                      {
                        "Type": "Pitstop.WebApp.ViewModels.VehicleManagementOfflineViewModel",
                        "Text": "new VehicleManagementOfflineViewModel ()"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.WebApp.ViewModels.VehicleManagementOfflineViewModel",
                    "Name": "VehicleManagementOfflineViewModel"
                  }
                ]
              },
              {
                "Statements": [
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "View(\u0022New\u0022, inputModel)"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
                    "Name": "View",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "New"
                      },
                      {
                        "Type": "Pitstop.WebApp.ViewModels.VehicleManagementNewViewModel",
                        "Text": "inputModel"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Name": "Error",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpGetAttribute",
            "Name": "HttpGet"
          }
        ],
        "ReturnType": "Microsoft.AspNetCore.Mvc.IActionResult",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "View()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
            "Name": "View"
          }
        ]
      }
    ]
  },
  {
    "FullName": "PitStop.WebApp.Controllers.WorkshopManagementController",
    "BaseTypes": [
      "Microsoft.AspNetCore.Mvc.Controller"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "WebApp.RESTClients.IWorkshopManagementAPI",
        "Name": "_workshopManagementAPI"
      },
      {
        "Type": "Microsoft.Extensions.Logging.ILogger",
        "Name": "_logger",
        "Modifiers": 132
      },
      {
        "Type": "PitStop.WebApp.Controllers.ResiliencyHelper",
        "Name": "_resiliencyHelper"
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "WebApp.RESTClients.IWorkshopManagementAPI",
            "Name": "workshopManagamentAPI"
          },
          {
            "Type": "Microsoft.Extensions.Logging.ILogger\u003CPitStop.WebApp.Controllers.WorkshopManagementController\u003E",
            "Name": "logger"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_workshopManagementAPI",
            "Operator": "=",
            "Right": "workshopManagamentAPI"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_logger",
            "Operator": "=",
            "Right": "logger"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_resiliencyHelper",
            "Operator": "=",
            "Right": "new ResiliencyHelper(_logger)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "PitStop.WebApp.Controllers.ResiliencyHelper",
            "Name": "ResiliencyHelper",
            "Arguments": [
              {
                "Type": "Microsoft.Extensions.Logging.ILogger",
                "Text": "_logger"
              }
            ]
          }
        ],
        "Name": "WorkshopManagementController",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "System.DateTime?",
            "Name": "planningDate"
          }
        ],
        "Name": "Index",
        "Modifiers": 258,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpGetAttribute",
            "Name": "HttpGet"
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await _resiliencyHelper.ExecuteResilient(async () =\u003E\r\n        {\r\n            if (planningDate == null)\r\n            {\r\n                planningDate = DateTime.Now.Date;\r\n            }\r\n\r\n            var model = new WorkshopManagementViewModel\r\n            {\r\n                Date = planningDate.Value,\r\n                MaintenanceJobs = new List\u003CMaintenanceJob\u003E()\r\n            };\r\n\r\n                // get planning\r\n                string dateStr = planningDate.Value.ToString(\u0022yyyy-MM-dd\u0022);\r\n            WorkshopPlanning planning = await _workshopManagementAPI.GetWorkshopPlanning(dateStr);\r\n            if (planning?.Jobs?.Count \u003E 0)\r\n            {\r\n                model.MaintenanceJobs.AddRange(planning.Jobs.OrderBy(j =\u003E j.StartTime));\r\n            }\r\n\r\n            return View(model);\r\n        }, View(\u0022Offline\u0022, new WorkshopManagementOfflineViewModel()))"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "PitStop.WebApp.Controllers.ResiliencyHelper",
            "Name": "ExecuteResilient",
            "Arguments": [
              {
                "Type": "System.Func\u003CSystem.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E\u003E",
                "Text": "async () =\u003E\r\n        {\r\n            if (planningDate == null)\r\n            {\r\n                planningDate = DateTime.Now.Date;\r\n            }\r\n\r\n            var model = new WorkshopManagementViewModel\r\n            {\r\n                Date = planningDate.Value,\r\n                MaintenanceJobs = new List\u003CMaintenanceJob\u003E()\r\n            };\r\n\r\n                // get planning\r\n                string dateStr = planningDate.Value.ToString(\u0022yyyy-MM-dd\u0022);\r\n            WorkshopPlanning planning = await _workshopManagementAPI.GetWorkshopPlanning(dateStr);\r\n            if (planning?.Jobs?.Count \u003E 0)\r\n            {\r\n                model.MaintenanceJobs.AddRange(planning.Jobs.OrderBy(j =\u003E j.StartTime));\r\n            }\r\n\r\n            return View(model);\r\n        }"
              },
              {
                "Type": "Microsoft.AspNetCore.Mvc.ViewResult",
                "Text": "View(\u0022Offline\u0022, new WorkshopManagementOfflineViewModel())"
              }
            ]
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "planningDate == null",
                "Statements": [
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "planningDate",
                    "Operator": "=",
                    "Right": "DateTime.Now.Date"
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WebApp.ViewModels.WorkshopManagementViewModel",
            "Name": "WorkshopManagementViewModel",
            "Arguments": [
              {
                "Type": "System.DateTime",
                "Text": "Date = planningDate.Value"
              },
              {
                "Type": "System.Collections.Generic.List\u003CPitstop.WebApp.Models.MaintenanceJob\u003E",
                "Text": "MaintenanceJobs = new List\u003CMaintenanceJob\u003E()"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Date",
            "Operator": "=",
            "Right": "planningDate.Value"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "MaintenanceJobs",
            "Operator": "=",
            "Right": "new List\u003CMaintenanceJob\u003E()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Collections.Generic.List\u003CPitstop.WebApp.Models.MaintenanceJob\u003E",
            "Name": "List\u003CMaintenanceJob\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.DateTime",
            "Name": "ToString",
            "Arguments": [
              {
                "Type": "string",
                "Text": "yyyy-MM-dd"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "WebApp.RESTClients.IWorkshopManagementAPI",
            "Name": "GetWorkshopPlanning",
            "Arguments": [
              {
                "Type": "string",
                "Text": "dateStr"
              }
            ]
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "planning?.Jobs?.Count \u003E 0",
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Collections.Generic.List\u003CPitstop.WebApp.Models.MaintenanceJob\u003E",
                    "Name": "AddRange",
                    "Arguments": [
                      {
                        "Type": "System.Linq.IOrderedEnumerable\u003CPitstop.WebApp.Models.MaintenanceJob\u003E",
                        "Text": "planning.Jobs.OrderBy(j =\u003E j.StartTime)"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Linq.Enumerable",
                    "Name": "OrderBy",
                    "Arguments": [
                      {
                        "Type": "System.Func\u003CPitstop.WebApp.Models.MaintenanceJob, System.DateTime\u003E",
                        "Text": "j =\u003E j.StartTime"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "View(model)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
            "Name": "View",
            "Arguments": [
              {
                "Type": "Pitstop.WebApp.ViewModels.WorkshopManagementViewModel",
                "Text": "model"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
            "Name": "View",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Offline"
              },
              {
                "Type": "Pitstop.WebApp.ViewModels.WorkshopManagementOfflineViewModel",
                "Text": "new WorkshopManagementOfflineViewModel ()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WebApp.ViewModels.WorkshopManagementOfflineViewModel",
            "Name": "WorkshopManagementOfflineViewModel"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "System.DateTime",
            "Name": "planningDate"
          },
          {
            "Type": "string",
            "Name": "jobId"
          }
        ],
        "Name": "Details",
        "Modifiers": 258,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpGetAttribute",
            "Name": "HttpGet"
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await _resiliencyHelper.ExecuteResilient(async () =\u003E\r\n        {\r\n            string dateStr = planningDate.ToString(\u0022yyyy-MM-dd\u0022);\r\n            var model = new WorkshopManagementDetailsViewModel\r\n            {\r\n                Date = planningDate,\r\n                MaintenanceJob = await _workshopManagementAPI.GetMaintenanceJob(dateStr, jobId)\r\n            };\r\n            return View(model);\r\n        }, View(\u0022Offline\u0022, new WorkshopManagementOfflineViewModel()))"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "PitStop.WebApp.Controllers.ResiliencyHelper",
            "Name": "ExecuteResilient",
            "Arguments": [
              {
                "Type": "System.Func\u003CSystem.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E\u003E",
                "Text": "async () =\u003E\r\n        {\r\n            string dateStr = planningDate.ToString(\u0022yyyy-MM-dd\u0022);\r\n            var model = new WorkshopManagementDetailsViewModel\r\n            {\r\n                Date = planningDate,\r\n                MaintenanceJob = await _workshopManagementAPI.GetMaintenanceJob(dateStr, jobId)\r\n            };\r\n            return View(model);\r\n        }"
              },
              {
                "Type": "Microsoft.AspNetCore.Mvc.ViewResult",
                "Text": "View(\u0022Offline\u0022, new WorkshopManagementOfflineViewModel())"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.DateTime",
            "Name": "ToString",
            "Arguments": [
              {
                "Type": "string",
                "Text": "yyyy-MM-dd"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WebApp.ViewModels.WorkshopManagementDetailsViewModel",
            "Name": "WorkshopManagementDetailsViewModel",
            "Arguments": [
              {
                "Type": "System.DateTime",
                "Text": "Date = planningDate"
              },
              {
                "Type": "Pitstop.WebApp.Models.MaintenanceJob",
                "Text": "MaintenanceJob = await _workshopManagementAPI.GetMaintenanceJob(dateStr, jobId)"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Date",
            "Operator": "=",
            "Right": "planningDate"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "MaintenanceJob",
            "Operator": "=",
            "Right": "await _workshopManagementAPI.GetMaintenanceJob(dateStr, jobId)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "WebApp.RESTClients.IWorkshopManagementAPI",
            "Name": "GetMaintenanceJob",
            "Arguments": [
              {
                "Type": "string",
                "Text": "dateStr"
              },
              {
                "Type": "string",
                "Text": "jobId"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "View(model)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
            "Name": "View",
            "Arguments": [
              {
                "Type": "Pitstop.WebApp.ViewModels.WorkshopManagementDetailsViewModel",
                "Text": "model"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
            "Name": "View",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Offline"
              },
              {
                "Type": "Pitstop.WebApp.ViewModels.WorkshopManagementOfflineViewModel",
                "Text": "new WorkshopManagementOfflineViewModel ()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WebApp.ViewModels.WorkshopManagementOfflineViewModel",
            "Name": "WorkshopManagementOfflineViewModel"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "System.DateTime",
            "Name": "planningDate"
          }
        ],
        "Name": "New",
        "Modifiers": 258,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpGetAttribute",
            "Name": "HttpGet"
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await _resiliencyHelper.ExecuteResilient(async () =\u003E\r\n        {\r\n            DateTime startTime = planningDate.Date.AddHours(8);\r\n\r\n            var model = new WorkshopManagementNewViewModel\r\n            {\r\n                Id = Guid.NewGuid(),\r\n                Date = planningDate,\r\n                StartTime = startTime,\r\n                EndTime = startTime.AddHours(2),\r\n                Vehicles = await GetAvailableVehiclesList()\r\n            };\r\n            return View(model);\r\n        }, View(\u0022Offline\u0022, new WorkshopManagementOfflineViewModel()))"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "PitStop.WebApp.Controllers.ResiliencyHelper",
            "Name": "ExecuteResilient",
            "Arguments": [
              {
                "Type": "System.Func\u003CSystem.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E\u003E",
                "Text": "async () =\u003E\r\n        {\r\n            DateTime startTime = planningDate.Date.AddHours(8);\r\n\r\n            var model = new WorkshopManagementNewViewModel\r\n            {\r\n                Id = Guid.NewGuid(),\r\n                Date = planningDate,\r\n                StartTime = startTime,\r\n                EndTime = startTime.AddHours(2),\r\n                Vehicles = await GetAvailableVehiclesList()\r\n            };\r\n            return View(model);\r\n        }"
              },
              {
                "Type": "Microsoft.AspNetCore.Mvc.ViewResult",
                "Text": "View(\u0022Offline\u0022, new WorkshopManagementOfflineViewModel())"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.DateTime",
            "Name": "AddHours",
            "Arguments": [
              {
                "Type": "int",
                "Text": "8"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WebApp.ViewModels.WorkshopManagementNewViewModel",
            "Name": "WorkshopManagementNewViewModel",
            "Arguments": [
              {
                "Type": "System.Guid",
                "Text": "Id = Guid.NewGuid()"
              },
              {
                "Type": "System.DateTime",
                "Text": "Date = planningDate"
              },
              {
                "Type": "System.DateTime",
                "Text": "StartTime = startTime"
              },
              {
                "Type": "System.DateTime",
                "Text": "EndTime = startTime.AddHours(2)"
              },
              {
                "Type": "System.Collections.Generic.IEnumerable\u003CMicrosoft.AspNetCore.Mvc.Rendering.SelectListItem\u003E",
                "Text": "Vehicles = await GetAvailableVehiclesList()"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Id",
            "Operator": "=",
            "Right": "Guid.NewGuid()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Guid",
            "Name": "NewGuid"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Date",
            "Operator": "=",
            "Right": "planningDate"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "StartTime",
            "Operator": "=",
            "Right": "startTime"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "EndTime",
            "Operator": "=",
            "Right": "startTime.AddHours(2)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.DateTime",
            "Name": "AddHours",
            "Arguments": [
              {
                "Type": "int",
                "Text": "2"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Vehicles",
            "Operator": "=",
            "Right": "await GetAvailableVehiclesList()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "PitStop.WebApp.Controllers.WorkshopManagementController",
            "Name": "GetAvailableVehiclesList"
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "View(model)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
            "Name": "View",
            "Arguments": [
              {
                "Type": "Pitstop.WebApp.ViewModels.WorkshopManagementNewViewModel",
                "Text": "model"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
            "Name": "View",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Offline"
              },
              {
                "Type": "Pitstop.WebApp.ViewModels.WorkshopManagementOfflineViewModel",
                "Text": "new WorkshopManagementOfflineViewModel ()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WebApp.ViewModels.WorkshopManagementOfflineViewModel",
            "Name": "WorkshopManagementOfflineViewModel"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "System.DateTime",
            "Name": "planningDate"
          },
          {
            "Type": "string",
            "Name": "jobId"
          }
        ],
        "Name": "Finish",
        "Modifiers": 258,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpGetAttribute",
            "Name": "HttpGet"
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await _resiliencyHelper.ExecuteResilient(async () =\u003E\r\n        {\r\n            string dateStr = planningDate.ToString(\u0022yyyy-MM-dd\u0022);\r\n            MaintenanceJob job = await _workshopManagementAPI.GetMaintenanceJob(dateStr, jobId);\r\n            var model = new WorkshopManagementFinishViewModel\r\n            {\r\n                Id = job.Id,\r\n                Date = planningDate,\r\n                ActualStartTime = job.StartTime,\r\n                ActualEndTime = job.EndTime\r\n            };\r\n            return View(model);\r\n        }, View(\u0022Offline\u0022, new WorkshopManagementOfflineViewModel()))"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "PitStop.WebApp.Controllers.ResiliencyHelper",
            "Name": "ExecuteResilient",
            "Arguments": [
              {
                "Type": "System.Func\u003CSystem.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E\u003E",
                "Text": "async () =\u003E\r\n        {\r\n            string dateStr = planningDate.ToString(\u0022yyyy-MM-dd\u0022);\r\n            MaintenanceJob job = await _workshopManagementAPI.GetMaintenanceJob(dateStr, jobId);\r\n            var model = new WorkshopManagementFinishViewModel\r\n            {\r\n                Id = job.Id,\r\n                Date = planningDate,\r\n                ActualStartTime = job.StartTime,\r\n                ActualEndTime = job.EndTime\r\n            };\r\n            return View(model);\r\n        }"
              },
              {
                "Type": "Microsoft.AspNetCore.Mvc.ViewResult",
                "Text": "View(\u0022Offline\u0022, new WorkshopManagementOfflineViewModel())"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.DateTime",
            "Name": "ToString",
            "Arguments": [
              {
                "Type": "string",
                "Text": "yyyy-MM-dd"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "WebApp.RESTClients.IWorkshopManagementAPI",
            "Name": "GetMaintenanceJob",
            "Arguments": [
              {
                "Type": "string",
                "Text": "dateStr"
              },
              {
                "Type": "string",
                "Text": "jobId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WebApp.ViewModels.WorkshopManagementFinishViewModel",
            "Name": "WorkshopManagementFinishViewModel",
            "Arguments": [
              {
                "Type": "System.Guid",
                "Text": "Id = job.Id"
              },
              {
                "Type": "System.DateTime",
                "Text": "Date = planningDate"
              },
              {
                "Type": "System.DateTime?",
                "Text": "ActualStartTime = job.StartTime"
              },
              {
                "Type": "System.DateTime?",
                "Text": "ActualEndTime = job.EndTime"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Id",
            "Operator": "=",
            "Right": "job.Id"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Date",
            "Operator": "=",
            "Right": "planningDate"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "ActualStartTime",
            "Operator": "=",
            "Right": "job.StartTime"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "ActualEndTime",
            "Operator": "=",
            "Right": "job.EndTime"
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "View(model)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
            "Name": "View",
            "Arguments": [
              {
                "Type": "Pitstop.WebApp.ViewModels.WorkshopManagementFinishViewModel",
                "Text": "model"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
            "Name": "View",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Offline"
              },
              {
                "Type": "Pitstop.WebApp.ViewModels.WorkshopManagementOfflineViewModel",
                "Text": "new WorkshopManagementOfflineViewModel ()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WebApp.ViewModels.WorkshopManagementOfflineViewModel",
            "Name": "WorkshopManagementOfflineViewModel"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WebApp.ViewModels.WorkshopManagementNewViewModel",
            "Name": "inputModel",
            "Attributes": [
              {
                "Type": "Microsoft.AspNetCore.Mvc.FromFormAttribute",
                "Name": "FromForm"
              }
            ]
          }
        ],
        "Name": "RegisterMaintenanceJob",
        "Modifiers": 258,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpPostAttribute",
            "Name": "HttpPost"
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "ModelState.IsValid",
                "Statements": [
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "await _resiliencyHelper.ExecuteResilient(async () =\u003E\r\n            {\r\n                string dateStr = inputModel.Date.ToString(\u0022yyyy-MM-dd\u0022);\r\n\r\n                try\r\n                {\r\n                        // register maintenance job\r\n                        DateTime startTime = inputModel.Date.Add(inputModel.StartTime.TimeOfDay);\r\n                    DateTime endTime = inputModel.Date.Add(inputModel.EndTime.TimeOfDay);\r\n                    Vehicle vehicle = await _workshopManagementAPI.GetVehicleByLicenseNumber(inputModel.SelectedVehicleLicenseNumber);\r\n                    Customer customer = await _workshopManagementAPI.GetCustomerById(vehicle.OwnerId);\r\n\r\n                    PlanMaintenanceJob planMaintenanceJobCommand = new PlanMaintenanceJob(Guid.NewGuid(), Guid.NewGuid(), startTime, endTime,\r\n                        (customer.CustomerId, customer.Name, customer.TelephoneNumber),\r\n                        (vehicle.LicenseNumber, vehicle.Brand, vehicle.Type), inputModel.Description);\r\n                    await _workshopManagementAPI.PlanMaintenanceJob(dateStr, planMaintenanceJobCommand);\r\n                }\r\n                catch (ApiException ex)\r\n                {\r\n                    if (ex.StatusCode == HttpStatusCode.Conflict)\r\n                    {\r\n                            // add errormessage from API exception to model\r\n                            var content = await ex.GetContentAsAsync\u003CBusinessRuleViolation\u003E();\r\n                        inputModel.Error = content.ErrorMessage;\r\n\r\n                            // repopulate list of available vehicles in the model\r\n                            inputModel.Vehicles = await GetAvailableVehiclesList();\r\n\r\n                            // back to New view\r\n                            return View(\u0022New\u0022, inputModel);\r\n                    }\r\n                }\r\n\r\n                return RedirectToAction(\u0022Index\u0022, new { planningDate = dateStr });\r\n            }, View(\u0022Offline\u0022, new WorkshopManagementOfflineViewModel()))"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "PitStop.WebApp.Controllers.ResiliencyHelper",
                    "Name": "ExecuteResilient",
                    "Arguments": [
                      {
                        "Type": "System.Func\u003CSystem.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E\u003E",
                        "Text": "async () =\u003E\r\n            {\r\n                string dateStr = inputModel.Date.ToString(\u0022yyyy-MM-dd\u0022);\r\n\r\n                try\r\n                {\r\n                        // register maintenance job\r\n                        DateTime startTime = inputModel.Date.Add(inputModel.StartTime.TimeOfDay);\r\n                    DateTime endTime = inputModel.Date.Add(inputModel.EndTime.TimeOfDay);\r\n                    Vehicle vehicle = await _workshopManagementAPI.GetVehicleByLicenseNumber(inputModel.SelectedVehicleLicenseNumber);\r\n                    Customer customer = await _workshopManagementAPI.GetCustomerById(vehicle.OwnerId);\r\n\r\n                    PlanMaintenanceJob planMaintenanceJobCommand = new PlanMaintenanceJob(Guid.NewGuid(), Guid.NewGuid(), startTime, endTime,\r\n                        (customer.CustomerId, customer.Name, customer.TelephoneNumber),\r\n                        (vehicle.LicenseNumber, vehicle.Brand, vehicle.Type), inputModel.Description);\r\n                    await _workshopManagementAPI.PlanMaintenanceJob(dateStr, planMaintenanceJobCommand);\r\n                }\r\n                catch (ApiException ex)\r\n                {\r\n                    if (ex.StatusCode == HttpStatusCode.Conflict)\r\n                    {\r\n                            // add errormessage from API exception to model\r\n                            var content = await ex.GetContentAsAsync\u003CBusinessRuleViolation\u003E();\r\n                        inputModel.Error = content.ErrorMessage;\r\n\r\n                            // repopulate list of available vehicles in the model\r\n                            inputModel.Vehicles = await GetAvailableVehiclesList();\r\n\r\n                            // back to New view\r\n                            return View(\u0022New\u0022, inputModel);\r\n                    }\r\n                }\r\n\r\n                return RedirectToAction(\u0022Index\u0022, new { planningDate = dateStr });\r\n            }"
                      },
                      {
                        "Type": "Microsoft.AspNetCore.Mvc.ViewResult",
                        "Text": "View(\u0022Offline\u0022, new WorkshopManagementOfflineViewModel())"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.DateTime",
                    "Name": "ToString",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "yyyy-MM-dd"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.DateTime",
                    "Name": "Add",
                    "Arguments": [
                      {
                        "Type": "System.TimeSpan",
                        "Text": "inputModel.StartTime.TimeOfDay"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.DateTime",
                    "Name": "Add",
                    "Arguments": [
                      {
                        "Type": "System.TimeSpan",
                        "Text": "inputModel.EndTime.TimeOfDay"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "WebApp.RESTClients.IWorkshopManagementAPI",
                    "Name": "GetVehicleByLicenseNumber",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "inputModel.SelectedVehicleLicenseNumber"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "WebApp.RESTClients.IWorkshopManagementAPI",
                    "Name": "GetCustomerById",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "vehicle.OwnerId"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.WebApp.Commands.PlanMaintenanceJob",
                    "Name": "PlanMaintenanceJob",
                    "Arguments": [
                      {
                        "Type": "System.Guid",
                        "Text": "Guid.NewGuid()"
                      },
                      {
                        "Type": "System.Guid",
                        "Text": "Guid.NewGuid()"
                      },
                      {
                        "Type": "System.DateTime",
                        "Text": "startTime"
                      },
                      {
                        "Type": "System.DateTime",
                        "Text": "endTime"
                      },
                      {
                        "Type": "(string CustomerId, string Name, string TelephoneNumber)",
                        "Text": "(customer.CustomerId, customer.Name, customer.TelephoneNumber)"
                      },
                      {
                        "Type": "(string LicenseNumber, string Brand, string Type)",
                        "Text": "(vehicle.LicenseNumber, vehicle.Brand, vehicle.Type)"
                      },
                      {
                        "Type": "string",
                        "Text": "inputModel.Description"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Guid",
                    "Name": "NewGuid"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Guid",
                    "Name": "NewGuid"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "WebApp.RESTClients.IWorkshopManagementAPI",
                    "Name": "PlanMaintenanceJob",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "dateStr"
                      },
                      {
                        "Type": "Pitstop.WebApp.Commands.PlanMaintenanceJob",
                        "Text": "planMaintenanceJobCommand"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.If, DendroDocs.Shared",
                    "Sections": [
                      {
                        "Condition": "ex.StatusCode == HttpStatusCode.Conflict",
                        "Statements": [
                          {
                            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                            "ContainingType": "Refit.ApiException",
                            "Name": "GetContentAsAsync\u003CBusinessRuleViolation\u003E"
                          },
                          {
                            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                            "Left": "inputModel.Error",
                            "Operator": "=",
                            "Right": "content.ErrorMessage"
                          },
                          {
                            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                            "Left": "inputModel.Vehicles",
                            "Operator": "=",
                            "Right": "await GetAvailableVehiclesList()"
                          },
                          {
                            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                            "ContainingType": "PitStop.WebApp.Controllers.WorkshopManagementController",
                            "Name": "GetAvailableVehiclesList"
                          },
                          {
                            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                            "Expression": "View(\u0022New\u0022, inputModel)"
                          },
                          {
                            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                            "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
                            "Name": "View",
                            "Arguments": [
                              {
                                "Type": "string",
                                "Text": "New"
                              },
                              {
                                "Type": "Pitstop.WebApp.ViewModels.WorkshopManagementNewViewModel",
                                "Text": "inputModel"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "RedirectToAction(\u0022Index\u0022, new { planningDate = dateStr })"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
                    "Name": "RedirectToAction",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "Index"
                      },
                      {
                        "Type": "\u003Canonymous type: string planningDate\u003E",
                        "Text": "new { planningDate = dateStr }"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
                    "Name": "View",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "Offline"
                      },
                      {
                        "Type": "Pitstop.WebApp.ViewModels.WorkshopManagementOfflineViewModel",
                        "Text": "new WorkshopManagementOfflineViewModel ()"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.WebApp.ViewModels.WorkshopManagementOfflineViewModel",
                    "Name": "WorkshopManagementOfflineViewModel"
                  }
                ]
              },
              {
                "Statements": [
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "inputModel.Vehicles",
                    "Operator": "=",
                    "Right": "await GetAvailableVehiclesList()"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "PitStop.WebApp.Controllers.WorkshopManagementController",
                    "Name": "GetAvailableVehiclesList"
                  },
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "View(\u0022New\u0022, inputModel)"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
                    "Name": "View",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "New"
                      },
                      {
                        "Type": "Pitstop.WebApp.ViewModels.WorkshopManagementNewViewModel",
                        "Text": "inputModel"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WebApp.ViewModels.WorkshopManagementFinishViewModel",
            "Name": "inputModel",
            "Attributes": [
              {
                "Type": "Microsoft.AspNetCore.Mvc.FromFormAttribute",
                "Name": "FromForm"
              }
            ]
          }
        ],
        "Name": "FinishMaintenanceJob",
        "Modifiers": 258,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpPostAttribute",
            "Name": "HttpPost"
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "ModelState.IsValid",
                "Statements": [
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "await _resiliencyHelper.ExecuteResilient(async () =\u003E\r\n            {\r\n                string dateStr = inputModel.Date.ToString(\u0022yyyy-MM-dd\u0022);\r\n                DateTime actualStartTime = inputModel.Date.Add(inputModel.ActualStartTime.Value.TimeOfDay);\r\n                DateTime actualEndTime = inputModel.Date.Add(inputModel.ActualEndTime.Value.TimeOfDay);\r\n\r\n                FinishMaintenanceJob cmd = new FinishMaintenanceJob(Guid.NewGuid(), inputModel.Id,\r\n                    actualStartTime, actualEndTime, inputModel.Notes);\r\n\r\n                await _workshopManagementAPI.FinishMaintenanceJob(dateStr, inputModel.Id.ToString(\u0022D\u0022), cmd);\r\n\r\n                return RedirectToAction(\u0022Details\u0022, new { planningDate = dateStr, jobId = inputModel.Id });\r\n            }, View(\u0022Offline\u0022, new WorkshopManagementOfflineViewModel()))"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "PitStop.WebApp.Controllers.ResiliencyHelper",
                    "Name": "ExecuteResilient",
                    "Arguments": [
                      {
                        "Type": "System.Func\u003CSystem.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E\u003E",
                        "Text": "async () =\u003E\r\n            {\r\n                string dateStr = inputModel.Date.ToString(\u0022yyyy-MM-dd\u0022);\r\n                DateTime actualStartTime = inputModel.Date.Add(inputModel.ActualStartTime.Value.TimeOfDay);\r\n                DateTime actualEndTime = inputModel.Date.Add(inputModel.ActualEndTime.Value.TimeOfDay);\r\n\r\n                FinishMaintenanceJob cmd = new FinishMaintenanceJob(Guid.NewGuid(), inputModel.Id,\r\n                    actualStartTime, actualEndTime, inputModel.Notes);\r\n\r\n                await _workshopManagementAPI.FinishMaintenanceJob(dateStr, inputModel.Id.ToString(\u0022D\u0022), cmd);\r\n\r\n                return RedirectToAction(\u0022Details\u0022, new { planningDate = dateStr, jobId = inputModel.Id });\r\n            }"
                      },
                      {
                        "Type": "Microsoft.AspNetCore.Mvc.ViewResult",
                        "Text": "View(\u0022Offline\u0022, new WorkshopManagementOfflineViewModel())"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.DateTime",
                    "Name": "ToString",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "yyyy-MM-dd"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.DateTime",
                    "Name": "Add",
                    "Arguments": [
                      {
                        "Type": "System.TimeSpan",
                        "Text": "inputModel.ActualStartTime.Value.TimeOfDay"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.DateTime",
                    "Name": "Add",
                    "Arguments": [
                      {
                        "Type": "System.TimeSpan",
                        "Text": "inputModel.ActualEndTime.Value.TimeOfDay"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.WebApp.Commands.FinishMaintenanceJob",
                    "Name": "FinishMaintenanceJob",
                    "Arguments": [
                      {
                        "Type": "System.Guid",
                        "Text": "Guid.NewGuid()"
                      },
                      {
                        "Type": "System.Guid",
                        "Text": "inputModel.Id"
                      },
                      {
                        "Type": "System.DateTime",
                        "Text": "actualStartTime"
                      },
                      {
                        "Type": "System.DateTime",
                        "Text": "actualEndTime"
                      },
                      {
                        "Type": "string",
                        "Text": "inputModel.Notes"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Guid",
                    "Name": "NewGuid"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "WebApp.RESTClients.IWorkshopManagementAPI",
                    "Name": "FinishMaintenanceJob",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "dateStr"
                      },
                      {
                        "Type": "string",
                        "Text": "inputModel.Id.ToString(\u0022D\u0022)"
                      },
                      {
                        "Type": "Pitstop.WebApp.Commands.FinishMaintenanceJob",
                        "Text": "cmd"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Guid",
                    "Name": "ToString",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "D"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "RedirectToAction(\u0022Details\u0022, new { planningDate = dateStr, jobId = inputModel.Id })"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
                    "Name": "RedirectToAction",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "Details"
                      },
                      {
                        "Type": "\u003Canonymous type: string planningDate, System.Guid jobId\u003E",
                        "Text": "new { planningDate = dateStr, jobId = inputModel.Id }"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
                    "Name": "View",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "Offline"
                      },
                      {
                        "Type": "Pitstop.WebApp.ViewModels.WorkshopManagementOfflineViewModel",
                        "Text": "new WorkshopManagementOfflineViewModel ()"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.WebApp.ViewModels.WorkshopManagementOfflineViewModel",
                    "Name": "WorkshopManagementOfflineViewModel"
                  }
                ]
              },
              {
                "Statements": [
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "View(\u0022Finish\u0022, inputModel)"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
                    "Name": "View",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "Finish"
                      },
                      {
                        "Type": "Pitstop.WebApp.ViewModels.WorkshopManagementFinishViewModel",
                        "Text": "inputModel"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Name": "Error",
        "Modifiers": 2,
        "ReturnType": "Microsoft.AspNetCore.Mvc.IActionResult",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "View()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.Controller",
            "Name": "View"
          }
        ]
      },
      {
        "Name": "GetAvailableVehiclesList",
        "Modifiers": 260,
        "ReturnType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.IEnumerable\u003CMicrosoft.AspNetCore.Mvc.Rendering.SelectListItem\u003E\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "WebApp.RESTClients.IWorkshopManagementAPI",
            "Name": "GetVehicles"
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "vehicles.Select(v =\u003E\r\n            new SelectListItem\r\n            {\r\n                Value = v.LicenseNumber,\r\n                Text = $\u0022{v.Brand} {v.Type} [{v.LicenseNumber}]\u0022\r\n            })"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Linq.Enumerable",
            "Name": "Select",
            "Arguments": [
              {
                "Type": "System.Func\u003CPitstop.WebApp.Models.Vehicle, Microsoft.AspNetCore.Mvc.Rendering.SelectListItem\u003E",
                "Text": "v =\u003E\r\n            new SelectListItem\r\n            {\r\n                Value = v.LicenseNumber,\r\n                Text = $\u0022{v.Brand} {v.Type} [{v.LicenseNumber}]\u0022\r\n            }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.Rendering.SelectListItem",
            "Name": "SelectListItem",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Value = v.LicenseNumber"
              },
              {
                "Type": "string",
                "Text": "Text = $\u0022{v.Brand} {v.Type} [{v.LicenseNumber}]\u0022"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Value",
            "Operator": "=",
            "Right": "v.LicenseNumber"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Text",
            "Operator": "=",
            "Right": "$\u0022{v.Brand} {v.Type} [{v.LicenseNumber}]\u0022"
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.WebApp.Mappers.Mappers",
    "Modifiers": 18,
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "Pitstop.WebApp.ViewModels.CustomerManagementNewViewModel",
            "Name": "source"
          }
        ],
        "Name": "MapToRegisterCustomer",
        "Modifiers": 18,
        "ReturnType": "Pitstop.WebApp.Commands.RegisterCustomer",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "new RegisterCustomer     (\r\n        Guid.NewGuid(),\r\n        Guid.NewGuid().ToString(\u0022N\u0022),\r\n        source.Customer.Name,\r\n        source.Customer.Address,\r\n        source.Customer.PostalCode,\r\n        source.Customer.City,\r\n        source.Customer.TelephoneNumber,\r\n        source.Customer.EmailAddress\r\n    )"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WebApp.Commands.RegisterCustomer",
            "Name": "RegisterCustomer",
            "Arguments": [
              {
                "Type": "System.Guid",
                "Text": "Guid.NewGuid()"
              },
              {
                "Type": "string",
                "Text": "Guid.NewGuid().ToString(\u0022N\u0022)"
              },
              {
                "Type": "string",
                "Text": "source.Customer.Name"
              },
              {
                "Type": "string",
                "Text": "source.Customer.Address"
              },
              {
                "Type": "string",
                "Text": "source.Customer.PostalCode"
              },
              {
                "Type": "string",
                "Text": "source.Customer.City"
              },
              {
                "Type": "string",
                "Text": "source.Customer.TelephoneNumber"
              },
              {
                "Type": "string",
                "Text": "source.Customer.EmailAddress"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Guid",
            "Name": "NewGuid"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Guid",
            "Name": "ToString",
            "Arguments": [
              {
                "Type": "string",
                "Text": "N"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Guid",
            "Name": "NewGuid"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WebApp.ViewModels.VehicleManagementNewViewModel",
            "Name": "source"
          }
        ],
        "Name": "MapToRegisterVehicle",
        "Modifiers": 18,
        "ReturnType": "Pitstop.WebApp.Commands.RegisterVehicle",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "new RegisterVehicle (\r\n        Guid.NewGuid(),\r\n        source.Vehicle.LicenseNumber,\r\n        source.Vehicle.Brand,\r\n        source.Vehicle.Type,\r\n        source.SelectedCustomerId\r\n    )"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WebApp.Commands.RegisterVehicle",
            "Name": "RegisterVehicle",
            "Arguments": [
              {
                "Type": "System.Guid",
                "Text": "Guid.NewGuid()"
              },
              {
                "Type": "string",
                "Text": "source.Vehicle.LicenseNumber"
              },
              {
                "Type": "string",
                "Text": "source.Vehicle.Brand"
              },
              {
                "Type": "string",
                "Text": "source.Vehicle.Type"
              },
              {
                "Type": "string",
                "Text": "source.SelectedCustomerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Guid",
            "Name": "NewGuid"
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.WebApp.Models.BusinessRuleViolation",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "string",
        "Name": "ErrorMessage",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WebApp.Models.Customer",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "string",
        "Name": "CustomerId",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "Name",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "System.ComponentModel.DataAnnotations.RequiredAttribute",
            "Name": "Required"
          },
          {
            "Type": "System.ComponentModel.DataAnnotations.DisplayAttribute",
            "Name": "Display",
            "Arguments": [
              {
                "Name": "Name",
                "Type": "string",
                "Value": "Name"
              }
            ]
          }
        ]
      },
      {
        "Type": "string",
        "Name": "Address",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "System.ComponentModel.DataAnnotations.RequiredAttribute",
            "Name": "Required"
          },
          {
            "Type": "System.ComponentModel.DataAnnotations.DisplayAttribute",
            "Name": "Display",
            "Arguments": [
              {
                "Name": "Name",
                "Type": "string",
                "Value": "Address"
              }
            ]
          }
        ]
      },
      {
        "Type": "string",
        "Name": "PostalCode",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "System.ComponentModel.DataAnnotations.RequiredAttribute",
            "Name": "Required"
          },
          {
            "Type": "System.ComponentModel.DataAnnotations.DisplayAttribute",
            "Name": "Display",
            "Arguments": [
              {
                "Name": "Name",
                "Type": "string",
                "Value": "Postal code"
              }
            ]
          }
        ]
      },
      {
        "Type": "string",
        "Name": "City",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "System.ComponentModel.DataAnnotations.RequiredAttribute",
            "Name": "Required"
          },
          {
            "Type": "System.ComponentModel.DataAnnotations.DisplayAttribute",
            "Name": "Display",
            "Arguments": [
              {
                "Name": "Name",
                "Type": "string",
                "Value": "City"
              }
            ]
          }
        ]
      },
      {
        "Type": "string",
        "Name": "TelephoneNumber",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "System.ComponentModel.DataAnnotations.RequiredAttribute",
            "Name": "Required"
          },
          {
            "Type": "System.ComponentModel.DataAnnotations.DisplayAttribute",
            "Name": "Display",
            "Arguments": [
              {
                "Name": "Name",
                "Type": "string",
                "Value": "Phonenumber"
              }
            ]
          }
        ]
      },
      {
        "Type": "string",
        "Name": "EmailAddress",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "System.ComponentModel.DataAnnotations.RequiredAttribute",
            "Name": "Required"
          },
          {
            "Type": "System.ComponentModel.DataAnnotations.DisplayAttribute",
            "Name": "Display",
            "Arguments": [
              {
                "Name": "Name",
                "Type": "string",
                "Value": "Email address"
              }
            ]
          },
          {
            "Type": "System.ComponentModel.DataAnnotations.EmailAddressAttribute",
            "Name": "EmailAddress"
          }
        ]
      },
      {
        "Type": "int?",
        "Name": "LoyaltyLevel",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "System.ComponentModel.DataAnnotations.DisplayAttribute",
            "Name": "Display",
            "Arguments": [
              {
                "Name": "Name",
                "Type": "string",
                "Value": "Loyalty level"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.WebApp.Models.MaintenanceJob",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "System.Guid",
        "Name": "Id",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "Status",
        "Modifiers": 2
      },
      {
        "Type": "System.DateTime",
        "Name": "StartTime",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "System.ComponentModel.DataAnnotations.DisplayAttribute",
            "Name": "Display",
            "Arguments": [
              {
                "Name": "Name",
                "Type": "string",
                "Value": "Start Time"
              }
            ]
          }
        ]
      },
      {
        "Type": "System.DateTime",
        "Name": "EndTime",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "System.ComponentModel.DataAnnotations.DisplayAttribute",
            "Name": "Display",
            "Arguments": [
              {
                "Name": "Name",
                "Type": "string",
                "Value": "End Time"
              }
            ]
          }
        ]
      },
      {
        "Type": "Pitstop.WebApp.Models.Vehicle",
        "Name": "Vehicle",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "System.ComponentModel.DataAnnotations.DisplayAttribute",
            "Name": "Display",
            "Arguments": [
              {
                "Name": "Name",
                "Type": "string",
                "Value": "Vehicle"
              }
            ]
          }
        ]
      },
      {
        "Type": "Pitstop.WebApp.Models.Customer",
        "Name": "Customer",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "System.ComponentModel.DataAnnotations.DisplayAttribute",
            "Name": "Display",
            "Arguments": [
              {
                "Name": "Name",
                "Type": "string",
                "Value": "Customer"
              }
            ]
          }
        ]
      },
      {
        "Type": "string",
        "Name": "Description",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "System.ComponentModel.DataAnnotations.DisplayAttribute",
            "Name": "Display",
            "Arguments": [
              {
                "Name": "Name",
                "Type": "string",
                "Value": "Description"
              }
            ]
          }
        ]
      },
      {
        "Type": "System.DateTime?",
        "Name": "ActualStartTime",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "System.ComponentModel.DataAnnotations.DisplayAttribute",
            "Name": "Display",
            "Arguments": [
              {
                "Name": "Name",
                "Type": "string",
                "Value": "Started at"
              }
            ]
          }
        ]
      },
      {
        "Type": "System.DateTime?",
        "Name": "ActualEndTime",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "System.ComponentModel.DataAnnotations.DisplayAttribute",
            "Name": "Display",
            "Arguments": [
              {
                "Name": "Name",
                "Type": "string",
                "Value": "Completed at"
              }
            ]
          }
        ]
      },
      {
        "Type": "string",
        "Name": "Notes",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "System.ComponentModel.DataAnnotations.DisplayAttribute",
            "Name": "Display",
            "Arguments": [
              {
                "Name": "Name",
                "Type": "string",
                "Value": "Mechanic notes"
              }
            ]
          }
        ]
      },
      {
        "Type": "System.DateTime",
        "Name": "WorkshopPlanningDate",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "System.ComponentModel.DataAnnotations.DisplayAttribute",
            "Name": "Display",
            "Arguments": [
              {
                "Name": "Name",
                "Type": "string",
                "Value": "Date"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.WebApp.Models.Vehicle",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "string",
        "Name": "LicenseNumber",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "System.ComponentModel.DataAnnotations.RequiredAttribute",
            "Name": "Required"
          },
          {
            "Type": "System.ComponentModel.DataAnnotations.DisplayAttribute",
            "Name": "Display",
            "Arguments": [
              {
                "Name": "Name",
                "Type": "string",
                "Value": "License number"
              }
            ]
          },
          {
            "Type": "System.ComponentModel.DataAnnotations.RegularExpressionAttribute",
            "Name": "RegularExpression",
            "Arguments": [
              {
                "Name": "^((\\d{1,3}|[a-zA-Z]{1,3})-){2}(\\d{1,3}|[a-zA-Z]{1,3})$",
                "Type": "string",
                "Value": "^((\\d{1,3}|[a-zA-Z]{1,3})-){2}(\\d{1,3}|[a-zA-Z]{1,3})$"
              },
              {
                "Name": "ErrorMessage",
                "Type": "string",
                "Value": "LicenseNumber is not in a valid format."
              }
            ]
          }
        ]
      },
      {
        "Type": "string",
        "Name": "Brand",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "System.ComponentModel.DataAnnotations.RequiredAttribute",
            "Name": "Required"
          },
          {
            "Type": "System.ComponentModel.DataAnnotations.DisplayAttribute",
            "Name": "Display",
            "Arguments": [
              {
                "Name": "Name",
                "Type": "string",
                "Value": "Brand"
              }
            ]
          }
        ]
      },
      {
        "Type": "string",
        "Name": "Type",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "System.ComponentModel.DataAnnotations.RequiredAttribute",
            "Name": "Required"
          },
          {
            "Type": "System.ComponentModel.DataAnnotations.DisplayAttribute",
            "Name": "Display",
            "Arguments": [
              {
                "Name": "Name",
                "Type": "string",
                "Value": "Type"
              }
            ]
          }
        ]
      },
      {
        "Type": "string",
        "Name": "OwnerId",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "System.ComponentModel.DataAnnotations.DisplayAttribute",
            "Name": "Display",
            "Arguments": [
              {
                "Name": "Name",
                "Type": "string",
                "Value": "Owner"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.WebApp.Models.WorkshopPlanning",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "System.DateTime",
        "Name": "Date",
        "Modifiers": 2
      },
      {
        "Type": "System.Collections.Generic.List\u003CPitstop.WebApp.Models.MaintenanceJob\u003E",
        "Name": "Jobs",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WebApp.ViewModels.CustomerManagementDetailsViewModel",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "Pitstop.WebApp.Models.Customer",
        "Name": "Customer",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WebApp.ViewModels.CustomerManagementNewViewModel",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "Pitstop.WebApp.Models.Customer",
        "Name": "Customer",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WebApp.ViewModels.CustomerManagementOfflineViewModel",
    "Modifiers": 2
  },
  {
    "FullName": "Pitstop.WebApp.ViewModels.CustomerManagementViewModel",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u003CPitstop.WebApp.Models.Customer\u003E",
        "Name": "Customers",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WebApp.ViewModels.VehicleManagementDetailsViewModel",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "Pitstop.WebApp.Models.Vehicle",
        "Name": "Vehicle",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "Owner",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WebApp.ViewModels.VehicleManagementNewViewModel",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "Pitstop.WebApp.Models.Vehicle",
        "Name": "Vehicle",
        "Modifiers": 2
      },
      {
        "Type": "System.Collections.Generic.IEnumerable\u003CMicrosoft.AspNetCore.Mvc.Rendering.SelectListItem\u003E",
        "Name": "Customers",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "SelectedCustomerId",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "System.ComponentModel.DataAnnotations.RequiredAttribute",
            "Name": "Required",
            "Arguments": [
              {
                "Name": "ErrorMessage",
                "Type": "string",
                "Value": "Owner is required"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.WebApp.ViewModels.VehicleManagementOfflineViewModel",
    "Modifiers": 2
  },
  {
    "FullName": "Pitstop.WebApp.ViewModels.VehicleManagementViewModel",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u003CPitstop.WebApp.Models.Vehicle\u003E",
        "Name": "Vehicles",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WebApp.ViewModels.WorkshopManagementDetailsViewModel",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "System.DateTime",
        "Name": "Date",
        "Modifiers": 2
      },
      {
        "Type": "Pitstop.WebApp.Models.MaintenanceJob",
        "Name": "MaintenanceJob",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WebApp.ViewModels.WorkshopManagementFinishViewModel",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "System.Guid",
        "Name": "Id",
        "Modifiers": 2
      },
      {
        "Type": "System.DateTime",
        "Name": "Date",
        "Modifiers": 2
      },
      {
        "Type": "System.DateTime?",
        "Name": "ActualStartTime",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "System.ComponentModel.DataAnnotations.DisplayAttribute",
            "Name": "Display",
            "Arguments": [
              {
                "Name": "Name",
                "Type": "string",
                "Value": "Started at"
              }
            ]
          },
          {
            "Type": "System.ComponentModel.DataAnnotations.DataTypeAttribute",
            "Name": "DataType",
            "Arguments": [
              {
                "Name": "dataType",
                "Type": "System.ComponentModel.DataAnnotations.DataType",
                "Value": "DataType.Time"
              }
            ]
          }
        ]
      },
      {
        "Type": "System.DateTime?",
        "Name": "ActualEndTime",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "System.ComponentModel.DataAnnotations.DisplayAttribute",
            "Name": "Display",
            "Arguments": [
              {
                "Name": "Name",
                "Type": "string",
                "Value": "Completed at"
              }
            ]
          },
          {
            "Type": "System.ComponentModel.DataAnnotations.DataTypeAttribute",
            "Name": "DataType",
            "Arguments": [
              {
                "Name": "dataType",
                "Type": "System.ComponentModel.DataAnnotations.DataType",
                "Value": "DataType.Time"
              }
            ]
          }
        ]
      },
      {
        "Type": "string",
        "Name": "Notes",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "System.ComponentModel.DataAnnotations.DisplayAttribute",
            "Name": "Display",
            "Arguments": [
              {
                "Name": "Name",
                "Type": "string",
                "Value": "Mechanic notes"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.WebApp.ViewModels.WorkshopManagementNewViewModel",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "System.Guid",
        "Name": "Id",
        "Modifiers": 2
      },
      {
        "Type": "System.DateTime",
        "Name": "Date",
        "Modifiers": 2
      },
      {
        "Type": "System.DateTime",
        "Name": "StartTime",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "System.ComponentModel.DataAnnotations.RequiredAttribute",
            "Name": "Required"
          },
          {
            "Type": "System.ComponentModel.DataAnnotations.DataTypeAttribute",
            "Name": "DataType",
            "Arguments": [
              {
                "Name": "dataType",
                "Type": "System.ComponentModel.DataAnnotations.DataType",
                "Value": "DataType.Time"
              }
            ]
          },
          {
            "Type": "System.ComponentModel.DataAnnotations.DisplayAttribute",
            "Name": "Display",
            "Arguments": [
              {
                "Name": "Name",
                "Type": "string",
                "Value": "Start Time"
              }
            ]
          }
        ]
      },
      {
        "Type": "System.DateTime",
        "Name": "EndTime",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "System.ComponentModel.DataAnnotations.RequiredAttribute",
            "Name": "Required"
          },
          {
            "Type": "System.ComponentModel.DataAnnotations.DisplayAttribute",
            "Name": "Display",
            "Arguments": [
              {
                "Name": "Name",
                "Type": "string",
                "Value": "End Time"
              }
            ]
          },
          {
            "Type": "System.ComponentModel.DataAnnotations.DataTypeAttribute",
            "Name": "DataType",
            "Arguments": [
              {
                "Name": "dataType",
                "Type": "System.ComponentModel.DataAnnotations.DataType",
                "Value": "DataType.Time"
              }
            ]
          }
        ]
      },
      {
        "Type": "string",
        "Name": "Description",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "System.ComponentModel.DataAnnotations.RequiredAttribute",
            "Name": "Required"
          },
          {
            "Type": "System.ComponentModel.DataAnnotations.DisplayAttribute",
            "Name": "Display",
            "Arguments": [
              {
                "Name": "Name",
                "Type": "string",
                "Value": "Description"
              }
            ]
          }
        ]
      },
      {
        "Type": "System.Collections.Generic.IEnumerable\u003CMicrosoft.AspNetCore.Mvc.Rendering.SelectListItem\u003E",
        "Name": "Vehicles",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "SelectedVehicleLicenseNumber",
        "Modifiers": 2,
        "Attributes": [
          {
            "Type": "System.ComponentModel.DataAnnotations.RequiredAttribute",
            "Name": "Required",
            "Arguments": [
              {
                "Name": "ErrorMessage",
                "Type": "string",
                "Value": "Vehicle is required"
              }
            ]
          },
          {
            "Type": "System.ComponentModel.DataAnnotations.DisplayAttribute",
            "Name": "Display",
            "Arguments": [
              {
                "Name": "Name",
                "Type": "string",
                "Value": "Vehicle"
              }
            ]
          }
        ]
      },
      {
        "Type": "string",
        "Name": "Error",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WebApp.ViewModels.WorkshopManagementOfflineViewModel",
    "Modifiers": 2
  },
  {
    "FullName": "Pitstop.WebApp.ViewModels.WorkshopManagementViewModel",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "System.DateTime",
        "Name": "Date",
        "Modifiers": 2
      },
      {
        "Type": "System.Collections.Generic.List\u003CPitstop.WebApp.Models.MaintenanceJob\u003E",
        "Name": "MaintenanceJobs",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.CommandHandlers.CommandHandlersDIRegistration",
    "Modifiers": 18,
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "Microsoft.Extensions.DependencyInjection.IServiceCollection",
            "Name": "services"
          }
        ],
        "Name": "AddCommandHandlers",
        "Modifiers": 18,
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions",
            "Name": "AddTransient\u003CIPlanMaintenanceJobCommandHandler, PlanMaintenanceJobCommandHandler\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions",
            "Name": "AddTransient\u003CIFinishMaintenanceJobCommandHandler, FinishMaintenanceJobCommandHandler\u003E"
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.CommandHandlers.FinishMaintenanceJobCommandHandler",
    "BaseTypes": [
      "Pitstop.WorkshopManagementAPI.CommandHandlers.IFinishMaintenanceJobCommandHandler"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "Pitstop.Infrastructure.Messaging.IMessagePublisher",
        "Name": "_messagePublisher"
      },
      {
        "Type": "Pitstop.WorkshopManagementAPI.Repositories.IEventSourceRepository\u003CPitstop.WorkshopManagementAPI.Domain.Entities.WorkshopPlanning\u003E",
        "Name": "_planningRepo"
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "Pitstop.Infrastructure.Messaging.IMessagePublisher",
            "Name": "messagePublisher"
          },
          {
            "Type": "Pitstop.WorkshopManagementAPI.Repositories.IEventSourceRepository\u003CPitstop.WorkshopManagementAPI.Domain.Entities.WorkshopPlanning\u003E",
            "Name": "planningRepo"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_messagePublisher",
            "Operator": "=",
            "Right": "messagePublisher"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_planningRepo",
            "Operator": "=",
            "Right": "planningRepo"
          }
        ],
        "Name": "FinishMaintenanceJobCommandHandler",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "System.DateTime",
            "Name": "planningDate"
          },
          {
            "Type": "Pitstop.WorkshopManagementAPI.Commands.FinishMaintenanceJob",
            "Name": "command"
          }
        ],
        "Name": "HandleCommandAsync",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WorkshopManagementAPI.Domain.Entities.WorkshopPlanning\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.WorkshopPlanningId",
            "Name": "Create",
            "Arguments": [
              {
                "Type": "System.DateTime",
                "Text": "planningDate"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Repositories.IEventSourceRepository\u003CPitstop.WorkshopManagementAPI.Domain.Entities.WorkshopPlanning\u003E",
            "Name": "GetByIdAsync",
            "Arguments": [
              {
                "Type": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.WorkshopPlanningId",
                "Text": "aggregateId"
              }
            ]
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "planning == null",
                "Statements": [
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "null"
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.Entities.WorkshopPlanning",
            "Name": "FinishMaintenanceJob",
            "Arguments": [
              {
                "Type": "Pitstop.WorkshopManagementAPI.Commands.FinishMaintenanceJob",
                "Text": "command"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.Core.AggregateRoot\u003CPitstop.WorkshopManagementAPI.Domain.ValueObjects.WorkshopPlanningId\u003E",
            "Name": "GetEvents"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Repositories.IEventSourceRepository\u003CPitstop.WorkshopManagementAPI.Domain.Entities.WorkshopPlanning\u003E",
            "Name": "SaveAsync",
            "Arguments": [
              {
                "Type": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.WorkshopPlanningId",
                "Text": "planning.Id"
              },
              {
                "Type": "int",
                "Text": "planning.OriginalVersion"
              },
              {
                "Type": "int",
                "Text": "planning.Version"
              },
              {
                "Type": "System.Collections.Generic.IEnumerable\u003CPitstop.Infrastructure.Messaging.Event\u003E",
                "Text": "events"
              }
            ]
          },
          {
            "$type": "DendroDocs.ForEach, DendroDocs.Shared",
            "Expression": "e in events",
            "Statements": [
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "Pitstop.Infrastructure.Messaging.IMessagePublisher",
                "Name": "PublishMessageAsync",
                "Arguments": [
                  {
                    "Type": "string",
                    "Text": "e.MessageType"
                  },
                  {
                    "Type": "Pitstop.Infrastructure.Messaging.Event",
                    "Text": "e"
                  },
                  {
                    "Type": "string",
                    "Text": ""
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "planning"
          }
        ]
      }
    ]
  },
  {
    "Type": 1,
    "FullName": "Pitstop.WorkshopManagementAPI.CommandHandlers.IFinishMaintenanceJobCommandHandler",
    "Modifiers": 2,
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "System.DateTime",
            "Name": "planningDate"
          },
          {
            "Type": "Pitstop.WorkshopManagementAPI.Commands.FinishMaintenanceJob",
            "Name": "command"
          }
        ],
        "Name": "HandleCommandAsync",
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WorkshopManagementAPI.Domain.Entities.WorkshopPlanning\u003E"
      }
    ]
  },
  {
    "Type": 1,
    "FullName": "Pitstop.WorkshopManagementAPI.CommandHandlers.IPlanMaintenanceJobCommandHandler",
    "Modifiers": 2,
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "System.DateTime",
            "Name": "planningDate"
          },
          {
            "Type": "Pitstop.WorkshopManagementAPI.Commands.PlanMaintenanceJob",
            "Name": "command"
          }
        ],
        "Name": "HandleCommandAsync",
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WorkshopManagementAPI.Domain.Entities.WorkshopPlanning\u003E"
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.CommandHandlers.PlanMaintenanceJobCommandHandler",
    "BaseTypes": [
      "Pitstop.WorkshopManagementAPI.CommandHandlers.IPlanMaintenanceJobCommandHandler"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "Pitstop.Infrastructure.Messaging.IMessagePublisher",
        "Name": "_messagePublisher"
      },
      {
        "Type": "Pitstop.WorkshopManagementAPI.Repositories.IEventSourceRepository\u003CPitstop.WorkshopManagementAPI.Domain.Entities.WorkshopPlanning\u003E",
        "Name": "_planningRepo"
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "Pitstop.Infrastructure.Messaging.IMessagePublisher",
            "Name": "messagePublisher"
          },
          {
            "Type": "Pitstop.WorkshopManagementAPI.Repositories.IEventSourceRepository\u003CPitstop.WorkshopManagementAPI.Domain.Entities.WorkshopPlanning\u003E",
            "Name": "planningRepo"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_messagePublisher",
            "Operator": "=",
            "Right": "messagePublisher"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_planningRepo",
            "Operator": "=",
            "Right": "planningRepo"
          }
        ],
        "Name": "PlanMaintenanceJobCommandHandler",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "System.DateTime",
            "Name": "planningDate"
          },
          {
            "Type": "Pitstop.WorkshopManagementAPI.Commands.PlanMaintenanceJob",
            "Name": "command"
          }
        ],
        "Name": "HandleCommandAsync",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WorkshopManagementAPI.Domain.Entities.WorkshopPlanning\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.WorkshopPlanningId",
            "Name": "Create",
            "Arguments": [
              {
                "Type": "System.DateTime",
                "Text": "planningDate"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Repositories.IEventSourceRepository\u003CPitstop.WorkshopManagementAPI.Domain.Entities.WorkshopPlanning\u003E",
            "Name": "GetByIdAsync",
            "Arguments": [
              {
                "Type": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.WorkshopPlanningId",
                "Text": "aggregateId"
              }
            ]
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "planning == null",
                "Statements": [
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "planning",
                    "Operator": "=",
                    "Right": "WorkshopPlanning.Create(planningDate)"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.Entities.WorkshopPlanning",
                    "Name": "Create",
                    "Arguments": [
                      {
                        "Type": "System.DateTime",
                        "Text": "planningDate"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.Entities.WorkshopPlanning",
            "Name": "PlanMaintenanceJob",
            "Arguments": [
              {
                "Type": "Pitstop.WorkshopManagementAPI.Commands.PlanMaintenanceJob",
                "Text": "command"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.Core.AggregateRoot\u003CPitstop.WorkshopManagementAPI.Domain.ValueObjects.WorkshopPlanningId\u003E",
            "Name": "GetEvents"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Repositories.IEventSourceRepository\u003CPitstop.WorkshopManagementAPI.Domain.Entities.WorkshopPlanning\u003E",
            "Name": "SaveAsync",
            "Arguments": [
              {
                "Type": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.WorkshopPlanningId",
                "Text": "planning.Id"
              },
              {
                "Type": "int",
                "Text": "planning.OriginalVersion"
              },
              {
                "Type": "int",
                "Text": "planning.Version"
              },
              {
                "Type": "System.Collections.Generic.IEnumerable\u003CPitstop.Infrastructure.Messaging.Event\u003E",
                "Text": "events"
              }
            ]
          },
          {
            "$type": "DendroDocs.ForEach, DendroDocs.Shared",
            "Expression": "e in events",
            "Statements": [
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "Pitstop.Infrastructure.Messaging.IMessagePublisher",
                "Name": "PublishMessageAsync",
                "Arguments": [
                  {
                    "Type": "string",
                    "Text": "e.MessageType"
                  },
                  {
                    "Type": "Pitstop.Infrastructure.Messaging.Event",
                    "Text": "e"
                  },
                  {
                    "Type": "string",
                    "Text": ""
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "planning"
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.Commands.FinishMaintenanceJob",
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.Command"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "System.Guid",
        "Name": "JobId",
        "Modifiers": 130
      },
      {
        "Type": "System.DateTime",
        "Name": "StartTime",
        "Modifiers": 130
      },
      {
        "Type": "System.DateTime",
        "Name": "EndTime",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "Notes",
        "Modifiers": 130
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          },
          {
            "Type": "System.Guid",
            "Name": "jobId"
          },
          {
            "Type": "System.DateTime",
            "Name": "startTime"
          },
          {
            "Type": "System.DateTime",
            "Name": "endTime"
          },
          {
            "Type": "string",
            "Name": "notes"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "JobId",
            "Operator": "=",
            "Right": "jobId"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "StartTime",
            "Operator": "=",
            "Right": "startTime"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "EndTime",
            "Operator": "=",
            "Right": "endTime"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Notes",
            "Operator": "=",
            "Right": "notes"
          }
        ],
        "Name": "FinishMaintenanceJob",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.Commands.PlanMaintenanceJob",
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.Command"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "System.Guid",
        "Name": "JobId",
        "Modifiers": 130
      },
      {
        "Type": "System.DateTime",
        "Name": "StartTime",
        "Modifiers": 130
      },
      {
        "Type": "System.DateTime",
        "Name": "EndTime",
        "Modifiers": 130
      },
      {
        "Type": "(string Id, string Name, string TelephoneNumber)",
        "Name": "CustomerInfo",
        "Modifiers": 130
      },
      {
        "Type": "(string LicenseNumber, string Brand, string Type)",
        "Name": "VehicleInfo",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "Description",
        "Modifiers": 130
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          },
          {
            "Type": "System.Guid",
            "Name": "jobId"
          },
          {
            "Type": "System.DateTime",
            "Name": "startTime"
          },
          {
            "Type": "System.DateTime",
            "Name": "endTime"
          },
          {
            "Type": "(string Id, string Name, string TelephoneNumber)",
            "Name": "customerInfo"
          },
          {
            "Type": "(string LicenseNumber, string Brand, string Type)",
            "Name": "vehicleInfo"
          },
          {
            "Type": "string",
            "Name": "description"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "JobId",
            "Operator": "=",
            "Right": "jobId"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "StartTime",
            "Operator": "=",
            "Right": "startTime"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "EndTime",
            "Operator": "=",
            "Right": "endTime"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "CustomerInfo",
            "Operator": "=",
            "Right": "customerInfo"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "VehicleInfo",
            "Operator": "=",
            "Right": "vehicleInfo"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Description",
            "Operator": "=",
            "Right": "description"
          }
        ],
        "Name": "PlanMaintenanceJob",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.Controllers.RefDataController",
    "BaseTypes": [
      "Microsoft.AspNetCore.Mvc.Controller"
    ],
    "Modifiers": 2,
    "Attributes": [
      {
        "Type": "Microsoft.AspNetCore.Mvc.RouteAttribute",
        "Name": "Route",
        "Arguments": [
          {
            "Name": "template",
            "Type": "string",
            "Value": "/api/[controller]"
          }
        ]
      }
    ],
    "Fields": [
      {
        "Type": "Pitstop.WorkshopManagementAPI.Repositories.ICustomerRepository",
        "Name": "_customerRepo"
      },
      {
        "Type": "Pitstop.WorkshopManagementAPI.Repositories.IVehicleRepository",
        "Name": "_vehicleRepo"
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "Pitstop.WorkshopManagementAPI.Repositories.ICustomerRepository",
            "Name": "customerRepo"
          },
          {
            "Type": "Pitstop.WorkshopManagementAPI.Repositories.IVehicleRepository",
            "Name": "vehicleRepo"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_customerRepo",
            "Operator": "=",
            "Right": "customerRepo"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_vehicleRepo",
            "Operator": "=",
            "Right": "vehicleRepo"
          }
        ],
        "Name": "RefDataController",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Name": "GetCustomers",
        "Modifiers": 258,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpGetAttribute",
            "Name": "HttpGet"
          },
          {
            "Type": "Microsoft.AspNetCore.Mvc.RouteAttribute",
            "Name": "Route",
            "Arguments": [
              {
                "Name": "template",
                "Type": "string",
                "Value": "customers"
              }
            ]
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "Ok(await _customerRepo.GetCustomersAsync())"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
            "Name": "Ok",
            "Arguments": [
              {
                "Type": "System.Collections.Generic.IEnumerable\u003CPitstop.WorkshopManagementAPI.Repositories.Model.Customer\u003E",
                "Text": "await _customerRepo.GetCustomersAsync()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Repositories.ICustomerRepository",
            "Name": "GetCustomersAsync"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "customerId"
          }
        ],
        "Name": "GetCustomerByCustomerId",
        "Modifiers": 258,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpGetAttribute",
            "Name": "HttpGet"
          },
          {
            "Type": "Microsoft.AspNetCore.Mvc.RouteAttribute",
            "Name": "Route",
            "Arguments": [
              {
                "Name": "template",
                "Type": "string",
                "Value": "customers/{customerId}"
              }
            ]
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Repositories.ICustomerRepository",
            "Name": "GetCustomerAsync",
            "Arguments": [
              {
                "Type": "string",
                "Text": "customerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "customer == null",
                "Statements": [
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "NotFound()"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
                    "Name": "NotFound"
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "Ok(customer)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
            "Name": "Ok",
            "Arguments": [
              {
                "Type": "Pitstop.WorkshopManagementAPI.Repositories.Model.Customer",
                "Text": "customer"
              }
            ]
          }
        ]
      },
      {
        "Name": "GetVehicles",
        "Modifiers": 258,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpGetAttribute",
            "Name": "HttpGet"
          },
          {
            "Type": "Microsoft.AspNetCore.Mvc.RouteAttribute",
            "Name": "Route",
            "Arguments": [
              {
                "Name": "template",
                "Type": "string",
                "Value": "vehicles"
              }
            ]
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "Ok(await _vehicleRepo.GetVehiclesAsync())"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
            "Name": "Ok",
            "Arguments": [
              {
                "Type": "System.Collections.Generic.IEnumerable\u003CPitstop.WorkshopManagementAPI.Repositories.Model.Vehicle\u003E",
                "Text": "await _vehicleRepo.GetVehiclesAsync()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Repositories.IVehicleRepository",
            "Name": "GetVehiclesAsync"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "licenseNumber"
          }
        ],
        "Name": "GetVehicleByLicenseNumber",
        "Modifiers": 258,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpGetAttribute",
            "Name": "HttpGet"
          },
          {
            "Type": "Microsoft.AspNetCore.Mvc.RouteAttribute",
            "Name": "Route",
            "Arguments": [
              {
                "Name": "template",
                "Type": "string",
                "Value": "vehicles/{licenseNumber}"
              }
            ]
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Repositories.IVehicleRepository",
            "Name": "GetVehicleAsync",
            "Arguments": [
              {
                "Type": "string",
                "Text": "licenseNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "vehicle == null",
                "Statements": [
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "NotFound()"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
                    "Name": "NotFound"
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "Ok(vehicle)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
            "Name": "Ok",
            "Arguments": [
              {
                "Type": "Pitstop.WorkshopManagementAPI.Repositories.Model.Vehicle",
                "Text": "vehicle"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.Controllers.WorkshopPlanningController",
    "BaseTypes": [
      "Microsoft.AspNetCore.Mvc.Controller"
    ],
    "Modifiers": 2,
    "Attributes": [
      {
        "Type": "Microsoft.AspNetCore.Mvc.RouteAttribute",
        "Name": "Route",
        "Arguments": [
          {
            "Name": "template",
            "Type": "string",
            "Value": "/api/[controller]"
          }
        ]
      }
    ],
    "Fields": [
      {
        "Type": "Pitstop.WorkshopManagementAPI.Repositories.IEventSourceRepository\u003CPitstop.WorkshopManagementAPI.Domain.Entities.WorkshopPlanning\u003E",
        "Name": "_planningRepo",
        "Modifiers": 132
      },
      {
        "Type": "Pitstop.WorkshopManagementAPI.CommandHandlers.IPlanMaintenanceJobCommandHandler",
        "Name": "_planMaintenanceJobCommandHandler",
        "Modifiers": 132
      },
      {
        "Type": "Pitstop.WorkshopManagementAPI.CommandHandlers.IFinishMaintenanceJobCommandHandler",
        "Name": "_finishMaintenanceJobCommandHandler",
        "Modifiers": 132
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "Pitstop.WorkshopManagementAPI.Repositories.IEventSourceRepository\u003CPitstop.WorkshopManagementAPI.Domain.Entities.WorkshopPlanning\u003E",
            "Name": "planningRepo"
          },
          {
            "Type": "Pitstop.WorkshopManagementAPI.CommandHandlers.IPlanMaintenanceJobCommandHandler",
            "Name": "planMaintenanceJobCommandHandler"
          },
          {
            "Type": "Pitstop.WorkshopManagementAPI.CommandHandlers.IFinishMaintenanceJobCommandHandler",
            "Name": "finishMaintenanceJobCommand"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_planningRepo",
            "Operator": "=",
            "Right": "planningRepo"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_planMaintenanceJobCommandHandler",
            "Operator": "=",
            "Right": "planMaintenanceJobCommandHandler"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_finishMaintenanceJobCommandHandler",
            "Operator": "=",
            "Right": "finishMaintenanceJobCommand"
          }
        ],
        "Name": "WorkshopPlanningController",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "System.DateTime",
            "Name": "planningDate"
          }
        ],
        "Name": "GetByDate",
        "Modifiers": 258,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpGetAttribute",
            "Name": "HttpGet"
          },
          {
            "Type": "Microsoft.AspNetCore.Mvc.RouteAttribute",
            "Name": "Route",
            "Arguments": [
              {
                "Name": "{planningDate}",
                "Type": "string",
                "Value": "{planningDate}"
              },
              {
                "Name": "Name",
                "Type": "string",
                "Value": "GetByDate"
              }
            ]
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.WorkshopPlanningId",
            "Name": "Create",
            "Arguments": [
              {
                "Type": "System.DateTime",
                "Text": "planningDate"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Repositories.IEventSourceRepository\u003CPitstop.WorkshopManagementAPI.Domain.Entities.WorkshopPlanning\u003E",
            "Name": "GetByIdAsync",
            "Arguments": [
              {
                "Type": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.WorkshopPlanningId",
                "Text": "aggregateId"
              }
            ]
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "planning == null",
                "Statements": [
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "NotFound()"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
                    "Name": "NotFound"
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "Ok(planning.MapToDTO())"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
            "Name": "Ok",
            "Arguments": [
              {
                "Type": "Pitstop.WorkshopManagementAPI.DTOs.WorkshopPlanningDTO",
                "Text": "planning.MapToDTO()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Mappers.Mappers",
            "Name": "MapToDTO"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Error",
            "Arguments": [
              {
                "Type": "string",
                "Text": "ex.ToString()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Exception",
            "Name": "ToString"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "System.DateTime",
            "Name": "planningDate"
          },
          {
            "Type": "System.Guid",
            "Name": "jobId"
          }
        ],
        "Name": "GetMaintenanceJobAsync",
        "Modifiers": 258,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpGetAttribute",
            "Name": "HttpGet"
          },
          {
            "Type": "Microsoft.AspNetCore.Mvc.RouteAttribute",
            "Name": "Route",
            "Arguments": [
              {
                "Name": "template",
                "Type": "string",
                "Value": "{planningDate}/jobs/{jobId}"
              }
            ]
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "ModelState.IsValid",
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.WorkshopPlanningId",
                    "Name": "Create",
                    "Arguments": [
                      {
                        "Type": "System.DateTime",
                        "Text": "planningDate"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.WorkshopManagementAPI.Repositories.IEventSourceRepository\u003CPitstop.WorkshopManagementAPI.Domain.Entities.WorkshopPlanning\u003E",
                    "Name": "GetByIdAsync",
                    "Arguments": [
                      {
                        "Type": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.WorkshopPlanningId",
                        "Text": "aggregateId"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.If, DendroDocs.Shared",
                    "Sections": [
                      {
                        "Condition": "planning == null || planning.Jobs == null",
                        "Statements": [
                          {
                            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                            "Expression": "NotFound()"
                          },
                          {
                            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                            "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
                            "Name": "NotFound"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Linq.Enumerable",
                    "Name": "FirstOrDefault",
                    "Arguments": [
                      {
                        "Type": "System.Func\u003CPitstop.WorkshopManagementAPI.Domain.Entities.MaintenanceJob, bool\u003E",
                        "Text": "j =\u003E j.Id == jobId"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.If, DendroDocs.Shared",
                    "Sections": [
                      {
                        "Condition": "job == null",
                        "Statements": [
                          {
                            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                            "Expression": "NotFound()"
                          },
                          {
                            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                            "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
                            "Name": "NotFound"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "Ok(job.MapToDTO())"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
                    "Name": "Ok",
                    "Arguments": [
                      {
                        "Type": "Pitstop.WorkshopManagementAPI.DTOs.MaintenanceJobDTO",
                        "Text": "job.MapToDTO()"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.WorkshopManagementAPI.Mappers.Mappers",
                    "Name": "MapToDTO"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Serilog.Log",
                    "Name": "Error",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "ex.ToString()"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Exception",
                    "Name": "ToString"
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "BadRequest()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
            "Name": "BadRequest"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "System.DateTime",
            "Name": "planningDate"
          },
          {
            "Type": "Pitstop.WorkshopManagementAPI.Commands.PlanMaintenanceJob",
            "Name": "command",
            "Attributes": [
              {
                "Type": "Microsoft.AspNetCore.Mvc.FromBodyAttribute",
                "Name": "FromBody"
              }
            ]
          }
        ],
        "Name": "PlanMaintenanceJobAsync",
        "Modifiers": 258,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpPostAttribute",
            "Name": "HttpPost"
          },
          {
            "Type": "Microsoft.AspNetCore.Mvc.RouteAttribute",
            "Name": "Route",
            "Arguments": [
              {
                "Name": "template",
                "Type": "string",
                "Value": "{planningDate}/jobs"
              }
            ]
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "ModelState.IsValid",
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.WorkshopManagementAPI.CommandHandlers.IPlanMaintenanceJobCommandHandler",
                    "Name": "HandleCommandAsync",
                    "Arguments": [
                      {
                        "Type": "System.DateTime",
                        "Text": "planningDate"
                      },
                      {
                        "Type": "Pitstop.WorkshopManagementAPI.Commands.PlanMaintenanceJob",
                        "Text": "command"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.If, DendroDocs.Shared",
                    "Sections": [
                      {
                        "Condition": "planning == null",
                        "Statements": [
                          {
                            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                            "Expression": "NotFound()"
                          },
                          {
                            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                            "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
                            "Name": "NotFound"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "CreatedAtRoute(\u0022GetByDate\u0022, new { planningDate = planning.Id }, planning.MapToDTO())"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
                    "Name": "CreatedAtRoute",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "GetByDate"
                      },
                      {
                        "Type": "\u003Canonymous type: Pitstop.WorkshopManagementAPI.Domain.ValueObjects.WorkshopPlanningId planningDate\u003E",
                        "Text": "new { planningDate = planning.Id }"
                      },
                      {
                        "Type": "Pitstop.WorkshopManagementAPI.DTOs.WorkshopPlanningDTO",
                        "Text": "planning.MapToDTO()"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.WorkshopManagementAPI.Mappers.Mappers",
                    "Name": "MapToDTO"
                  },
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "StatusCode(StatusCodes.Status409Conflict, new BusinessRuleViolation { ErrorMessage = ex.Message })"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
                    "Name": "StatusCode",
                    "Arguments": [
                      {
                        "Type": "int",
                        "Text": "StatusCodes.Status409Conflict"
                      },
                      {
                        "Type": "Pitstop.WorkshopManagementAPI.DTOs.BusinessRuleViolation",
                        "Text": "new BusinessRuleViolation { ErrorMessage = ex.Message }"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.WorkshopManagementAPI.DTOs.BusinessRuleViolation",
                    "Name": "BusinessRuleViolation",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "ErrorMessage = ex.Message"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "ErrorMessage",
                    "Operator": "=",
                    "Right": "ex.Message"
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "BadRequest()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
            "Name": "BadRequest"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Error",
            "Arguments": [
              {
                "Type": "string",
                "Text": "errorMessage"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary",
            "Name": "AddModelError",
            "Arguments": [
              {
                "Type": "string",
                "Text": "ErrorMessage"
              },
              {
                "Type": "string",
                "Text": "errorMessage"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "StatusCode(StatusCodes.Status500InternalServerError)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
            "Name": "StatusCode",
            "Arguments": [
              {
                "Type": "int",
                "Text": "StatusCodes.Status500InternalServerError"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "System.DateTime",
            "Name": "planningDate"
          },
          {
            "Type": "System.Guid",
            "Name": "jobId"
          },
          {
            "Type": "Pitstop.WorkshopManagementAPI.Commands.FinishMaintenanceJob",
            "Name": "command",
            "Attributes": [
              {
                "Type": "Microsoft.AspNetCore.Mvc.FromBodyAttribute",
                "Name": "FromBody"
              }
            ]
          }
        ],
        "Name": "FinishMaintenanceJobAsync",
        "Modifiers": 258,
        "Attributes": [
          {
            "Type": "Microsoft.AspNetCore.Mvc.HttpPutAttribute",
            "Name": "HttpPut"
          },
          {
            "Type": "Microsoft.AspNetCore.Mvc.RouteAttribute",
            "Name": "Route",
            "Arguments": [
              {
                "Name": "template",
                "Type": "string",
                "Value": "{planningDate}/jobs/{jobId}/finish"
              }
            ]
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CMicrosoft.AspNetCore.Mvc.IActionResult\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "ModelState.IsValid",
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.WorkshopManagementAPI.CommandHandlers.IFinishMaintenanceJobCommandHandler",
                    "Name": "HandleCommandAsync",
                    "Arguments": [
                      {
                        "Type": "System.DateTime",
                        "Text": "planningDate"
                      },
                      {
                        "Type": "Pitstop.WorkshopManagementAPI.Commands.FinishMaintenanceJob",
                        "Text": "command"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.If, DendroDocs.Shared",
                    "Sections": [
                      {
                        "Condition": "planning == null",
                        "Statements": [
                          {
                            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                            "Expression": "NotFound()"
                          },
                          {
                            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                            "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
                            "Name": "NotFound"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "Ok()"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
                    "Name": "Ok"
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "BadRequest()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
            "Name": "BadRequest"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Error",
            "Arguments": [
              {
                "Type": "string",
                "Text": "errorMessage"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary",
            "Name": "AddModelError",
            "Arguments": [
              {
                "Type": "string",
                "Text": ""
              },
              {
                "Type": "string",
                "Text": "errorMessage"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "StatusCode(StatusCodes.Status500InternalServerError)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.AspNetCore.Mvc.ControllerBase",
            "Name": "StatusCode",
            "Arguments": [
              {
                "Type": "int",
                "Text": "StatusCodes.Status500InternalServerError"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.Domain.BusinessRules.MaintenanceJobRules",
    "Modifiers": 18,
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "Pitstop.WorkshopManagementAPI.Commands.PlanMaintenanceJob",
            "Name": "command"
          }
        ],
        "Name": "PlannedMaintenanceJobShouldFallWithinOneBusinessDay",
        "Modifiers": 18,
        "Statements": [
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "!Timeslot.Create(command.StartTime, command.EndTime).IsWithinOneDay()",
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.Exceptions.BusinessRuleViolationException",
                    "Name": "BusinessRuleViolationException",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "\u0022Start-time and end-time of a Maintenance Job must be within a 1 day.\u0022"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WorkshopManagementAPI.Domain.Entities.MaintenanceJob",
            "Name": "job"
          }
        ],
        "Name": "FinishedMaintenanceJobCanNotBeFinished",
        "Modifiers": 18,
        "Statements": [
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "job.Status == \u0022Completed\u0022",
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.Exceptions.BusinessRuleViolationException",
                    "Name": "BusinessRuleViolationException",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "$\u0022An already finished job can not be finished.\u0022"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.Domain.BusinessRules.WorkshopPlanningRules",
    "Modifiers": 18,
    "Fields": [
      {
        "Type": "int",
        "Initializer": "3",
        "Name": "AVAILABLE_WORKSTATIONS",
        "Modifiers": 516,
        "DocumentationComments": {
          "Summary": "The maximum number of parallel jobs in the workshop (restricted by the available workstations)."
        }
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "Pitstop.WorkshopManagementAPI.Domain.Entities.WorkshopPlanning",
            "Name": "planning"
          },
          {
            "Type": "Pitstop.WorkshopManagementAPI.Commands.PlanMaintenanceJob",
            "Name": "command"
          }
        ],
        "Name": "NumberOfParallelMaintenanceJobsMustNotExceedAvailableWorkStations",
        "Modifiers": 18,
        "Statements": [
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "planning.Jobs.Count(j =\u003E j.PlannedTimeslot.OverlapsWith(command.StartTime, command.EndTime)) \u003E= AVAILABLE_WORKSTATIONS",
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.Exceptions.BusinessRuleViolationException",
                    "Name": "BusinessRuleViolationException",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "$\u0022Maintenancejob overlaps with more than {AVAILABLE_WORKSTATIONS} other jobs.\u0022"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WorkshopManagementAPI.Domain.Entities.WorkshopPlanning",
            "Name": "planning"
          },
          {
            "Type": "Pitstop.WorkshopManagementAPI.Commands.PlanMaintenanceJob",
            "Name": "command"
          }
        ],
        "Name": "NumberOfParallelMaintenanceJobsOnAVehicleMustNotExceedOne",
        "Modifiers": 18,
        "Statements": [
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "planning.Jobs.Any(j =\u003E j.Vehicle.Id == command.VehicleInfo.LicenseNumber \u0026\u0026\r\n                j.PlannedTimeslot.OverlapsWith(command.StartTime, command.EndTime))",
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.Exceptions.BusinessRuleViolationException",
                    "Name": "BusinessRuleViolationException",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "$\u0022Only 1 maintenance job can be executed on a vehicle during a certain time-slot.\u0022"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.Domain.Core.AggregateRoot\u003CTId\u003E",
    "DocumentationComments": {
      "Remarks": "In a real-world project, this class should be shared over domains in a NuGet package.",
      "Summary": "Represents an aggregate-root of a domain aggregate (DDD). An aggregate-root is always an entity.",
      "TypeParams": {
        "TId": "The type of the Id of the entity."
      }
    },
    "BaseTypes": [
      "Pitstop.WorkshopManagementAPI.Domain.Core.Entity\u003CTId\u003E"
    ],
    "Modifiers": 34,
    "Fields": [
      {
        "Type": "System.Collections.Generic.List\u003CPitstop.Infrastructure.Messaging.Event\u003E",
        "Name": "_events",
        "Modifiers": 132,
        "DocumentationComments": {
          "Summary": "The list of events that occur while handling commands."
        }
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "TId",
            "Name": "id"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "OriginalVersion",
            "Operator": "=",
            "Right": "0"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Version",
            "Operator": "=",
            "Right": "0"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_events",
            "Operator": "=",
            "Right": "new List\u003CEvent\u003E()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Collections.Generic.List\u003CPitstop.Infrastructure.Messaging.Event\u003E",
            "Name": "List\u003CEvent\u003E"
          }
        ],
        "Name": "AggregateRoot",
        "Modifiers": 2,
        "DocumentationComments": {
          "Summary": "Constructor for creating an empty aggregate.",
          "Params": {
            "id": "The unique id of the aggregate-root."
          }
        }
      },
      {
        "Parameters": [
          {
            "Type": "TId",
            "Name": "id"
          },
          {
            "Type": "System.Collections.Generic.IEnumerable\u003CPitstop.Infrastructure.Messaging.Event\u003E",
            "Name": "events"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "IsReplaying",
            "Operator": "=",
            "Right": "true"
          },
          {
            "$type": "DendroDocs.ForEach, DendroDocs.Shared",
            "Expression": "e in events",
            "Statements": [
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.Core.AggregateRoot\u003CTId\u003E",
                "Name": "When",
                "Arguments": [
                  {
                    "Type": "Pitstop.Infrastructure.Messaging.Event",
                    "Text": "e"
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "IsReplaying",
            "Operator": "=",
            "Right": "false"
          }
        ],
        "Name": "AggregateRoot",
        "Modifiers": 2,
        "DocumentationComments": {
          "Summary": "Constructor for creating an aggregate of which the state is intialized by replaying the list of events specified.",
          "Params": {
            "id": "The unique Id of the aggregate.",
            "events": "The events to replay."
          }
        }
      }
    ],
    "Properties": [
      {
        "Type": "bool",
        "Initializer": "false",
        "Name": "IsReplaying",
        "DocumentationComments": {
          "Summary": "Indication whether the aggregate is replaying events (true) or not (false)."
        }
      },
      {
        "Type": "int",
        "Name": "Version",
        "Modifiers": 2,
        "DocumentationComments": {
          "Summary": "The current version after handling any commands."
        }
      },
      {
        "Type": "int",
        "Name": "OriginalVersion",
        "Modifiers": 2,
        "DocumentationComments": {
          "Summary": "The original version of the aggregate after replaying all events in the event-store."
        }
      }
    ],
    "Methods": [
      {
        "Name": "GetEvents",
        "Modifiers": 2,
        "DocumentationComments": {
          "Summary": "Get the list of events that occurred while handling commands."
        },
        "ReturnType": "System.Collections.Generic.IEnumerable\u003CPitstop.Infrastructure.Messaging.Event\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "_events"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.Infrastructure.Messaging.Event",
            "Name": "@event"
          }
        ],
        "Name": "RaiseEvent",
        "Modifiers": 8,
        "DocumentationComments": {
          "Remarks": "Use GetEvents to retrieve the list of events.",
          "Summary": "Let the aggregate handle an event and save it in the list of events so it can be used outside the aggregate (persisted, published on a bus, ...).",
          "Params": {
            "event": "The event to handle."
          }
        },
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.Core.AggregateRoot\u003CTId\u003E",
            "Name": "When",
            "Arguments": [
              {
                "Type": "Pitstop.Infrastructure.Messaging.Event",
                "Text": "event"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Collections.Generic.List\u003CPitstop.Infrastructure.Messaging.Event\u003E",
            "Name": "Add",
            "Arguments": [
              {
                "Type": "Pitstop.Infrastructure.Messaging.Event",
                "Text": "event"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Version",
            "Operator": "\u002B=",
            "Right": "1"
          }
        ]
      },
      {
        "Name": "ClearEvents",
        "Modifiers": 2,
        "DocumentationComments": {
          "Summary": "Clear the list of events that occurred while handling a command."
        },
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Collections.Generic.List\u003CPitstop.Infrastructure.Messaging.Event\u003E",
            "Name": "Clear"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "dynamic",
            "Name": "@event"
          }
        ],
        "Name": "When",
        "Modifiers": 40,
        "DocumentationComments": {
          "Remarks": "Because the parameter type of the specified event is dynamic,\nthe appropriate overload of the When method is called.",
          "Summary": "Handle a specific event. Derived classes should implement this method for every event type.",
          "Params": {
            "@event": "The event to handle."
          }
        }
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.Domain.Core.Entity\u003CTId\u003E",
    "DocumentationComments": {
      "Remarks": "In a real-world project, this class should be shared over domains in a NuGet package.",
      "Summary": "Represents an Entity in the domain (DDD).",
      "TypeParams": {
        "TId": "The type of the Id of the entity."
      }
    },
    "Modifiers": 2,
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "TId",
            "Name": "id"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Id",
            "Operator": "=",
            "Right": "id"
          }
        ],
        "Name": "Entity",
        "Modifiers": 2
      }
    ],
    "Properties": [
      {
        "Type": "TId",
        "Name": "Id",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.Domain.Core.ValueObject",
    "DocumentationComments": {
      "Remarks": "In a real-world project, this class should be shared over domains in a NuGet package.",
      "Summary": "Represents a ValueObject in the domain (DDD)."
    },
    "Modifiers": 34,
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "object",
            "Name": "obj"
          }
        ],
        "Name": "Equals",
        "Modifiers": 66,
        "ReturnType": "bool",
        "Statements": [
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "obj == null || obj.GetType() != GetType()",
                "Statements": [
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "false"
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Collections.Generic.IEnumerable\u003Cobject\u003E",
            "Name": "GetEnumerator"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.Core.ValueObject",
            "Name": "GetAtomicValues"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Collections.Generic.IEnumerable\u003Cobject\u003E",
            "Name": "GetEnumerator"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.Core.ValueObject",
            "Name": "GetAtomicValues"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Collections.IEnumerator",
            "Name": "MoveNext"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Collections.IEnumerator",
            "Name": "MoveNext"
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "ReferenceEquals(thisValues.Current, null) ^\r\n                ReferenceEquals(otherValues.Current, null)",
                "Statements": [
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "false"
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "thisValues.Current != null \u0026\u0026\r\n                !thisValues.Current.Equals(otherValues.Current)",
                "Statements": [
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "false"
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "!thisValues.MoveNext() \u0026\u0026 !otherValues.MoveNext()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Collections.IEnumerator",
            "Name": "MoveNext"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Collections.IEnumerator",
            "Name": "MoveNext"
          }
        ]
      },
      {
        "Name": "GetHashCode",
        "Modifiers": 66,
        "ReturnType": "int",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "GetAtomicValues()\r\n         .Select(x =\u003E x != null ? x.GetHashCode() : 0)\r\n         .Aggregate((x, y) =\u003E x ^ y)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Linq.Enumerable",
            "Name": "Aggregate",
            "Arguments": [
              {
                "Type": "System.Func\u003Cint, int, int\u003E",
                "Text": "(x, y) =\u003E x ^ y"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Linq.Enumerable",
            "Name": "Select",
            "Arguments": [
              {
                "Type": "System.Func\u003Cobject, int\u003E",
                "Text": "x =\u003E x != null ? x.GetHashCode() : 0"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.Core.ValueObject",
            "Name": "GetAtomicValues"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "object",
            "Name": "GetHashCode"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WorkshopManagementAPI.Domain.Core.ValueObject",
            "Name": "left"
          },
          {
            "Type": "Pitstop.WorkshopManagementAPI.Domain.Core.ValueObject",
            "Name": "right"
          }
        ],
        "Name": "EqualOperator",
        "Modifiers": 24,
        "ReturnType": "bool",
        "Statements": [
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "ReferenceEquals(left, null) ^ ReferenceEquals(right, null)",
                "Statements": [
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "false"
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "ReferenceEquals(left, null) || left.Equals(right)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "object",
            "Name": "ReferenceEquals",
            "Arguments": [
              {
                "Type": "Pitstop.WorkshopManagementAPI.Domain.Core.ValueObject",
                "Text": "left"
              },
              {
                "Type": "object",
                "Text": "null"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.Core.ValueObject",
            "Name": "Equals",
            "Arguments": [
              {
                "Type": "Pitstop.WorkshopManagementAPI.Domain.Core.ValueObject",
                "Text": "right"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WorkshopManagementAPI.Domain.Core.ValueObject",
            "Name": "left"
          },
          {
            "Type": "Pitstop.WorkshopManagementAPI.Domain.Core.ValueObject",
            "Name": "right"
          }
        ],
        "Name": "NotEqualOperator",
        "Modifiers": 24,
        "ReturnType": "bool",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "!(EqualOperator(left, right))"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.Core.ValueObject",
            "Name": "EqualOperator",
            "Arguments": [
              {
                "Type": "Pitstop.WorkshopManagementAPI.Domain.Core.ValueObject",
                "Text": "left"
              },
              {
                "Type": "Pitstop.WorkshopManagementAPI.Domain.Core.ValueObject",
                "Text": "right"
              }
            ]
          }
        ]
      },
      {
        "Name": "GetAtomicValues",
        "Modifiers": 40,
        "ReturnType": "System.Collections.Generic.IEnumerable\u003Cobject\u003E"
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.Domain.Entities.Customer",
    "BaseTypes": [
      "Pitstop.WorkshopManagementAPI.Domain.Core.Entity\u003Cstring\u003E"
    ],
    "Modifiers": 2,
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "customerId"
          },
          {
            "Type": "string",
            "Name": "name"
          },
          {
            "Type": "string",
            "Name": "telephoneNumber"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Name",
            "Operator": "=",
            "Right": "name"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "TelephoneNumber",
            "Operator": "=",
            "Right": "telephoneNumber"
          }
        ],
        "Name": "Customer",
        "Modifiers": 2
      }
    ],
    "Properties": [
      {
        "Type": "string",
        "Name": "Name",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "TelephoneNumber",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.Domain.Entities.MaintenanceJob",
    "BaseTypes": [
      "Pitstop.WorkshopManagementAPI.Domain.Core.Entity\u003CSystem.Guid\u003E"
    ],
    "Modifiers": 2,
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "id"
          }
        ],
        "Name": "MaintenanceJob",
        "Modifiers": 2
      }
    ],
    "Properties": [
      {
        "Type": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.Timeslot",
        "Name": "PlannedTimeslot",
        "Modifiers": 2
      },
      {
        "Type": "Pitstop.WorkshopManagementAPI.Domain.Entities.Vehicle",
        "Name": "Vehicle",
        "Modifiers": 2
      },
      {
        "Type": "Pitstop.WorkshopManagementAPI.Domain.Entities.Customer",
        "Name": "Customer",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "Description",
        "Modifiers": 2
      },
      {
        "Type": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.Timeslot",
        "Name": "ActualTimeslot",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "Notes",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "Status",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.Timeslot",
            "Name": "timeslot"
          },
          {
            "Type": "Pitstop.WorkshopManagementAPI.Domain.Entities.Vehicle",
            "Name": "vehicle"
          },
          {
            "Type": "Pitstop.WorkshopManagementAPI.Domain.Entities.Customer",
            "Name": "customer"
          },
          {
            "Type": "string",
            "Name": "description"
          }
        ],
        "Name": "Plan",
        "Modifiers": 2,
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "PlannedTimeslot",
            "Operator": "=",
            "Right": "timeslot"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Vehicle",
            "Operator": "=",
            "Right": "vehicle"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Customer",
            "Operator": "=",
            "Right": "customer"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Description",
            "Operator": "=",
            "Right": "description"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.Timeslot",
            "Name": "actualTimeslot"
          },
          {
            "Type": "string",
            "Name": "notes"
          }
        ],
        "Name": "Finish",
        "Modifiers": 2,
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "ActualTimeslot",
            "Operator": "=",
            "Right": "actualTimeslot"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Notes",
            "Operator": "=",
            "Right": "notes"
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.Domain.Entities.Vehicle",
    "BaseTypes": [
      "Pitstop.WorkshopManagementAPI.Domain.Core.Entity\u003CPitstop.WorkshopManagementAPI.Domain.ValueObjects.LicenseNumber\u003E"
    ],
    "Modifiers": 2,
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.LicenseNumber",
            "Name": "licenseNumber"
          },
          {
            "Type": "string",
            "Name": "brand"
          },
          {
            "Type": "string",
            "Name": "type"
          },
          {
            "Type": "string",
            "Name": "ownerId"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Brand",
            "Operator": "=",
            "Right": "brand"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Type",
            "Operator": "=",
            "Right": "type"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "OwnerId",
            "Operator": "=",
            "Right": "ownerId"
          }
        ],
        "Name": "Vehicle",
        "Modifiers": 2
      }
    ],
    "Properties": [
      {
        "Type": "string",
        "Name": "Brand",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "Type",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "OwnerId",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.Domain.Entities.WorkshopPlanning",
    "BaseTypes": [
      "Pitstop.WorkshopManagementAPI.Domain.Core.AggregateRoot\u003CPitstop.WorkshopManagementAPI.Domain.ValueObjects.WorkshopPlanningId\u003E"
    ],
    "Modifiers": 2,
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.DateTime",
            "Name": "date"
          }
        ],
        "Name": "WorkshopPlanning",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "System.DateTime",
            "Name": "date"
          },
          {
            "Type": "System.Collections.Generic.IEnumerable\u003CPitstop.Infrastructure.Messaging.Event\u003E",
            "Name": "events"
          }
        ],
        "Name": "WorkshopPlanning",
        "Modifiers": 2
      }
    ],
    "Properties": [
      {
        "Type": "System.Collections.Generic.List\u003CPitstop.WorkshopManagementAPI.Domain.Entities.MaintenanceJob\u003E",
        "Name": "Jobs",
        "Modifiers": 2,
        "DocumentationComments": {
          "Summary": "The list of maintenance-jobs for this day."
        }
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "System.DateTime",
            "Name": "date"
          }
        ],
        "Name": "Create",
        "Modifiers": 18,
        "DocumentationComments": {
          "Summary": "Creates a new instance of a workshop-planning for the specified date.",
          "Params": {
            "date": "The date to create the planning for."
          }
        },
        "ReturnType": "Pitstop.WorkshopManagementAPI.Domain.Entities.WorkshopPlanning",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.Entities.WorkshopPlanning",
            "Name": "WorkshopPlanning",
            "Arguments": [
              {
                "Type": "System.DateTime",
                "Text": "date"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Events.WorkshopPlanningCreated",
            "Name": "WorkshopPlanningCreated",
            "Arguments": [
              {
                "Type": "System.Guid",
                "Text": "Guid.NewGuid()"
              },
              {
                "Type": "System.DateTime",
                "Text": "date"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Guid",
            "Name": "NewGuid"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.Core.AggregateRoot\u003CPitstop.WorkshopManagementAPI.Domain.ValueObjects.WorkshopPlanningId\u003E",
            "Name": "RaiseEvent",
            "Arguments": [
              {
                "Type": "Pitstop.WorkshopManagementAPI.Events.WorkshopPlanningCreated",
                "Text": "e"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "planning"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WorkshopManagementAPI.Commands.PlanMaintenanceJob",
            "Name": "command"
          }
        ],
        "Name": "PlanMaintenanceJob",
        "Modifiers": 2,
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.BusinessRules.MaintenanceJobRules",
            "Name": "PlannedMaintenanceJobShouldFallWithinOneBusinessDay"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.BusinessRules.WorkshopPlanningRules",
            "Name": "NumberOfParallelMaintenanceJobsMustNotExceedAvailableWorkStations",
            "Arguments": [
              {
                "Type": "Pitstop.WorkshopManagementAPI.Commands.PlanMaintenanceJob",
                "Text": "command"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.BusinessRules.WorkshopPlanningRules",
            "Name": "NumberOfParallelMaintenanceJobsOnAVehicleMustNotExceedOne",
            "Arguments": [
              {
                "Type": "Pitstop.WorkshopManagementAPI.Commands.PlanMaintenanceJob",
                "Text": "command"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Mappers.Mappers",
            "Name": "MapToMaintenanceJobPlanned"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.Core.AggregateRoot\u003CPitstop.WorkshopManagementAPI.Domain.ValueObjects.WorkshopPlanningId\u003E",
            "Name": "RaiseEvent",
            "Arguments": [
              {
                "Type": "Pitstop.WorkshopManagementAPI.Events.MaintenanceJobPlanned",
                "Text": "e"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WorkshopManagementAPI.Commands.FinishMaintenanceJob",
            "Name": "command"
          }
        ],
        "Name": "FinishMaintenanceJob",
        "Modifiers": 2,
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Linq.Enumerable",
            "Name": "FirstOrDefault",
            "Arguments": [
              {
                "Type": "System.Func\u003CPitstop.WorkshopManagementAPI.Domain.Entities.MaintenanceJob, bool\u003E",
                "Text": "j =\u003E j.Id == command.JobId"
              }
            ]
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "job == null",
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.Exceptions.MaintenanceJobNotFoundException",
                    "Name": "MaintenanceJobNotFoundException",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "$\u0022Maintenance job with id {command.JobId} found.\u0022"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.BusinessRules.MaintenanceJobRules",
            "Name": "FinishedMaintenanceJobCanNotBeFinished"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Mappers.Mappers",
            "Name": "MapToMaintenanceJobFinished"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.Core.AggregateRoot\u003CPitstop.WorkshopManagementAPI.Domain.ValueObjects.WorkshopPlanningId\u003E",
            "Name": "RaiseEvent",
            "Arguments": [
              {
                "Type": "Pitstop.WorkshopManagementAPI.Events.MaintenanceJobFinished",
                "Text": "e"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "dynamic",
            "Name": "@event"
          }
        ],
        "Name": "When",
        "Modifiers": 72,
        "DocumentationComments": {
          "Remarks": "Caution: this handles is also called while replaying events to restore state.\nSo, do not execute any checks that could fail or introduce any side-effects in this handler.",
          "Summary": "Handles an event and updates the aggregate version."
        },
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.Entities.WorkshopPlanning",
            "Name": "Handle",
            "Arguments": [
              {
                "Type": "dynamic",
                "Text": "event"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WorkshopManagementAPI.Events.WorkshopPlanningCreated",
            "Name": "e"
          }
        ],
        "Name": "Handle",
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Jobs",
            "Operator": "=",
            "Right": "new List\u003CMaintenanceJob\u003E()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Collections.Generic.List\u003CPitstop.WorkshopManagementAPI.Domain.Entities.MaintenanceJob\u003E",
            "Name": "List\u003CMaintenanceJob\u003E"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WorkshopManagementAPI.Events.MaintenanceJobPlanned",
            "Name": "e"
          }
        ],
        "Name": "Handle",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.Entities.MaintenanceJob",
            "Name": "MaintenanceJob",
            "Arguments": [
              {
                "Type": "System.Guid",
                "Text": "e.JobId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.Entities.Customer",
            "Name": "Customer",
            "Arguments": [
              {
                "Type": "string",
                "Text": "e.CustomerInfo.Id"
              },
              {
                "Type": "string",
                "Text": "e.CustomerInfo.Name"
              },
              {
                "Type": "string",
                "Text": "e.CustomerInfo.TelephoneNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.LicenseNumber",
            "Name": "Create",
            "Arguments": [
              {
                "Type": "string",
                "Text": "e.VehicleInfo.LicenseNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.Entities.Vehicle",
            "Name": "Vehicle",
            "Arguments": [
              {
                "Type": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.LicenseNumber",
                "Text": "licenseNumber"
              },
              {
                "Type": "string",
                "Text": "e.VehicleInfo.Brand"
              },
              {
                "Type": "string",
                "Text": "e.VehicleInfo.Type"
              },
              {
                "Type": "string",
                "Text": "customer.Id"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.Timeslot",
            "Name": "Create",
            "Arguments": [
              {
                "Type": "System.DateTime",
                "Text": "e.StartTime"
              },
              {
                "Type": "System.DateTime",
                "Text": "e.EndTime"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.Entities.MaintenanceJob",
            "Name": "Plan",
            "Arguments": [
              {
                "Type": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.Timeslot",
                "Text": "plannedTimeslot"
              },
              {
                "Type": "Pitstop.WorkshopManagementAPI.Domain.Entities.Vehicle",
                "Text": "vehicle"
              },
              {
                "Type": "Pitstop.WorkshopManagementAPI.Domain.Entities.Customer",
                "Text": "customer"
              },
              {
                "Type": "string",
                "Text": "e.Description"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Collections.Generic.List\u003CPitstop.WorkshopManagementAPI.Domain.Entities.MaintenanceJob\u003E",
            "Name": "Add",
            "Arguments": [
              {
                "Type": "Pitstop.WorkshopManagementAPI.Domain.Entities.MaintenanceJob",
                "Text": "job"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WorkshopManagementAPI.Events.MaintenanceJobFinished",
            "Name": "e"
          }
        ],
        "Name": "Handle",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Linq.Enumerable",
            "Name": "FirstOrDefault",
            "Arguments": [
              {
                "Type": "System.Func\u003CPitstop.WorkshopManagementAPI.Domain.Entities.MaintenanceJob, bool\u003E",
                "Text": "j =\u003E j.Id == e.JobId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.Timeslot",
            "Name": "Create",
            "Arguments": [
              {
                "Type": "System.DateTime",
                "Text": "e.StartTime"
              },
              {
                "Type": "System.DateTime",
                "Text": "e.EndTime"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.Entities.MaintenanceJob",
            "Name": "Finish",
            "Arguments": [
              {
                "Type": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.Timeslot",
                "Text": "actualTimeslot"
              },
              {
                "Type": "string",
                "Text": "e.Notes"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.Domain.Exceptions.BusinessRuleViolationException",
    "BaseTypes": [
      "System.Exception"
    ],
    "Modifiers": 2,
    "Constructors": [
      {
        "Name": "BusinessRuleViolationException",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "message"
          }
        ],
        "Name": "BusinessRuleViolationException",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "message"
          },
          {
            "Type": "System.Exception",
            "Name": "innerException"
          }
        ],
        "Name": "BusinessRuleViolationException",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.Domain.Exceptions.InvalidValueException",
    "BaseTypes": [
      "System.Exception"
    ],
    "Modifiers": 2,
    "Constructors": [
      {
        "Name": "InvalidValueException",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "message"
          }
        ],
        "Name": "InvalidValueException",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "message"
          },
          {
            "Type": "System.Exception",
            "Name": "innerException"
          }
        ],
        "Name": "InvalidValueException",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.Domain.Exceptions.MaintenanceJobNotFoundException",
    "BaseTypes": [
      "System.Exception"
    ],
    "Modifiers": 2,
    "Constructors": [
      {
        "Name": "MaintenanceJobNotFoundException",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "message"
          }
        ],
        "Name": "MaintenanceJobNotFoundException",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "message"
          },
          {
            "Type": "System.Exception",
            "Name": "innerException"
          }
        ],
        "Name": "MaintenanceJobNotFoundException",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.LicenseNumber",
    "BaseTypes": [
      "Pitstop.WorkshopManagementAPI.Domain.Core.ValueObject"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "string",
        "Initializer": "^((\\d{1,3}|[a-z]{1,3})-){2}(\\d{1,3}|[a-z]{1,3})$",
        "Name": "NUMBER_PATTERN",
        "Modifiers": 516
      }
    ],
    "Properties": [
      {
        "Type": "string",
        "Name": "Value",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "value"
          }
        ],
        "Name": "Create",
        "Modifiers": 18,
        "ReturnType": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.LicenseNumber",
        "Statements": [
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "!Regex.IsMatch(value, NUMBER_PATTERN, RegexOptions.IgnoreCase)",
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.Exceptions.InvalidValueException",
                    "Name": "InvalidValueException",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "$\u0022The specified license-number \u0027{value}\u0027 is not in the correct format.\u0022"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "new LicenseNumber { Value = value }"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.LicenseNumber",
            "Name": "LicenseNumber",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Value = value"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Value",
            "Operator": "=",
            "Right": "value"
          }
        ]
      },
      {
        "Name": "GetAtomicValues",
        "Modifiers": 72,
        "ReturnType": "System.Collections.Generic.IEnumerable\u003Cobject\u003E"
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.Timeslot",
    "BaseTypes": [
      "Pitstop.WorkshopManagementAPI.Domain.Core.ValueObject"
    ],
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "System.DateTime",
        "Name": "StartTime",
        "Modifiers": 2
      },
      {
        "Type": "System.DateTime",
        "Name": "EndTime",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "System.DateTime",
            "Name": "startTime"
          },
          {
            "Type": "System.DateTime",
            "Name": "endTime"
          }
        ],
        "Name": "Create",
        "Modifiers": 18,
        "ReturnType": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.Timeslot",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.Timeslot",
            "Name": "ValidateInput",
            "Arguments": [
              {
                "Type": "System.DateTime",
                "Text": "startTime"
              },
              {
                "Type": "System.DateTime",
                "Text": "endTime"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "new Timeslot { StartTime = startTime, EndTime = endTime }"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.Timeslot",
            "Name": "Timeslot",
            "Arguments": [
              {
                "Type": "System.DateTime",
                "Text": "StartTime = startTime"
              },
              {
                "Type": "System.DateTime",
                "Text": "EndTime = endTime"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "StartTime",
            "Operator": "=",
            "Right": "startTime"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "EndTime",
            "Operator": "=",
            "Right": "endTime"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "System.DateTime",
            "Name": "startTime"
          }
        ],
        "Name": "SetStartTime",
        "Modifiers": 2,
        "ReturnType": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.Timeslot",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.Timeslot",
            "Name": "ValidateInput",
            "Arguments": [
              {
                "Type": "System.DateTime",
                "Text": "startTime"
              },
              {
                "Type": "System.DateTime",
                "Text": "EndTime"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "Timeslot.Create(startTime, EndTime)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.Timeslot",
            "Name": "Create",
            "Arguments": [
              {
                "Type": "System.DateTime",
                "Text": "startTime"
              },
              {
                "Type": "System.DateTime",
                "Text": "EndTime"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "System.DateTime",
            "Name": "endTime"
          }
        ],
        "Name": "SetEndTime",
        "Modifiers": 2,
        "ReturnType": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.Timeslot",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.Timeslot",
            "Name": "ValidateInput",
            "Arguments": [
              {
                "Type": "System.DateTime",
                "Text": "StartTime"
              },
              {
                "Type": "System.DateTime",
                "Text": "endTime"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "Timeslot.Create(StartTime, endTime)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.Timeslot",
            "Name": "Create",
            "Arguments": [
              {
                "Type": "System.DateTime",
                "Text": "StartTime"
              },
              {
                "Type": "System.DateTime",
                "Text": "endTime"
              }
            ]
          }
        ]
      },
      {
        "Name": "IsWithinOneDay",
        "Modifiers": 2,
        "ReturnType": "bool",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "(StartTime.Date == EndTime.Date)"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "System.DateTime",
            "Name": "startTime"
          },
          {
            "Type": "System.DateTime",
            "Name": "endTime"
          }
        ],
        "Name": "OverlapsWith",
        "Modifiers": 2,
        "ReturnType": "bool",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "this.OverlapsWith(Timeslot.Create(startTime, endTime))"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.Timeslot",
            "Name": "OverlapsWith",
            "Arguments": [
              {
                "Type": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.Timeslot",
                "Text": "Timeslot.Create(startTime, endTime)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.Timeslot",
            "Name": "Create",
            "Arguments": [
              {
                "Type": "System.DateTime",
                "Text": "startTime"
              },
              {
                "Type": "System.DateTime",
                "Text": "endTime"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.Timeslot",
            "Name": "other"
          }
        ],
        "Name": "OverlapsWith",
        "Modifiers": 2,
        "ReturnType": "bool",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "(StartTime \u003E other.StartTime \u0026\u0026 StartTime \u003C= other.EndTime ||\r\n                EndTime \u003E= other.StartTime \u0026\u0026 EndTime \u003C= other.EndTime)"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "System.DateTime",
            "Name": "startTime"
          },
          {
            "Type": "System.DateTime",
            "Name": "endTime"
          }
        ],
        "Name": "ValidateInput",
        "Modifiers": 20,
        "Statements": [
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "startTime \u003E= endTime",
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.Exceptions.InvalidValueException",
                    "Name": "InvalidValueException",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "$\u0022The specified start-time may not be after the specified end-time.\u0022"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "Name": "GetAtomicValues",
        "Modifiers": 72,
        "ReturnType": "System.Collections.Generic.IEnumerable\u003Cobject\u003E"
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.WorkshopPlanningId",
    "BaseTypes": [
      "Pitstop.WorkshopManagementAPI.Domain.Core.ValueObject"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "string",
        "Initializer": "yyyy-MM-dd",
        "Name": "DATE_FORMAT",
        "Modifiers": 516
      }
    ],
    "Properties": [
      {
        "Type": "string",
        "Name": "Value",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "System.DateTime",
            "Name": "date"
          }
        ],
        "Name": "Create",
        "Modifiers": 18,
        "ReturnType": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.WorkshopPlanningId",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "new WorkshopPlanningId { Value = date.ToString(DATE_FORMAT) }"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.ValueObjects.WorkshopPlanningId",
            "Name": "WorkshopPlanningId",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Value = date.ToString(DATE_FORMAT)"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Value",
            "Operator": "=",
            "Right": "date.ToString(DATE_FORMAT)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.DateTime",
            "Name": "ToString",
            "Arguments": [
              {
                "Type": "string",
                "Text": "yyyy-MM-dd"
              }
            ]
          }
        ]
      },
      {
        "Name": "GetAtomicValues",
        "Modifiers": 72,
        "ReturnType": "System.Collections.Generic.IEnumerable\u003Cobject\u003E"
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.DTOs.BusinessRuleViolation",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "string",
        "Name": "ErrorMessage",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.DTOs.CustomerDTO",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "string",
        "Name": "CustomerId",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "Name",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "TelephoneNumber",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.DTOs.MaintenanceJobDTO",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "System.Guid",
        "Name": "Id",
        "Modifiers": 2
      },
      {
        "Type": "System.DateTime",
        "Name": "StartTime",
        "Modifiers": 2
      },
      {
        "Type": "System.DateTime",
        "Name": "EndTime",
        "Modifiers": 2
      },
      {
        "Type": "Pitstop.WorkshopManagementAPI.DTOs.VehicleDTO",
        "Name": "Vehicle",
        "Modifiers": 2
      },
      {
        "Type": "Pitstop.WorkshopManagementAPI.DTOs.CustomerDTO",
        "Name": "Customer",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "Description",
        "Modifiers": 2
      },
      {
        "Type": "System.DateTime?",
        "Name": "ActualStartTime",
        "Modifiers": 2
      },
      {
        "Type": "System.DateTime?",
        "Name": "ActualEndTime",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "Notes",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "Status",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.DTOs.VehicleDTO",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "string",
        "Name": "LicenseNumber",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "Brand",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "Type",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "OwnerId",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.DTOs.WorkshopPlanningDTO",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "System.DateTime",
        "Name": "Date",
        "Modifiers": 2
      },
      {
        "Type": "System.Collections.Generic.List\u003CPitstop.WorkshopManagementAPI.DTOs.MaintenanceJobDTO\u003E",
        "Name": "Jobs",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.Events.MaintenanceJobFinished",
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.Event"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "System.Guid",
        "Name": "JobId",
        "Modifiers": 130
      },
      {
        "Type": "System.DateTime",
        "Name": "StartTime",
        "Modifiers": 130
      },
      {
        "Type": "System.DateTime",
        "Name": "EndTime",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "Notes",
        "Modifiers": 130
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          },
          {
            "Type": "System.Guid",
            "Name": "jobId"
          },
          {
            "Type": "System.DateTime",
            "Name": "startTime"
          },
          {
            "Type": "System.DateTime",
            "Name": "endTime"
          },
          {
            "Type": "string",
            "Name": "notes"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "JobId",
            "Operator": "=",
            "Right": "jobId"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "StartTime",
            "Operator": "=",
            "Right": "startTime"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "EndTime",
            "Operator": "=",
            "Right": "endTime"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Notes",
            "Operator": "=",
            "Right": "notes"
          }
        ],
        "Name": "MaintenanceJobFinished",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.Events.MaintenanceJobPlanned",
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.Event"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "System.Guid",
        "Name": "JobId",
        "Modifiers": 130
      },
      {
        "Type": "System.DateTime",
        "Name": "StartTime",
        "Modifiers": 130
      },
      {
        "Type": "System.DateTime",
        "Name": "EndTime",
        "Modifiers": 130
      },
      {
        "Type": "(string Id, string Name, string TelephoneNumber)",
        "Name": "CustomerInfo",
        "Modifiers": 130
      },
      {
        "Type": "(string LicenseNumber, string Brand, string Type)",
        "Name": "VehicleInfo",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "Description",
        "Modifiers": 130
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          },
          {
            "Type": "System.Guid",
            "Name": "jobId"
          },
          {
            "Type": "System.DateTime",
            "Name": "startTime"
          },
          {
            "Type": "System.DateTime",
            "Name": "endTime"
          },
          {
            "Type": "(string Id, string Name, string TelephoneNumber)",
            "Name": "customerInfo"
          },
          {
            "Type": "(string LicenseNumber, string Brand, string Type)",
            "Name": "vehicleInfo"
          },
          {
            "Type": "string",
            "Name": "description"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "JobId",
            "Operator": "=",
            "Right": "jobId"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "StartTime",
            "Operator": "=",
            "Right": "startTime"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "EndTime",
            "Operator": "=",
            "Right": "endTime"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "CustomerInfo",
            "Operator": "=",
            "Right": "customerInfo"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "VehicleInfo",
            "Operator": "=",
            "Right": "vehicleInfo"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Description",
            "Operator": "=",
            "Right": "description"
          }
        ],
        "Name": "MaintenanceJobPlanned",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.Events.WorkshopPlanningCreated",
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.Event"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "System.DateTime",
        "Name": "Date",
        "Modifiers": 130
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          },
          {
            "Type": "System.DateTime",
            "Name": "date"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Date",
            "Operator": "=",
            "Right": "date"
          }
        ],
        "Name": "WorkshopPlanningCreated",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.Mappers.Mappers",
    "Modifiers": 18,
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "Pitstop.WorkshopManagementAPI.Commands.PlanMaintenanceJob",
            "Name": "source"
          }
        ],
        "Name": "MapToMaintenanceJobPlanned",
        "Modifiers": 18,
        "ReturnType": "Pitstop.WorkshopManagementAPI.Events.MaintenanceJobPlanned",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "new MaintenanceJobPlanned (\r\n        Guid.NewGuid(),\r\n        source.JobId,\r\n        source.StartTime,\r\n        source.EndTime,\r\n        source.CustomerInfo,\r\n        source.VehicleInfo,\r\n        source.Description\r\n    )"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Events.MaintenanceJobPlanned",
            "Name": "MaintenanceJobPlanned",
            "Arguments": [
              {
                "Type": "System.Guid",
                "Text": "Guid.NewGuid()"
              },
              {
                "Type": "System.Guid",
                "Text": "source.JobId"
              },
              {
                "Type": "System.DateTime",
                "Text": "source.StartTime"
              },
              {
                "Type": "System.DateTime",
                "Text": "source.EndTime"
              },
              {
                "Type": "(string Id, string Name, string TelephoneNumber)",
                "Text": "source.CustomerInfo"
              },
              {
                "Type": "(string LicenseNumber, string Brand, string Type)",
                "Text": "source.VehicleInfo"
              },
              {
                "Type": "string",
                "Text": "source.Description"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Guid",
            "Name": "NewGuid"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WorkshopManagementAPI.Commands.FinishMaintenanceJob",
            "Name": "source"
          }
        ],
        "Name": "MapToMaintenanceJobFinished",
        "Modifiers": 18,
        "ReturnType": "Pitstop.WorkshopManagementAPI.Events.MaintenanceJobFinished",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "new MaintenanceJobFinished     (\r\n        Guid.NewGuid(),\r\n        source.JobId,\r\n        source.StartTime,\r\n        source.EndTime,\r\n        source.Notes\r\n    )"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Events.MaintenanceJobFinished",
            "Name": "MaintenanceJobFinished",
            "Arguments": [
              {
                "Type": "System.Guid",
                "Text": "Guid.NewGuid()"
              },
              {
                "Type": "System.Guid",
                "Text": "source.JobId"
              },
              {
                "Type": "System.DateTime",
                "Text": "source.StartTime"
              },
              {
                "Type": "System.DateTime",
                "Text": "source.EndTime"
              },
              {
                "Type": "string",
                "Text": "source.Notes"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Guid",
            "Name": "NewGuid"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WorkshopManagementAPI.Domain.Entities.WorkshopPlanning",
            "Name": "source"
          }
        ],
        "Name": "MapToDTO",
        "Modifiers": 18,
        "ReturnType": "Pitstop.WorkshopManagementAPI.DTOs.WorkshopPlanningDTO",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "new WorkshopPlanningDTO { Date = (DateTime)source.Id, Jobs = source.Jobs.Select(j =\u003E j.MapToDTO()).ToList() }"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.DTOs.WorkshopPlanningDTO",
            "Name": "WorkshopPlanningDTO",
            "Arguments": [
              {
                "Type": "System.DateTime",
                "Text": "Date = (DateTime)source.Id"
              },
              {
                "Type": "System.Collections.Generic.List\u003CPitstop.WorkshopManagementAPI.DTOs.MaintenanceJobDTO\u003E",
                "Text": "Jobs = source.Jobs.Select(j =\u003E j.MapToDTO()).ToList()"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Date",
            "Operator": "=",
            "Right": "(DateTime)source.Id"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Jobs",
            "Operator": "=",
            "Right": "source.Jobs.Select(j =\u003E j.MapToDTO()).ToList()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Linq.Enumerable",
            "Name": "ToList"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Linq.Enumerable",
            "Name": "Select",
            "Arguments": [
              {
                "Type": "System.Func\u003CPitstop.WorkshopManagementAPI.Domain.Entities.MaintenanceJob, Pitstop.WorkshopManagementAPI.DTOs.MaintenanceJobDTO\u003E",
                "Text": "j =\u003E j.MapToDTO()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Mappers.Mappers",
            "Name": "MapToDTO"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WorkshopManagementAPI.Domain.Entities.MaintenanceJob",
            "Name": "source"
          }
        ],
        "Name": "MapToDTO",
        "Modifiers": 18,
        "ReturnType": "Pitstop.WorkshopManagementAPI.DTOs.MaintenanceJobDTO",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "new MaintenanceJobDTO { Id = source.Id, StartTime = source.PlannedTimeslot.StartTime, EndTime = source.PlannedTimeslot.EndTime, Vehicle = source.Vehicle.MapToDTO(), Customer = source.Customer.MapToDTO(), Description = source.Description, ActualStartTime = source?.ActualTimeslot?.StartTime, ActualEndTime = source?.ActualTimeslot?.EndTime, Notes = source.Notes }"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.DTOs.MaintenanceJobDTO",
            "Name": "MaintenanceJobDTO",
            "Arguments": [
              {
                "Type": "System.Guid",
                "Text": "Id = source.Id"
              },
              {
                "Type": "System.DateTime",
                "Text": "StartTime = source.PlannedTimeslot.StartTime"
              },
              {
                "Type": "System.DateTime",
                "Text": "EndTime = source.PlannedTimeslot.EndTime"
              },
              {
                "Type": "Pitstop.WorkshopManagementAPI.DTOs.VehicleDTO",
                "Text": "Vehicle = source.Vehicle.MapToDTO()"
              },
              {
                "Type": "Pitstop.WorkshopManagementAPI.DTOs.CustomerDTO",
                "Text": "Customer = source.Customer.MapToDTO()"
              },
              {
                "Type": "string",
                "Text": "Description = source.Description"
              },
              {
                "Type": "System.DateTime?",
                "Text": "ActualStartTime = source?.ActualTimeslot?.StartTime"
              },
              {
                "Type": "System.DateTime?",
                "Text": "ActualEndTime = source?.ActualTimeslot?.EndTime"
              },
              {
                "Type": "string",
                "Text": "Notes = source.Notes"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Id",
            "Operator": "=",
            "Right": "source.Id"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "StartTime",
            "Operator": "=",
            "Right": "source.PlannedTimeslot.StartTime"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "EndTime",
            "Operator": "=",
            "Right": "source.PlannedTimeslot.EndTime"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Vehicle",
            "Operator": "=",
            "Right": "source.Vehicle.MapToDTO()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Mappers.Mappers",
            "Name": "MapToDTO"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Customer",
            "Operator": "=",
            "Right": "source.Customer.MapToDTO()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Mappers.Mappers",
            "Name": "MapToDTO"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Description",
            "Operator": "=",
            "Right": "source.Description"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "ActualStartTime",
            "Operator": "=",
            "Right": "source?.ActualTimeslot?.StartTime"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "ActualEndTime",
            "Operator": "=",
            "Right": "source?.ActualTimeslot?.EndTime"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Notes",
            "Operator": "=",
            "Right": "source.Notes"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WorkshopManagementAPI.Domain.Entities.Vehicle",
            "Name": "source"
          }
        ],
        "Name": "MapToDTO",
        "Modifiers": 18,
        "ReturnType": "Pitstop.WorkshopManagementAPI.DTOs.VehicleDTO",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "new VehicleDTO { LicenseNumber = source.Id.Value, Brand = source.Brand, Type = source.Type }"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.DTOs.VehicleDTO",
            "Name": "VehicleDTO",
            "Arguments": [
              {
                "Type": "string",
                "Text": "LicenseNumber = source.Id.Value"
              },
              {
                "Type": "string",
                "Text": "Brand = source.Brand"
              },
              {
                "Type": "string",
                "Text": "Type = source.Type"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "LicenseNumber",
            "Operator": "=",
            "Right": "source.Id.Value"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Brand",
            "Operator": "=",
            "Right": "source.Brand"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Type",
            "Operator": "=",
            "Right": "source.Type"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WorkshopManagementAPI.Domain.Entities.Customer",
            "Name": "source"
          }
        ],
        "Name": "MapToDTO",
        "Modifiers": 18,
        "ReturnType": "Pitstop.WorkshopManagementAPI.DTOs.CustomerDTO",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "new CustomerDTO { CustomerId = source.Id, Name = source.Name, TelephoneNumber = source.TelephoneNumber }"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.DTOs.CustomerDTO",
            "Name": "CustomerDTO",
            "Arguments": [
              {
                "Type": "string",
                "Text": "CustomerId = source.Id"
              },
              {
                "Type": "string",
                "Text": "Name = source.Name"
              },
              {
                "Type": "string",
                "Text": "TelephoneNumber = source.TelephoneNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "CustomerId",
            "Operator": "=",
            "Right": "source.Id"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Name",
            "Operator": "=",
            "Right": "source.Name"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "TelephoneNumber",
            "Operator": "=",
            "Right": "source.TelephoneNumber"
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.Repositories.ConcurrencyException",
    "BaseTypes": [
      "System.Exception"
    ],
    "Modifiers": 2,
    "Constructors": [
      {
        "Name": "ConcurrencyException",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "message"
          }
        ],
        "Name": "ConcurrencyException",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "message"
          },
          {
            "Type": "System.Exception",
            "Name": "innerException"
          }
        ],
        "Name": "ConcurrencyException",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.Repositories.DatabaseNotCreatedException",
    "BaseTypes": [
      "System.Exception"
    ],
    "Modifiers": 2,
    "Constructors": [
      {
        "Name": "DatabaseNotCreatedException",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "message"
          }
        ],
        "Name": "DatabaseNotCreatedException",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "message"
          },
          {
            "Type": "System.Exception",
            "Name": "innerException"
          }
        ],
        "Name": "DatabaseNotCreatedException",
        "Modifiers": 2
      }
    ]
  },
  {
    "Type": 1,
    "FullName": "Pitstop.WorkshopManagementAPI.Repositories.ICustomerRepository",
    "Modifiers": 2,
    "Methods": [
      {
        "Name": "GetCustomersAsync",
        "ReturnType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.IEnumerable\u003CPitstop.WorkshopManagementAPI.Repositories.Model.Customer\u003E\u003E"
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "customerId"
          }
        ],
        "Name": "GetCustomerAsync",
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WorkshopManagementAPI.Repositories.Model.Customer\u003E"
      }
    ]
  },
  {
    "Type": 1,
    "FullName": "Pitstop.WorkshopManagementAPI.Repositories.IEventSourceRepository\u003CT\u003E",
    "Modifiers": 2,
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "id"
          }
        ],
        "Name": "GetByIdAsync",
        "ReturnType": "System.Threading.Tasks.Task\u003CT\u003E"
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "id"
          },
          {
            "Type": "int",
            "Name": "originalVersion"
          },
          {
            "Type": "int",
            "Name": "newVersion"
          },
          {
            "Type": "System.Collections.Generic.IEnumerable\u003CPitstop.Infrastructure.Messaging.Event\u003E",
            "Name": "newEvents"
          }
        ],
        "Name": "SaveAsync",
        "ReturnType": "System.Threading.Tasks.Task"
      }
    ]
  },
  {
    "Type": 1,
    "FullName": "Pitstop.WorkshopManagementAPI.Repositories.IVehicleRepository",
    "Modifiers": 2,
    "Methods": [
      {
        "Name": "GetVehiclesAsync",
        "ReturnType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.IEnumerable\u003CPitstop.WorkshopManagementAPI.Repositories.Model.Vehicle\u003E\u003E"
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "licenseNumber"
          }
        ],
        "Name": "GetVehicleAsync",
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WorkshopManagementAPI.Repositories.Model.Vehicle\u003E"
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.Repositories.Model.Aggregate",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "string",
        "Name": "Id",
        "Modifiers": 2
      },
      {
        "Type": "int",
        "Name": "CurrentVersion",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.Repositories.Model.AggregateEvent",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "string",
        "Name": "Id",
        "Modifiers": 2
      },
      {
        "Type": "int",
        "Name": "Version",
        "Modifiers": 2
      },
      {
        "Type": "System.DateTime",
        "Name": "Timestamp",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "MessageType",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "EventData",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.Repositories.Model.Customer",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "string",
        "Name": "CustomerId",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "Name",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "TelephoneNumber",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.Repositories.Model.Vehicle",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "string",
        "Name": "LicenseNumber",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "Brand",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "Type",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "OwnerId",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.Repositories.SqlServerRefDataRepository",
    "BaseTypes": [
      "Pitstop.WorkshopManagementAPI.Repositories.IVehicleRepository",
      "Pitstop.WorkshopManagementAPI.Repositories.ICustomerRepository"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "string",
        "Name": "_connectionString"
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "connectionString"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_connectionString",
            "Operator": "=",
            "Right": "connectionString"
          }
        ],
        "Name": "SqlServerRefDataRepository",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Name": "GetCustomersAsync",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.IEnumerable\u003CPitstop.WorkshopManagementAPI.Repositories.Model.Customer\u003E\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Collections.Generic.List\u003CPitstop.WorkshopManagementAPI.Repositories.Model.Customer\u003E",
            "Name": "List\u003CCustomer\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.SqlClient.SqlConnection",
            "Name": "SqlConnection",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_connectionString"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Dapper.SqlMapper",
            "Name": "QueryAsync\u003CCustomer\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "select * from Customer"
              }
            ]
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "customersSelection != null",
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Collections.Generic.List\u003CPitstop.WorkshopManagementAPI.Repositories.Model.Customer\u003E",
                    "Name": "AddRange",
                    "Arguments": [
                      {
                        "Type": "System.Collections.Generic.IEnumerable\u003CPitstop.WorkshopManagementAPI.Repositories.Model.Customer\u003E",
                        "Text": "customersSelection"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Repositories.SqlServerRefDataRepository",
            "Name": "HandleSqlException",
            "Arguments": [
              {
                "Type": "System.Data.SqlClient.SqlException",
                "Text": "ex"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "customers"
          }
        ]
      },
      {
        "Name": "GetVehiclesAsync",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.IEnumerable\u003CPitstop.WorkshopManagementAPI.Repositories.Model.Vehicle\u003E\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Collections.Generic.List\u003CPitstop.WorkshopManagementAPI.Repositories.Model.Vehicle\u003E",
            "Name": "List\u003CVehicle\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.SqlClient.SqlConnection",
            "Name": "SqlConnection",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_connectionString"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Dapper.SqlMapper",
            "Name": "QueryAsync\u003CVehicle\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "select * from Vehicle"
              }
            ]
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "vehicleSelection != null",
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Collections.Generic.List\u003CPitstop.WorkshopManagementAPI.Repositories.Model.Vehicle\u003E",
                    "Name": "AddRange",
                    "Arguments": [
                      {
                        "Type": "System.Collections.Generic.IEnumerable\u003CPitstop.WorkshopManagementAPI.Repositories.Model.Vehicle\u003E",
                        "Text": "vehicleSelection"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Repositories.SqlServerRefDataRepository",
            "Name": "HandleSqlException",
            "Arguments": [
              {
                "Type": "System.Data.SqlClient.SqlException",
                "Text": "ex"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "vehicles"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "licenseNumber"
          }
        ],
        "Name": "GetVehicleAsync",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WorkshopManagementAPI.Repositories.Model.Vehicle\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.SqlClient.SqlConnection",
            "Name": "SqlConnection",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_connectionString"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await conn.QueryFirstOrDefaultAsync\u003CVehicle\u003E(\u0022select * from Vehicle where LicenseNumber = @LicenseNumber\u0022,\r\n                    new { LicenseNumber = licenseNumber })"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Dapper.SqlMapper",
            "Name": "QueryFirstOrDefaultAsync\u003CVehicle\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "select * from Vehicle where LicenseNumber = @LicenseNumber"
              },
              {
                "Type": "\u003Canonymous type: string LicenseNumber\u003E",
                "Text": "new { LicenseNumber = licenseNumber }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Repositories.SqlServerRefDataRepository",
            "Name": "HandleSqlException",
            "Arguments": [
              {
                "Type": "System.Data.SqlClient.SqlException",
                "Text": "ex"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "null"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "customerId"
          }
        ],
        "Name": "GetCustomerAsync",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WorkshopManagementAPI.Repositories.Model.Customer\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.SqlClient.SqlConnection",
            "Name": "SqlConnection",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_connectionString"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await conn.QueryFirstOrDefaultAsync\u003CCustomer\u003E(\u0022select * from Customer where CustomerId = @CustomerId\u0022,\r\n                    new { CustomerId = customerId })"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Dapper.SqlMapper",
            "Name": "QueryFirstOrDefaultAsync\u003CCustomer\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "select * from Customer where CustomerId = @CustomerId"
              },
              {
                "Type": "\u003Canonymous type: string CustomerId\u003E",
                "Text": "new { CustomerId = customerId }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Repositories.SqlServerRefDataRepository",
            "Name": "HandleSqlException",
            "Arguments": [
              {
                "Type": "System.Data.SqlClient.SqlException",
                "Text": "ex"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "null"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "System.Data.SqlClient.SqlException",
            "Name": "ex"
          }
        ],
        "Name": "HandleSqlException",
        "Modifiers": 20,
        "Statements": [
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "ex.Errors.Count \u003E 0",
                "Statements": [
                  {
                    "$type": "DendroDocs.If, DendroDocs.Shared",
                    "Sections": [
                      {
                        "Condition": "ex.Errors[i].Number == 4060",
                        "Statements": [
                          {
                            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                            "ContainingType": "Pitstop.WorkshopManagementAPI.Repositories.DatabaseNotCreatedException",
                            "Name": "DatabaseNotCreatedException",
                            "Arguments": [
                              {
                                "Type": "string",
                                "Text": "\u0022WorkshopManagement database not found. This database is automatically created by the WorkshopManagementEventHandler. Run this service first.\u0022"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Runtime.ExceptionServices.ExceptionDispatchInfo",
            "Name": "Throw"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Runtime.ExceptionServices.ExceptionDispatchInfo",
            "Name": "Capture",
            "Arguments": [
              {
                "Type": "System.Data.SqlClient.SqlException",
                "Text": "ex"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementAPI.Repositories.SqlServerWorkshopPlanningEventSourceRepository",
    "BaseTypes": [
      "Pitstop.WorkshopManagementAPI.Repositories.IEventSourceRepository\u003CPitstop.WorkshopManagementAPI.Domain.Entities.WorkshopPlanning\u003E"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "Newtonsoft.Json.JsonSerializerSettings",
        "Name": "_serializerSettings",
        "Modifiers": 148
      },
      {
        "Type": "System.Collections.Generic.Dictionary\u003CSystem.DateTime, string\u003E",
        "Initializer": "new Dictionary\u003CDateTime, string\u003E ()",
        "Name": "_store",
        "Modifiers": 148
      },
      {
        "Type": "string",
        "Name": "_connectionString"
      }
    ],
    "Constructors": [
      {
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_serializerSettings",
            "Operator": "=",
            "Right": "new JsonSerializerSettings()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Newtonsoft.Json.JsonSerializerSettings",
            "Name": "JsonSerializerSettings"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_serializerSettings.Formatting",
            "Operator": "=",
            "Right": "Formatting.Indented"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Collections.Generic.ICollection\u003CNewtonsoft.Json.JsonConverter\u003E",
            "Name": "Add",
            "Arguments": [
              {
                "Type": "Newtonsoft.Json.Converters.StringEnumConverter",
                "Text": "new StringEnumConverter { NamingStrategy = new CamelCaseNamingStrategy() }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Newtonsoft.Json.Converters.StringEnumConverter",
            "Name": "StringEnumConverter",
            "Arguments": [
              {
                "Type": "Newtonsoft.Json.Serialization.NamingStrategy",
                "Text": "NamingStrategy = new CamelCaseNamingStrategy()"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "NamingStrategy",
            "Operator": "=",
            "Right": "new CamelCaseNamingStrategy()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Newtonsoft.Json.Serialization.CamelCaseNamingStrategy",
            "Name": "CamelCaseNamingStrategy"
          }
        ],
        "Name": "SqlServerWorkshopPlanningEventSourceRepository",
        "Modifiers": 20
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "connectionString"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_connectionString",
            "Operator": "=",
            "Right": "connectionString"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Information",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Initialize Database"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task",
            "Name": "Wait"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.AsyncPolicy",
            "Name": "ExecuteAsync",
            "Arguments": [
              {
                "Type": "System.Func\u003CSystem.Threading.Tasks.Task\u003E",
                "Text": "InitializeDatabaseAsync"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.AsyncRetrySyntax",
            "Name": "WaitAndRetryAsync",
            "Arguments": [
              {
                "Type": "int",
                "Text": "10"
              },
              {
                "Type": "System.Func\u003Cint, System.TimeSpan\u003E",
                "Text": "r =\u003E TimeSpan.FromSeconds(10)"
              },
              {
                "Type": "System.Action\u003CSystem.Exception, System.TimeSpan\u003E",
                "Text": "(ex, ts) =\u003E { Log.Error(\u0022Error connecting to DB. Retrying in 10 sec.\u0022); }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.Policy",
            "Name": "Handle\u003CException\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.TimeSpan",
            "Name": "FromSeconds",
            "Arguments": [
              {
                "Type": "int",
                "Text": "10"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Error",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Error connecting to DB. Retrying in 10 sec."
              }
            ]
          }
        ],
        "Name": "SqlServerWorkshopPlanningEventSourceRepository",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "aggregateId"
          }
        ],
        "Name": "GetByIdAsync",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WorkshopManagementAPI.Domain.Entities.WorkshopPlanning\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.SqlClient.SqlConnection",
            "Name": "SqlConnection",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_connectionString"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.AsyncPolicy",
            "Name": "ExecuteAsync",
            "Arguments": [
              {
                "Type": "System.Func\u003CSystem.Threading.Tasks.Task\u003E",
                "Text": "() =\u003E conn.OpenAsync()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.AsyncRetrySyntax",
            "Name": "WaitAndRetryAsync",
            "Arguments": [
              {
                "Type": "int",
                "Text": "5"
              },
              {
                "Type": "System.Func\u003Cint, System.TimeSpan\u003E",
                "Text": "r =\u003E TimeSpan.FromSeconds(5)"
              },
              {
                "Type": "System.Action\u003CSystem.Exception, System.TimeSpan\u003E",
                "Text": "(ex, ts) =\u003E\r\n                    { Console.WriteLine(\u0022Error connecting to DB. Retrying in 5 sec.\u0022); }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.Policy",
            "Name": "Handle\u003CException\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.TimeSpan",
            "Name": "FromSeconds",
            "Arguments": [
              {
                "Type": "int",
                "Text": "5"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Console",
            "Name": "WriteLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Error connecting to DB. Retrying in 5 sec."
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.Common.DbConnection",
            "Name": "OpenAsync"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Dapper.SqlMapper",
            "Name": "QuerySingleOrDefaultAsync\u003CAggregate\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "select * from WorkshopPlanning where Id = @Id"
              },
              {
                "Type": "\u003Canonymous type: string Id\u003E",
                "Text": "new { Id = aggregateId }"
              }
            ]
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "aggregate == null",
                "Statements": [
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "null"
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Dapper.SqlMapper",
            "Name": "QueryAsync\u003CAggregateEvent\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "select * from WorkshopPlanningEvent where Id = @Id order by [Version];"
              },
              {
                "Type": "\u003Canonymous type: string Id\u003E",
                "Text": "new { Id = aggregateId }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Collections.Generic.List\u003CPitstop.Infrastructure.Messaging.Event\u003E",
            "Name": "List\u003CEvent\u003E"
          },
          {
            "$type": "DendroDocs.ForEach, DendroDocs.Shared",
            "Expression": "aggregateEvent in aggregateEvents",
            "Statements": [
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "System.Collections.Generic.List\u003CPitstop.Infrastructure.Messaging.Event\u003E",
                "Name": "Add",
                "Arguments": [
                  {
                    "Type": "Pitstop.Infrastructure.Messaging.Event",
                    "Text": "DeserializeEventData(aggregateEvent.MessageType, aggregateEvent.EventData)"
                  }
                ]
              },
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "Pitstop.WorkshopManagementAPI.Repositories.SqlServerWorkshopPlanningEventSourceRepository",
                "Name": "DeserializeEventData",
                "Arguments": [
                  {
                    "Type": "string",
                    "Text": "aggregateEvent.MessageType"
                  },
                  {
                    "Type": "string",
                    "Text": "aggregateEvent.EventData"
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "planning",
            "Operator": "=",
            "Right": "new WorkshopPlanning(DateTime.ParseExact(aggregateId, \u0022yyyy-MM-dd\u0022, CultureInfo.InvariantCulture), events)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementAPI.Domain.Entities.WorkshopPlanning",
            "Name": "WorkshopPlanning",
            "Arguments": [
              {
                "Type": "System.DateTime",
                "Text": "DateTime.ParseExact(aggregateId, \u0022yyyy-MM-dd\u0022, CultureInfo.InvariantCulture)"
              },
              {
                "Type": "System.Collections.Generic.List\u003CPitstop.Infrastructure.Messaging.Event\u003E",
                "Text": "events"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.DateTime",
            "Name": "ParseExact",
            "Arguments": [
              {
                "Type": "string",
                "Text": "aggregateId"
              },
              {
                "Type": "string",
                "Text": "yyyy-MM-dd"
              },
              {
                "Type": "System.Globalization.CultureInfo",
                "Text": "CultureInfo.InvariantCulture"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "planning"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "aggregateId"
          },
          {
            "Type": "int",
            "Name": "originalVersion"
          },
          {
            "Type": "int",
            "Name": "newVersion"
          },
          {
            "Type": "System.Collections.Generic.IEnumerable\u003CPitstop.Infrastructure.Messaging.Event\u003E",
            "Name": "newEvents"
          }
        ],
        "Name": "SaveAsync",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.SqlClient.SqlConnection",
            "Name": "SqlConnection",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_connectionString"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.AsyncPolicy",
            "Name": "ExecuteAsync",
            "Arguments": [
              {
                "Type": "System.Func\u003CSystem.Threading.Tasks.Task\u003E",
                "Text": "() =\u003E conn.OpenAsync()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.AsyncRetrySyntax",
            "Name": "WaitAndRetryAsync",
            "Arguments": [
              {
                "Type": "int",
                "Text": "5"
              },
              {
                "Type": "System.Func\u003Cint, System.TimeSpan\u003E",
                "Text": "r =\u003E TimeSpan.FromSeconds(5)"
              },
              {
                "Type": "System.Action\u003CSystem.Exception, System.TimeSpan\u003E",
                "Text": "(ex, ts) =\u003E\r\n                    { Console.WriteLine(\u0022Error connecting to DB. Retrying in 5 sec.\u0022); }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.Policy",
            "Name": "Handle\u003CException\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.TimeSpan",
            "Name": "FromSeconds",
            "Arguments": [
              {
                "Type": "int",
                "Text": "5"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Console",
            "Name": "WriteLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Error connecting to DB. Retrying in 5 sec."
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.Common.DbConnection",
            "Name": "OpenAsync"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.SqlClient.SqlConnection",
            "Name": "BeginTransaction"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Dapper.SqlMapper",
            "Name": "QuerySingleOrDefaultAsync\u003CAggregate\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "select * from WorkshopPlanning where Id = @Id"
              },
              {
                "Type": "\u003Canonymous type: string Id\u003E",
                "Text": "new { Id = aggregateId }"
              },
              {
                "Type": "System.Data.SqlClient.SqlTransaction",
                "Text": "transaction"
              }
            ]
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "aggregate != null",
                "Statements": [
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "affectedRows",
                    "Operator": "=",
                    "Right": "await conn.ExecuteAsync(\r\n                        @\u0022update WorkshopPlanning\r\n                              set [CurrentVersion] = @NewVersion\r\n                              where [Id] = @Id\r\n                              and [CurrentVersion] = @CurrentVersion;\u0022,\r\n                        new\r\n                        {\r\n                            Id = aggregateId,\r\n                            NewVersion = newVersion,\r\n                            CurrentVersion = originalVersion\r\n                        },\r\n                        transaction)"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Dapper.SqlMapper",
                    "Name": "ExecuteAsync",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "update WorkshopPlanning\r\n                              set [CurrentVersion] = @NewVersion\r\n                              where [Id] = @Id\r\n                              and [CurrentVersion] = @CurrentVersion;"
                      },
                      {
                        "Type": "\u003Canonymous type: string Id, int NewVersion, int CurrentVersion\u003E",
                        "Text": "new\r\n                        {\r\n                            Id = aggregateId,\r\n                            NewVersion = newVersion,\r\n                            CurrentVersion = originalVersion\r\n                        }"
                      },
                      {
                        "Type": "System.Data.SqlClient.SqlTransaction",
                        "Text": "transaction"
                      }
                    ]
                  }
                ]
              },
              {
                "Statements": [
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "affectedRows",
                    "Operator": "=",
                    "Right": "await conn.ExecuteAsync(\r\n                        \u0022insert WorkshopPlanning ([Id], [CurrentVersion]) values (@Id, @CurrentVersion)\u0022,\r\n                        new { Id = aggregateId, CurrentVersion = newVersion },\r\n                        transaction)"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Dapper.SqlMapper",
                    "Name": "ExecuteAsync",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "insert WorkshopPlanning ([Id], [CurrentVersion]) values (@Id, @CurrentVersion)"
                      },
                      {
                        "Type": "\u003Canonymous type: string Id, int CurrentVersion\u003E",
                        "Text": "new { Id = aggregateId, CurrentVersion = newVersion }"
                      },
                      {
                        "Type": "System.Data.SqlClient.SqlTransaction",
                        "Text": "transaction"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "affectedRows == 0",
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "System.Data.SqlClient.SqlTransaction",
                    "Name": "Rollback"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.WorkshopManagementAPI.Repositories.ConcurrencyException",
                    "Name": "ConcurrencyException"
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.ForEach, DendroDocs.Shared",
            "Expression": "e in newEvents",
            "Statements": [
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "Dapper.SqlMapper",
                "Name": "ExecuteAsync",
                "Arguments": [
                  {
                    "Type": "string",
                    "Text": "insert WorkshopPlanningEvent ([Id], [Version], [Timestamp], [MessageType], [EventData])\r\n                              values (@Id, @NewVersion, @Timestamp, @MessageType,@EventData);"
                  },
                  {
                    "Type": "\u003Canonymous type: string Id, int NewVersion, System.DateTime Timestamp, string MessageType, string EventData\u003E",
                    "Text": "new\r\n                        {\r\n                            Id = aggregateId,\r\n                            NewVersion = eventVersion,\r\n                            Timestamp = DateTime.Now,\r\n                            MessageType = e.MessageType,\r\n                            EventData = SerializeEventData(e)\r\n                        }"
                  },
                  {
                    "Type": "System.Data.SqlClient.SqlTransaction",
                    "Text": "transaction"
                  }
                ]
              },
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "Pitstop.WorkshopManagementAPI.Repositories.SqlServerWorkshopPlanningEventSourceRepository",
                "Name": "SerializeEventData",
                "Arguments": [
                  {
                    "Type": "Pitstop.Infrastructure.Messaging.Event",
                    "Text": "e"
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.SqlClient.SqlTransaction",
            "Name": "Commit"
          }
        ]
      },
      {
        "Name": "InitializeDatabaseAsync",
        "Modifiers": 260,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.SqlClient.SqlConnection",
            "Name": "SqlConnection",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_connectionString.Replace(\u0022WorkshopManagementEventStore\u0022, \u0022master\u0022)"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "string",
            "Name": "Replace",
            "Arguments": [
              {
                "Type": "string",
                "Text": "WorkshopManagementEventStore"
              },
              {
                "Type": "string",
                "Text": "master"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.Common.DbConnection",
            "Name": "OpenAsync"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Dapper.SqlMapper",
            "Name": "Execute",
            "Arguments": [
              {
                "Type": "string",
                "Text": "sql"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.SqlClient.SqlConnection",
            "Name": "SqlConnection",
            "Arguments": [
              {
                "Type": "string",
                "Text": "_connectionString"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Data.Common.DbConnection",
            "Name": "OpenAsync"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Dapper.SqlMapper",
            "Name": "Execute",
            "Arguments": [
              {
                "Type": "string",
                "Text": "sql"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "planningId"
          },
          {
            "Type": "System.Data.SqlClient.SqlConnection",
            "Name": "conn"
          }
        ],
        "Name": "GetAggregateEvents",
        "Modifiers": 260,
        "DocumentationComments": {
          "Summary": "Get events for a certain aggregate.",
          "Params": {
            "planningId": "The id of the planning.",
            "conn": "The SQL connection to use."
          }
        },
        "ReturnType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.IEnumerable\u003CPitstop.Infrastructure.Messaging.Event\u003E\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Dapper.SqlMapper",
            "Name": "QueryAsync\u003CAggregateEvent\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "select * from WorkshopPlanningEvent where Id = @Id order by [Version]"
              },
              {
                "Type": "\u003Canonymous type: string Id\u003E",
                "Text": "new { Id = planningId }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Collections.Generic.List\u003CPitstop.Infrastructure.Messaging.Event\u003E",
            "Name": "List\u003CEvent\u003E"
          },
          {
            "$type": "DendroDocs.ForEach, DendroDocs.Shared",
            "Expression": "aggregateEvent in aggregateEvents",
            "Statements": [
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "System.Collections.Generic.List\u003CPitstop.Infrastructure.Messaging.Event\u003E",
                "Name": "Add",
                "Arguments": [
                  {
                    "Type": "Pitstop.Infrastructure.Messaging.Event",
                    "Text": "DeserializeEventData(aggregateEvent.MessageType, aggregateEvent.EventData)"
                  }
                ]
              },
              {
                "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                "ContainingType": "Pitstop.WorkshopManagementAPI.Repositories.SqlServerWorkshopPlanningEventSourceRepository",
                "Name": "DeserializeEventData",
                "Arguments": [
                  {
                    "Type": "string",
                    "Text": "aggregateEvent.MessageType"
                  },
                  {
                    "Type": "string",
                    "Text": "aggregateEvent.EventData"
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "events"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.Infrastructure.Messaging.Event",
            "Name": "eventData"
          }
        ],
        "Name": "SerializeEventData",
        "DocumentationComments": {
          "Summary": "Serialize event-data to JSON.",
          "Params": {
            "eventData": "The event-data to serialize."
          }
        },
        "ReturnType": "string",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "JsonConvert.SerializeObject(eventData, _serializerSettings)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Newtonsoft.Json.JsonConvert",
            "Name": "SerializeObject",
            "Arguments": [
              {
                "Type": "Pitstop.Infrastructure.Messaging.Event",
                "Text": "eventData"
              },
              {
                "Type": "Newtonsoft.Json.JsonSerializerSettings",
                "Text": "_serializerSettings"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "messageType"
          },
          {
            "Type": "string",
            "Name": "eventData"
          }
        ],
        "Name": "DeserializeEventData",
        "DocumentationComments": {
          "Summary": "Deserialize event-data from JSON.",
          "Params": {
            "messageType": "The message-type of the event.",
            "eventData": "The event-data JSON to deserialize."
          }
        },
        "ReturnType": "Pitstop.Infrastructure.Messaging.Event",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Type",
            "Name": "GetType",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Pitstop.WorkshopManagementAPI.Events.{messageType}"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Newtonsoft.Json.JsonConvert",
            "Name": "DeserializeObject\u003CJObject\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "eventData"
              },
              {
                "Type": "Newtonsoft.Json.JsonSerializerSettings",
                "Text": "_serializerSettings"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "obj.ToObject(eventType) as Event"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Newtonsoft.Json.Linq.JToken",
            "Name": "ToObject",
            "Arguments": [
              {
                "Type": "System.Type",
                "Text": "eventType"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementEventHandler.Customer",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "string",
        "Name": "CustomerId",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "Name",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "TelephoneNumber",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementEventHandler.DataAccess.DBInitializer",
    "Modifiers": 18,
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "Pitstop.WorkshopManagementEventHandler.DataAccess.WorkshopManagementDBContext",
            "Name": "context"
          }
        ],
        "Name": "Initialize",
        "Modifiers": 18,
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Information",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Ensure WorkshopManagement Database"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.Policy",
            "Name": "Execute",
            "Arguments": [
              {
                "Type": "System.Action",
                "Text": "() =\u003E context.Database.Migrate()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.RetrySyntax",
            "Name": "WaitAndRetry",
            "Arguments": [
              {
                "Type": "int",
                "Text": "5"
              },
              {
                "Type": "System.Func\u003Cint, System.TimeSpan\u003E",
                "Text": "r =\u003E TimeSpan.FromSeconds(5)"
              },
              {
                "Type": "System.Action\u003CSystem.Exception, System.TimeSpan\u003E",
                "Text": "(ex, ts) =\u003E { Log.Error(\u0022Error connecting to DB. Retrying in 5 sec.\u0022); }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Polly.Policy",
            "Name": "Handle\u003CException\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.TimeSpan",
            "Name": "FromSeconds",
            "Arguments": [
              {
                "Type": "int",
                "Text": "5"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Error",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Error connecting to DB. Retrying in 5 sec."
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions",
            "Name": "Migrate"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Information",
            "Arguments": [
              {
                "Type": "string",
                "Text": "WorkshopManagement Database available"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementEventHandler.DataAccess.WorkshopManagementDBContext",
    "BaseTypes": [
      "Microsoft.EntityFrameworkCore.DbContext"
    ],
    "Modifiers": 2,
    "Constructors": [
      {
        "Name": "WorkshopManagementDBContext",
        "Modifiers": 2
      },
      {
        "Parameters": [
          {
            "Type": "Microsoft.EntityFrameworkCore.DbContextOptions\u003CPitstop.WorkshopManagementEventHandler.DataAccess.WorkshopManagementDBContext\u003E",
            "Name": "options"
          }
        ],
        "Name": "WorkshopManagementDBContext",
        "Modifiers": 2
      }
    ],
    "Properties": [
      {
        "Type": "Microsoft.EntityFrameworkCore.DbSet\u003CPitstop.WorkshopManagementEventHandler.Model.Vehicle\u003E",
        "Name": "Vehicles",
        "Modifiers": 2
      },
      {
        "Type": "Microsoft.EntityFrameworkCore.DbSet\u003CPitstop.WorkshopManagementEventHandler.Customer\u003E",
        "Name": "Customers",
        "Modifiers": 2
      },
      {
        "Type": "Microsoft.EntityFrameworkCore.DbSet\u003CPitstop.WorkshopManagementEventHandler.Model.MaintenanceJob\u003E",
        "Name": "MaintenanceJobs",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "builder"
          }
        ],
        "Name": "OnModelCreating",
        "Modifiers": 72,
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder\u003CPitstop.WorkshopManagementEventHandler.Model.Vehicle\u003E",
            "Name": "HasKey",
            "Arguments": [
              {
                "Type": "System.Linq.Expressions.Expression\u003CSystem.Func\u003CPitstop.WorkshopManagementEventHandler.Model.Vehicle, object?\u003E\u003E",
                "Text": "entity =\u003E entity.LicenseNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "Entity\u003CVehicle\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "Name": "ToTable",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Vehicle"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "Entity\u003CVehicle\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder\u003CPitstop.WorkshopManagementEventHandler.Customer\u003E",
            "Name": "HasKey",
            "Arguments": [
              {
                "Type": "System.Linq.Expressions.Expression\u003CSystem.Func\u003CPitstop.WorkshopManagementEventHandler.Customer, object?\u003E\u003E",
                "Text": "entity =\u003E entity.CustomerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "Entity\u003CCustomer\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "Name": "ToTable",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Customer"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "Entity\u003CCustomer\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder\u003CPitstop.WorkshopManagementEventHandler.Model.MaintenanceJob\u003E",
            "Name": "HasKey",
            "Arguments": [
              {
                "Type": "System.Linq.Expressions.Expression\u003CSystem.Func\u003CPitstop.WorkshopManagementEventHandler.Model.MaintenanceJob, object?\u003E\u003E",
                "Text": "entity =\u003E entity.Id"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "Entity\u003CMaintenanceJob\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "Name": "ToTable",
            "Arguments": [
              {
                "Type": "string",
                "Text": "MaintenanceJob"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "Entity\u003CMaintenanceJob\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.DbContext",
            "Name": "OnModelCreating",
            "Arguments": [
              {
                "Type": "Microsoft.EntityFrameworkCore.ModelBuilder",
                "Text": "builder"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementEventHandler.EventHandlerWorker",
    "BaseTypes": [
      "Microsoft.Extensions.Hosting.IHostedService",
      "Pitstop.Infrastructure.Messaging.IMessageHandlerCallback"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "Pitstop.WorkshopManagementEventHandler.DataAccess.WorkshopManagementDBContext",
        "Name": "_dbContext"
      },
      {
        "Type": "Pitstop.Infrastructure.Messaging.IMessageHandler",
        "Name": "_messageHandler"
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "Pitstop.Infrastructure.Messaging.IMessageHandler",
            "Name": "messageHandler"
          },
          {
            "Type": "Pitstop.WorkshopManagementEventHandler.DataAccess.WorkshopManagementDBContext",
            "Name": "dbContext"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_messageHandler",
            "Operator": "=",
            "Right": "messageHandler"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_dbContext",
            "Operator": "=",
            "Right": "dbContext"
          }
        ],
        "Name": "EventHandlerWorker",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Name": "Start",
        "Modifiers": 2,
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.Infrastructure.Messaging.IMessageHandler",
            "Name": "Start",
            "Arguments": [
              {
                "Type": "Pitstop.WorkshopManagementEventHandler.EventHandlerWorker",
                "Text": "this"
              }
            ]
          }
        ]
      },
      {
        "Name": "Stop",
        "Modifiers": 2,
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.Infrastructure.Messaging.IMessageHandler",
            "Name": "Stop"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "System.Threading.CancellationToken",
            "Name": "cancellationToken"
          }
        ],
        "Name": "StartAsync",
        "Modifiers": 2,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.Infrastructure.Messaging.IMessageHandler",
            "Name": "Start",
            "Arguments": [
              {
                "Type": "Pitstop.WorkshopManagementEventHandler.EventHandlerWorker",
                "Text": "this"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "Task.CompletedTask"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "System.Threading.CancellationToken",
            "Name": "cancellationToken"
          }
        ],
        "Name": "StopAsync",
        "Modifiers": 2,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.Infrastructure.Messaging.IMessageHandler",
            "Name": "Stop"
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "Task.CompletedTask"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "messageType"
          },
          {
            "Type": "string",
            "Name": "message"
          }
        ],
        "Name": "HandleMessageAsync",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task\u003Cbool\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.Infrastructure.Messaging.MessageSerializer",
            "Name": "Deserialize",
            "Arguments": [
              {
                "Type": "string",
                "Text": "message"
              }
            ]
          },
          {
            "$type": "DendroDocs.Switch, DendroDocs.Shared",
            "Sections": [
              {
                "Labels": [
                  "\u0022CustomerRegistered\u0022"
                ],
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.WorkshopManagementEventHandler.EventHandlerWorker",
                    "Name": "HandleAsync",
                    "Arguments": [
                      {
                        "Type": "Pitstop.WorkshopManagementEventHandler.Events.CustomerRegistered",
                        "Text": "messageObject.ToObject\u003CCustomerRegistered\u003E()"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Newtonsoft.Json.Linq.JToken",
                    "Name": "ToObject\u003CCustomerRegistered\u003E"
                  }
                ]
              },
              {
                "Labels": [
                  "\u0022VehicleRegistered\u0022"
                ],
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.WorkshopManagementEventHandler.EventHandlerWorker",
                    "Name": "HandleAsync",
                    "Arguments": [
                      {
                        "Type": "Pitstop.WorkshopManagementEventHandler.Events.VehicleRegistered",
                        "Text": "messageObject.ToObject\u003CVehicleRegistered\u003E()"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Newtonsoft.Json.Linq.JToken",
                    "Name": "ToObject\u003CVehicleRegistered\u003E"
                  }
                ]
              },
              {
                "Labels": [
                  "\u0022MaintenanceJobPlanned\u0022"
                ],
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.WorkshopManagementEventHandler.EventHandlerWorker",
                    "Name": "HandleAsync",
                    "Arguments": [
                      {
                        "Type": "Pitstop.WorkshopManagementEventHandler.Events.MaintenanceJobPlanned",
                        "Text": "messageObject.ToObject\u003CMaintenanceJobPlanned\u003E()"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Newtonsoft.Json.Linq.JToken",
                    "Name": "ToObject\u003CMaintenanceJobPlanned\u003E"
                  }
                ]
              },
              {
                "Labels": [
                  "\u0022MaintenanceJobFinished\u0022"
                ],
                "Statements": [
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.WorkshopManagementEventHandler.EventHandlerWorker",
                    "Name": "HandleAsync",
                    "Arguments": [
                      {
                        "Type": "Pitstop.WorkshopManagementEventHandler.Events.MaintenanceJobFinished",
                        "Text": "messageObject.ToObject\u003CMaintenanceJobFinished\u003E()"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Newtonsoft.Json.Linq.JToken",
                    "Name": "ToObject\u003CMaintenanceJobFinished\u003E"
                  }
                ]
              }
            ],
            "Expression": "messageType"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Newtonsoft.Json.Linq.JObject",
            "Name": "Property",
            "Arguments": [
              {
                "Type": "string",
                "Text": "MessageId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Newtonsoft.Json.Linq.Extensions",
            "Name": "Value\u003Cstring\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Newtonsoft.Json.Linq.JObject",
            "Name": "Property",
            "Arguments": [
              {
                "Type": "string",
                "Text": "MessageId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Error",
            "Arguments": [
              {
                "Type": "System.Exception",
                "Text": "ex"
              },
              {
                "Type": "string",
                "Text": "Error while handling {MessageType} message with id {MessageId}."
              },
              {
                "Type": "string",
                "Text": "messageType"
              },
              {
                "Type": "string",
                "Text": "messageId"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "true"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WorkshopManagementEventHandler.Events.VehicleRegistered",
            "Name": "e"
          }
        ],
        "Name": "HandleAsync",
        "Modifiers": 260,
        "ReturnType": "System.Threading.Tasks.Task\u003Cbool\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Information",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Register Vehicle: {LicenseNumber}, {Brand}, {Type}, Owner Id: {OwnerId}"
              },
              {
                "Type": "string",
                "Text": "e.LicenseNumber"
              },
              {
                "Type": "string",
                "Text": "e.Brand"
              },
              {
                "Type": "string",
                "Text": "e.Type"
              },
              {
                "Type": "string",
                "Text": "e.OwnerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.DbSet\u003CPitstop.WorkshopManagementEventHandler.Model.Vehicle\u003E",
            "Name": "AddAsync",
            "Arguments": [
              {
                "Type": "Pitstop.WorkshopManagementEventHandler.Model.Vehicle",
                "Text": "new Vehicle { LicenseNumber = e.LicenseNumber, Brand = e.Brand, Type = e.Type, OwnerId = e.OwnerId }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementEventHandler.Model.Vehicle",
            "Name": "Vehicle",
            "Arguments": [
              {
                "Type": "string",
                "Text": "LicenseNumber = e.LicenseNumber"
              },
              {
                "Type": "string",
                "Text": "Brand = e.Brand"
              },
              {
                "Type": "string",
                "Text": "Type = e.Type"
              },
              {
                "Type": "string",
                "Text": "OwnerId = e.OwnerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "LicenseNumber",
            "Operator": "=",
            "Right": "e.LicenseNumber"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Brand",
            "Operator": "=",
            "Right": "e.Brand"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Type",
            "Operator": "=",
            "Right": "e.Type"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "OwnerId",
            "Operator": "=",
            "Right": "e.OwnerId"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.DbContext",
            "Name": "SaveChangesAsync"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Console",
            "Name": "WriteLine",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Skipped adding vehicle with license number {e.LicenseNumber}."
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "true"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WorkshopManagementEventHandler.Events.CustomerRegistered",
            "Name": "e"
          }
        ],
        "Name": "HandleAsync",
        "Modifiers": 260,
        "ReturnType": "System.Threading.Tasks.Task\u003Cbool\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Information",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Register Customer: {CustomerId}, {Name}, {TelephoneNumber}"
              },
              {
                "Type": "string",
                "Text": "e.CustomerId"
              },
              {
                "Type": "string",
                "Text": "e.Name"
              },
              {
                "Type": "string",
                "Text": "e.TelephoneNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.DbSet\u003CPitstop.WorkshopManagementEventHandler.Customer\u003E",
            "Name": "AddAsync",
            "Arguments": [
              {
                "Type": "Pitstop.WorkshopManagementEventHandler.Customer",
                "Text": "new Customer { CustomerId = e.CustomerId, Name = e.Name, TelephoneNumber = e.TelephoneNumber }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementEventHandler.Customer",
            "Name": "Customer",
            "Arguments": [
              {
                "Type": "string",
                "Text": "CustomerId = e.CustomerId"
              },
              {
                "Type": "string",
                "Text": "Name = e.Name"
              },
              {
                "Type": "string",
                "Text": "TelephoneNumber = e.TelephoneNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "CustomerId",
            "Operator": "=",
            "Right": "e.CustomerId"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Name",
            "Operator": "=",
            "Right": "e.Name"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "TelephoneNumber",
            "Operator": "=",
            "Right": "e.TelephoneNumber"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.DbContext",
            "Name": "SaveChangesAsync"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Warning",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Skipped adding customer with customer id {CustomerId}."
              },
              {
                "Type": "string",
                "Text": "e.CustomerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "true"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WorkshopManagementEventHandler.Events.MaintenanceJobPlanned",
            "Name": "e"
          }
        ],
        "Name": "HandleAsync",
        "Modifiers": 260,
        "ReturnType": "System.Threading.Tasks.Task\u003Cbool\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Information",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Register Maintenance Job: {JobId}, {StartTime}, {EndTime}, {CustomerName}, {LicenseNumber}"
              },
              {
                "Type": "System.Guid",
                "Text": "e.JobId"
              },
              {
                "Type": "System.DateTime",
                "Text": "e.StartTime"
              },
              {
                "Type": "System.DateTime",
                "Text": "e.EndTime"
              },
              {
                "Type": "string",
                "Text": "e.CustomerInfo.Name"
              },
              {
                "Type": "string",
                "Text": "e.VehicleInfo.LicenseNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions",
            "Name": "FirstOrDefaultAsync",
            "Arguments": [
              {
                "Type": "System.Linq.Expressions.Expression\u003CSystem.Func\u003CPitstop.WorkshopManagementEventHandler.Customer, bool\u003E\u003E",
                "Text": "c =\u003E c.CustomerId == e.CustomerInfo.Id"
              }
            ]
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "customer == null",
                "Statements": [
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "customer",
                    "Operator": "=",
                    "Right": "new Customer\r\n                {\r\n                    CustomerId = e.CustomerInfo.Id,\r\n                    Name = e.CustomerInfo.Name,\r\n                    TelephoneNumber = e.CustomerInfo.TelephoneNumber\r\n                }"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.WorkshopManagementEventHandler.Customer",
                    "Name": "Customer",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "CustomerId = e.CustomerInfo.Id"
                      },
                      {
                        "Type": "string",
                        "Text": "Name = e.CustomerInfo.Name"
                      },
                      {
                        "Type": "string",
                        "Text": "TelephoneNumber = e.CustomerInfo.TelephoneNumber"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "CustomerId",
                    "Operator": "=",
                    "Right": "e.CustomerInfo.Id"
                  },
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "Name",
                    "Operator": "=",
                    "Right": "e.CustomerInfo.Name"
                  },
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "TelephoneNumber",
                    "Operator": "=",
                    "Right": "e.CustomerInfo.TelephoneNumber"
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions",
            "Name": "FirstOrDefaultAsync",
            "Arguments": [
              {
                "Type": "System.Linq.Expressions.Expression\u003CSystem.Func\u003CPitstop.WorkshopManagementEventHandler.Model.Vehicle, bool\u003E\u003E",
                "Text": "v =\u003E v.LicenseNumber == e.VehicleInfo.LicenseNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "vehicle == null",
                "Statements": [
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "vehicle",
                    "Operator": "=",
                    "Right": "new Vehicle\r\n                {\r\n                    LicenseNumber = e.VehicleInfo.LicenseNumber,\r\n                    Brand = e.VehicleInfo.Brand,\r\n                    Type = e.VehicleInfo.Type,\r\n                    OwnerId = customer.CustomerId\r\n                }"
                  },
                  {
                    "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
                    "ContainingType": "Pitstop.WorkshopManagementEventHandler.Model.Vehicle",
                    "Name": "Vehicle",
                    "Arguments": [
                      {
                        "Type": "string",
                        "Text": "LicenseNumber = e.VehicleInfo.LicenseNumber"
                      },
                      {
                        "Type": "string",
                        "Text": "Brand = e.VehicleInfo.Brand"
                      },
                      {
                        "Type": "string",
                        "Text": "Type = e.VehicleInfo.Type"
                      },
                      {
                        "Type": "string",
                        "Text": "OwnerId = customer.CustomerId"
                      }
                    ]
                  },
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "LicenseNumber",
                    "Operator": "=",
                    "Right": "e.VehicleInfo.LicenseNumber"
                  },
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "Brand",
                    "Operator": "=",
                    "Right": "e.VehicleInfo.Brand"
                  },
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "Type",
                    "Operator": "=",
                    "Right": "e.VehicleInfo.Type"
                  },
                  {
                    "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
                    "Left": "OwnerId",
                    "Operator": "=",
                    "Right": "customer.CustomerId"
                  }
                ]
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.DbSet\u003CPitstop.WorkshopManagementEventHandler.Model.MaintenanceJob\u003E",
            "Name": "AddAsync",
            "Arguments": [
              {
                "Type": "Pitstop.WorkshopManagementEventHandler.Model.MaintenanceJob",
                "Text": "new MaintenanceJob { Id = e.JobId, StartTime = e.StartTime, EndTime = e.EndTime, Customer = customer, Vehicle = vehicle, WorkshopPlanningDate = e.StartTime.Date, Description = e.Description }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Pitstop.WorkshopManagementEventHandler.Model.MaintenanceJob",
            "Name": "MaintenanceJob",
            "Arguments": [
              {
                "Type": "System.Guid",
                "Text": "Id = e.JobId"
              },
              {
                "Type": "System.DateTime",
                "Text": "StartTime = e.StartTime"
              },
              {
                "Type": "System.DateTime",
                "Text": "EndTime = e.EndTime"
              },
              {
                "Type": "Pitstop.WorkshopManagementEventHandler.Customer",
                "Text": "Customer = customer"
              },
              {
                "Type": "Pitstop.WorkshopManagementEventHandler.Model.Vehicle",
                "Text": "Vehicle = vehicle"
              },
              {
                "Type": "System.DateTime",
                "Text": "WorkshopPlanningDate = e.StartTime.Date"
              },
              {
                "Type": "string",
                "Text": "Description = e.Description"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Id",
            "Operator": "=",
            "Right": "e.JobId"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "StartTime",
            "Operator": "=",
            "Right": "e.StartTime"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "EndTime",
            "Operator": "=",
            "Right": "e.EndTime"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Customer",
            "Operator": "=",
            "Right": "customer"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Vehicle",
            "Operator": "=",
            "Right": "vehicle"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "WorkshopPlanningDate",
            "Operator": "=",
            "Right": "e.StartTime.Date"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Description",
            "Operator": "=",
            "Right": "e.Description"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.DbContext",
            "Name": "SaveChangesAsync"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Warning",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Skipped adding maintenance job with id {JobId}."
              },
              {
                "Type": "System.Guid",
                "Text": "e.JobId"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "true"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WorkshopManagementEventHandler.Events.MaintenanceJobFinished",
            "Name": "e"
          }
        ],
        "Name": "HandleAsync",
        "Modifiers": 260,
        "ReturnType": "System.Threading.Tasks.Task\u003Cbool\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Information",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Finish Maintenance job: {JobId}, {ActualStartTime}, {EndTime}"
              },
              {
                "Type": "System.Guid",
                "Text": "e.JobId"
              },
              {
                "Type": "System.DateTime",
                "Text": "e.StartTime"
              },
              {
                "Type": "System.DateTime",
                "Text": "e.EndTime"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions",
            "Name": "FirstOrDefaultAsync",
            "Arguments": [
              {
                "Type": "System.Linq.Expressions.Expression\u003CSystem.Func\u003CPitstop.WorkshopManagementEventHandler.Model.MaintenanceJob, bool\u003E\u003E",
                "Text": "j =\u003E j.Id == e.JobId"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "job.ActualStartTime",
            "Operator": "=",
            "Right": "e.StartTime"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "job.ActualEndTime",
            "Operator": "=",
            "Right": "e.EndTime"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "job.Notes",
            "Operator": "=",
            "Right": "e.Notes"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.DbContext",
            "Name": "SaveChangesAsync"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Serilog.Log",
            "Name": "Warning",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Skipped adding maintenance job with id {JobId}."
              },
              {
                "Type": "System.Guid",
                "Text": "e.JobId"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "true"
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementEventHandler.Events.CustomerRegistered",
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.Event"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "string",
        "Name": "CustomerId",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "Name",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "TelephoneNumber",
        "Modifiers": 130
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          },
          {
            "Type": "string",
            "Name": "customerId"
          },
          {
            "Type": "string",
            "Name": "name"
          },
          {
            "Type": "string",
            "Name": "telephoneNumber"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "CustomerId",
            "Operator": "=",
            "Right": "customerId"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Name",
            "Operator": "=",
            "Right": "name"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "TelephoneNumber",
            "Operator": "=",
            "Right": "telephoneNumber"
          }
        ],
        "Name": "CustomerRegistered",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementEventHandler.Events.MaintenanceJobFinished",
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.Event"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "System.Guid",
        "Name": "JobId",
        "Modifiers": 130
      },
      {
        "Type": "System.DateTime",
        "Name": "StartTime",
        "Modifiers": 130
      },
      {
        "Type": "System.DateTime",
        "Name": "EndTime",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "Notes",
        "Modifiers": 130
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          },
          {
            "Type": "System.Guid",
            "Name": "jobId"
          },
          {
            "Type": "System.DateTime",
            "Name": "startTime"
          },
          {
            "Type": "System.DateTime",
            "Name": "endTime"
          },
          {
            "Type": "string",
            "Name": "notes"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "JobId",
            "Operator": "=",
            "Right": "jobId"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "StartTime",
            "Operator": "=",
            "Right": "startTime"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "EndTime",
            "Operator": "=",
            "Right": "endTime"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Notes",
            "Operator": "=",
            "Right": "notes"
          }
        ],
        "Name": "MaintenanceJobFinished",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementEventHandler.Events.MaintenanceJobPlanned",
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.Event"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "System.Guid",
        "Name": "JobId",
        "Modifiers": 130
      },
      {
        "Type": "System.DateTime",
        "Name": "StartTime",
        "Modifiers": 130
      },
      {
        "Type": "System.DateTime",
        "Name": "EndTime",
        "Modifiers": 130
      },
      {
        "Type": "(string Id, string Name, string TelephoneNumber)",
        "Name": "CustomerInfo",
        "Modifiers": 130
      },
      {
        "Type": "(string LicenseNumber, string Brand, string Type)",
        "Name": "VehicleInfo",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "Description",
        "Modifiers": 130
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          },
          {
            "Type": "System.Guid",
            "Name": "jobId"
          },
          {
            "Type": "System.DateTime",
            "Name": "startTime"
          },
          {
            "Type": "System.DateTime",
            "Name": "endTime"
          },
          {
            "Type": "(string Id, string Name, string TelephoneNumber)",
            "Name": "customerInfo"
          },
          {
            "Type": "(string LicenseNumber, string Brand, string Type)",
            "Name": "vehicleInfo"
          },
          {
            "Type": "string",
            "Name": "description"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "JobId",
            "Operator": "=",
            "Right": "jobId"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "StartTime",
            "Operator": "=",
            "Right": "startTime"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "EndTime",
            "Operator": "=",
            "Right": "endTime"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "CustomerInfo",
            "Operator": "=",
            "Right": "customerInfo"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "VehicleInfo",
            "Operator": "=",
            "Right": "vehicleInfo"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Description",
            "Operator": "=",
            "Right": "description"
          }
        ],
        "Name": "MaintenanceJobPlanned",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementEventHandler.Events.VehicleRegistered",
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.Event"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "string",
        "Name": "LicenseNumber",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "Brand",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "Type",
        "Modifiers": 130
      },
      {
        "Type": "string",
        "Name": "OwnerId",
        "Modifiers": 130
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          },
          {
            "Type": "string",
            "Name": "licenseNumber"
          },
          {
            "Type": "string",
            "Name": "brand"
          },
          {
            "Type": "string",
            "Name": "type"
          },
          {
            "Type": "string",
            "Name": "ownerId"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "LicenseNumber",
            "Operator": "=",
            "Right": "licenseNumber"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Brand",
            "Operator": "=",
            "Right": "brand"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Type",
            "Operator": "=",
            "Right": "type"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "OwnerId",
            "Operator": "=",
            "Right": "ownerId"
          }
        ],
        "Name": "VehicleRegistered",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementEventHandler.Migrations.v1",
    "BaseTypes": [
      "Microsoft.EntityFrameworkCore.Migrations.Migration"
    ],
    "Modifiers": 32770,
    "Attributes": [
      {
        "Type": "Microsoft.EntityFrameworkCore.Infrastructure.DbContextAttribute",
        "Name": "DbContext",
        "Arguments": [
          {
            "Name": "contextType",
            "Type": "System.Type",
            "Value": "typeof(WorkshopManagementDBContext)"
          }
        ]
      },
      {
        "Type": "Microsoft.EntityFrameworkCore.Migrations.MigrationAttribute",
        "Name": "Migration",
        "Arguments": [
          {
            "Name": "id",
            "Type": "string",
            "Value": "20170525045944_v1"
          }
        ]
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder",
            "Name": "migrationBuilder"
          }
        ],
        "Name": "Up",
        "Modifiers": 72,
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder",
            "Name": "CreateTable",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Customer"
              },
              {
                "Type": "System.Func\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder, \u003Canonymous type: Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E CustomerId, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Name, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E TelephoneNumber\u003E\u003E",
                "Text": "table =\u003E new\r\n                {\r\n                    CustomerId = table.Column\u003Cstring\u003E(nullable: false),\r\n                    Name = table.Column\u003Cstring\u003E(nullable: true),\r\n                    TelephoneNumber = table.Column\u003Cstring\u003E(nullable: true)\r\n                }"
              },
              {
                "Type": "System.Action\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder\u003C\u003Canonymous type: Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E CustomerId, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Name, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E TelephoneNumber\u003E\u003E\u003E",
                "Text": "table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_Customer\u0022, x =\u003E x.CustomerId);\r\n                }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder",
            "Name": "Column\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder",
            "Name": "Column\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "true"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder",
            "Name": "Column\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "true"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder\u003C\u003Canonymous type: Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E CustomerId, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Name, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E TelephoneNumber\u003E\u003E",
            "Name": "PrimaryKey",
            "Arguments": [
              {
                "Type": "string",
                "Text": "PK_Customer"
              },
              {
                "Type": "System.Linq.Expressions.Expression\u003CSystem.Func\u003C\u003Canonymous type: Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E CustomerId, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Name, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E TelephoneNumber\u003E, object\u003E\u003E",
                "Text": "x =\u003E x.CustomerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder",
            "Name": "CreateTable",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Vehicle"
              },
              {
                "Type": "System.Func\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder, \u003Canonymous type: Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E LicenseNumber, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Brand, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E OwnerId, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Type\u003E\u003E",
                "Text": "table =\u003E new\r\n                {\r\n                    LicenseNumber = table.Column\u003Cstring\u003E(nullable: false),\r\n                    Brand = table.Column\u003Cstring\u003E(nullable: true),\r\n                    OwnerId = table.Column\u003Cstring\u003E(nullable: true),\r\n                    Type = table.Column\u003Cstring\u003E(nullable: true)\r\n                }"
              },
              {
                "Type": "System.Action\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder\u003C\u003Canonymous type: Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E LicenseNumber, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Brand, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E OwnerId, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Type\u003E\u003E\u003E",
                "Text": "table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_Vehicle\u0022, x =\u003E x.LicenseNumber);\r\n                }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder",
            "Name": "Column\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder",
            "Name": "Column\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "true"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder",
            "Name": "Column\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "true"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder",
            "Name": "Column\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "true"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder\u003C\u003Canonymous type: Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E LicenseNumber, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Brand, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E OwnerId, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Type\u003E\u003E",
            "Name": "PrimaryKey",
            "Arguments": [
              {
                "Type": "string",
                "Text": "PK_Vehicle"
              },
              {
                "Type": "System.Linq.Expressions.Expression\u003CSystem.Func\u003C\u003Canonymous type: Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E LicenseNumber, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Brand, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E OwnerId, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Type\u003E, object\u003E\u003E",
                "Text": "x =\u003E x.LicenseNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder",
            "Name": "CreateTable",
            "Arguments": [
              {
                "Type": "string",
                "Text": "MaintenanceJob"
              },
              {
                "Type": "System.Func\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder, \u003Canonymous type: Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Id, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E ActualEndTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E ActualStartTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E CustomerId, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Description, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E EndTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Notes, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E StartTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E VehicleLicenseNumber, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E WorkshopPlanningDate\u003E\u003E",
                "Text": "table =\u003E new\r\n                {\r\n                    Id = table.Column\u003CGuid\u003E(nullable: false),\r\n                    ActualEndTime = table.Column\u003CDateTime\u003E(nullable: true),\r\n                    ActualStartTime = table.Column\u003CDateTime\u003E(nullable: true),\r\n                    CustomerId = table.Column\u003Cstring\u003E(nullable: true),\r\n                    Description = table.Column\u003Cstring\u003E(nullable: true),\r\n                    EndTime = table.Column\u003CDateTime\u003E(nullable: false),\r\n                    Notes = table.Column\u003Cstring\u003E(nullable: true),\r\n                    StartTime = table.Column\u003CDateTime\u003E(nullable: false),\r\n                    VehicleLicenseNumber = table.Column\u003Cstring\u003E(nullable: true),\r\n                    WorkshopPlanningDate = table.Column\u003CDateTime\u003E(nullable: false)\r\n                }"
              },
              {
                "Type": "System.Action\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder\u003C\u003Canonymous type: Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Id, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E ActualEndTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E ActualStartTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E CustomerId, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Description, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E EndTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Notes, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E StartTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E VehicleLicenseNumber, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E WorkshopPlanningDate\u003E\u003E\u003E",
                "Text": "table =\u003E\r\n                {\r\n                    table.PrimaryKey(\u0022PK_MaintenanceJob\u0022, x =\u003E x.Id);\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_MaintenanceJob_Customer_CustomerId\u0022,\r\n                        column: x =\u003E x.CustomerId,\r\n                        principalTable: \u0022Customer\u0022,\r\n                        principalColumn: \u0022CustomerId\u0022,\r\n                        onDelete: ReferentialAction.Restrict);\r\n                    table.ForeignKey(\r\n                        name: \u0022FK_MaintenanceJob_Vehicle_VehicleLicenseNumber\u0022,\r\n                        column: x =\u003E x.VehicleLicenseNumber,\r\n                        principalTable: \u0022Vehicle\u0022,\r\n                        principalColumn: \u0022LicenseNumber\u0022,\r\n                        onDelete: ReferentialAction.Restrict);\r\n                }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder",
            "Name": "Column\u003CGuid\u003E",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder",
            "Name": "Column\u003CDateTime\u003E",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "true"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder",
            "Name": "Column\u003CDateTime\u003E",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "true"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder",
            "Name": "Column\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "true"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder",
            "Name": "Column\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "true"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder",
            "Name": "Column\u003CDateTime\u003E",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder",
            "Name": "Column\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "true"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder",
            "Name": "Column\u003CDateTime\u003E",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder",
            "Name": "Column\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "true"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.ColumnsBuilder",
            "Name": "Column\u003CDateTime\u003E",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder\u003C\u003Canonymous type: Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Id, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E ActualEndTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E ActualStartTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E CustomerId, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Description, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E EndTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Notes, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E StartTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E VehicleLicenseNumber, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E WorkshopPlanningDate\u003E\u003E",
            "Name": "PrimaryKey",
            "Arguments": [
              {
                "Type": "string",
                "Text": "PK_MaintenanceJob"
              },
              {
                "Type": "System.Linq.Expressions.Expression\u003CSystem.Func\u003C\u003Canonymous type: Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Id, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E ActualEndTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E ActualStartTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E CustomerId, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Description, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E EndTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Notes, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E StartTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E VehicleLicenseNumber, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E WorkshopPlanningDate\u003E, object\u003E\u003E",
                "Text": "x =\u003E x.Id"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder\u003C\u003Canonymous type: Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Id, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E ActualEndTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E ActualStartTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E CustomerId, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Description, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E EndTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Notes, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E StartTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E VehicleLicenseNumber, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E WorkshopPlanningDate\u003E\u003E",
            "Name": "ForeignKey",
            "Arguments": [
              {
                "Type": "string",
                "Text": "FK_MaintenanceJob_Customer_CustomerId"
              },
              {
                "Type": "System.Linq.Expressions.Expression\u003CSystem.Func\u003C\u003Canonymous type: Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Id, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E ActualEndTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E ActualStartTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E CustomerId, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Description, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E EndTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Notes, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E StartTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E VehicleLicenseNumber, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E WorkshopPlanningDate\u003E, object\u003E\u003E",
                "Text": "x =\u003E x.CustomerId"
              },
              {
                "Type": "string",
                "Text": "Customer"
              },
              {
                "Type": "string",
                "Text": "CustomerId"
              },
              {
                "Type": "Microsoft.EntityFrameworkCore.Migrations.ReferentialAction",
                "Text": "ReferentialAction.Restrict"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.CreateTableBuilder\u003C\u003Canonymous type: Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Id, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E ActualEndTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E ActualStartTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E CustomerId, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Description, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E EndTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Notes, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E StartTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E VehicleLicenseNumber, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E WorkshopPlanningDate\u003E\u003E",
            "Name": "ForeignKey",
            "Arguments": [
              {
                "Type": "string",
                "Text": "FK_MaintenanceJob_Vehicle_VehicleLicenseNumber"
              },
              {
                "Type": "System.Linq.Expressions.Expression\u003CSystem.Func\u003C\u003Canonymous type: Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Id, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E ActualEndTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E ActualStartTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E CustomerId, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Description, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E EndTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E Notes, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E StartTime, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E VehicleLicenseNumber, Microsoft.EntityFrameworkCore.Migrations.Operations.Builders.OperationBuilder\u003CMicrosoft.EntityFrameworkCore.Migrations.Operations.AddColumnOperation\u003E WorkshopPlanningDate\u003E, object\u003E\u003E",
                "Text": "x =\u003E x.VehicleLicenseNumber"
              },
              {
                "Type": "string",
                "Text": "Vehicle"
              },
              {
                "Type": "string",
                "Text": "LicenseNumber"
              },
              {
                "Type": "Microsoft.EntityFrameworkCore.Migrations.ReferentialAction",
                "Text": "ReferentialAction.Restrict"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder",
            "Name": "CreateIndex",
            "Arguments": [
              {
                "Type": "string",
                "Text": "IX_MaintenanceJob_CustomerId"
              },
              {
                "Type": "string",
                "Text": "MaintenanceJob"
              },
              {
                "Type": "string",
                "Text": "CustomerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder",
            "Name": "CreateIndex",
            "Arguments": [
              {
                "Type": "string",
                "Text": "IX_MaintenanceJob_VehicleLicenseNumber"
              },
              {
                "Type": "string",
                "Text": "MaintenanceJob"
              },
              {
                "Type": "string",
                "Text": "VehicleLicenseNumber"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder",
            "Name": "migrationBuilder"
          }
        ],
        "Name": "Down",
        "Modifiers": 72,
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder",
            "Name": "DropTable",
            "Arguments": [
              {
                "Type": "string",
                "Text": "MaintenanceJob"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder",
            "Name": "DropTable",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Customer"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder",
            "Name": "DropTable",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Vehicle"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "modelBuilder"
          }
        ],
        "Name": "BuildTargetModel",
        "Modifiers": 72,
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "HasAnnotation",
            "Arguments": [
              {
                "Type": "string",
                "Text": "ProductVersion"
              },
              {
                "Type": "string",
                "Text": "1.1.1"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "Entity",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Pitstop.WorkshopManagementEventHandler.Customer"
              },
              {
                "Type": "System.Action\u003CMicrosoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder\u003E",
                "Text": "b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022CustomerId\u0022)\r\n                        .ValueGeneratedOnAdd();\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Name\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022TelephoneNumber\u0022);\r\n\r\n                    b.HasKey(\u0022CustomerId\u0022);\r\n\r\n                    b.ToTable(\u0022Customer\u0022);\r\n                }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder\u003Cstring\u003E",
            "Name": "ValueGeneratedOnAdd"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "CustomerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Name"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "TelephoneNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "HasKey",
            "Arguments": [
              {
                "Type": "string",
                "Text": "CustomerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "Name": "ToTable",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Customer"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "Entity",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Pitstop.WorkshopManagementEventHandler.Model.MaintenanceJob"
              },
              {
                "Type": "System.Action\u003CMicrosoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder\u003E",
                "Text": "b =\u003E\r\n                {\r\n                    b.Property\u003CGuid\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd();\r\n\r\n                    b.Property\u003CDateTime?\u003E(\u0022ActualEndTime\u0022);\r\n\r\n                    b.Property\u003CDateTime?\u003E(\u0022ActualStartTime\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022CustomerId\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Description\u0022);\r\n\r\n                    b.Property\u003CDateTime\u003E(\u0022EndTime\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Notes\u0022);\r\n\r\n                    b.Property\u003CDateTime\u003E(\u0022StartTime\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022VehicleLicenseNumber\u0022);\r\n\r\n                    b.Property\u003CDateTime\u003E(\u0022WorkshopPlanningDate\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022CustomerId\u0022);\r\n\r\n                    b.HasIndex(\u0022VehicleLicenseNumber\u0022);\r\n\r\n                    b.ToTable(\u0022MaintenanceJob\u0022);\r\n                }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder\u003CSystem.Guid\u003E",
            "Name": "ValueGeneratedOnAdd"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003CGuid\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Id"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003CDateTime?\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "ActualEndTime"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003CDateTime?\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "ActualStartTime"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "CustomerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Description"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003CDateTime\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "EndTime"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Notes"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003CDateTime\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "StartTime"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "VehicleLicenseNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003CDateTime\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "WorkshopPlanningDate"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "HasKey",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Id"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "HasIndex",
            "Arguments": [
              {
                "Type": "string",
                "Text": "CustomerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "HasIndex",
            "Arguments": [
              {
                "Type": "string",
                "Text": "VehicleLicenseNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "Name": "ToTable",
            "Arguments": [
              {
                "Type": "string",
                "Text": "MaintenanceJob"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "Entity",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Pitstop.WorkshopManagementEventHandler.Model.Vehicle"
              },
              {
                "Type": "System.Action\u003CMicrosoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder\u003E",
                "Text": "b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022LicenseNumber\u0022)\r\n                        .ValueGeneratedOnAdd();\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Brand\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022OwnerId\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Type\u0022);\r\n\r\n                    b.HasKey(\u0022LicenseNumber\u0022);\r\n\r\n                    b.ToTable(\u0022Vehicle\u0022);\r\n                }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder\u003Cstring\u003E",
            "Name": "ValueGeneratedOnAdd"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "LicenseNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Brand"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "OwnerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Type"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "HasKey",
            "Arguments": [
              {
                "Type": "string",
                "Text": "LicenseNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "Name": "ToTable",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Vehicle"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "Entity",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Pitstop.WorkshopManagementEventHandler.Model.MaintenanceJob"
              },
              {
                "Type": "System.Action\u003CMicrosoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder\u003E",
                "Text": "b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Pitstop.WorkshopManagementEventHandler.Customer\u0022, \u0022Customer\u0022)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022CustomerId\u0022);\r\n\r\n                    b.HasOne(\u0022Pitstop.WorkshopManagementEventHandler.Model.Vehicle\u0022, \u0022Vehicle\u0022)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022VehicleLicenseNumber\u0022);\r\n                }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "Name": "HasForeignKey",
            "Arguments": [
              {
                "Type": "string",
                "Text": "CustomerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder",
            "Name": "WithMany"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "HasOne",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Pitstop.WorkshopManagementEventHandler.Customer"
              },
              {
                "Type": "string",
                "Text": "Customer"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "Name": "HasForeignKey",
            "Arguments": [
              {
                "Type": "string",
                "Text": "VehicleLicenseNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder",
            "Name": "WithMany"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "HasOne",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Pitstop.WorkshopManagementEventHandler.Model.Vehicle"
              },
              {
                "Type": "string",
                "Text": "Vehicle"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementEventHandler.Migrations.WorkshopManagementDBContextModelSnapshot",
    "BaseTypes": [
      "Microsoft.EntityFrameworkCore.Infrastructure.ModelSnapshot"
    ],
    "Modifiers": 32769,
    "Attributes": [
      {
        "Type": "Microsoft.EntityFrameworkCore.Infrastructure.DbContextAttribute",
        "Name": "DbContext",
        "Arguments": [
          {
            "Name": "contextType",
            "Type": "System.Type",
            "Value": "typeof(WorkshopManagementDBContext)"
          }
        ]
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "modelBuilder"
          }
        ],
        "Name": "BuildModel",
        "Modifiers": 72,
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "HasAnnotation",
            "Arguments": [
              {
                "Type": "string",
                "Text": "ProductVersion"
              },
              {
                "Type": "string",
                "Text": "1.1.1"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "Entity",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Pitstop.WorkshopManagementEventHandler.Customer"
              },
              {
                "Type": "System.Action\u003CMicrosoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder\u003E",
                "Text": "b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022CustomerId\u0022)\r\n                        .ValueGeneratedOnAdd();\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Name\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022TelephoneNumber\u0022);\r\n\r\n                    b.HasKey(\u0022CustomerId\u0022);\r\n\r\n                    b.ToTable(\u0022Customer\u0022);\r\n                }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder\u003Cstring\u003E",
            "Name": "ValueGeneratedOnAdd"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "CustomerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Name"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "TelephoneNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "HasKey",
            "Arguments": [
              {
                "Type": "string",
                "Text": "CustomerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "Name": "ToTable",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Customer"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "Entity",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Pitstop.WorkshopManagementEventHandler.Model.MaintenanceJob"
              },
              {
                "Type": "System.Action\u003CMicrosoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder\u003E",
                "Text": "b =\u003E\r\n                {\r\n                    b.Property\u003CGuid\u003E(\u0022Id\u0022)\r\n                        .ValueGeneratedOnAdd();\r\n\r\n                    b.Property\u003CDateTime?\u003E(\u0022ActualEndTime\u0022);\r\n\r\n                    b.Property\u003CDateTime?\u003E(\u0022ActualStartTime\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022CustomerId\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Description\u0022);\r\n\r\n                    b.Property\u003CDateTime\u003E(\u0022EndTime\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Notes\u0022);\r\n\r\n                    b.Property\u003CDateTime\u003E(\u0022StartTime\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022VehicleLicenseNumber\u0022);\r\n\r\n                    b.Property\u003CDateTime\u003E(\u0022WorkshopPlanningDate\u0022);\r\n\r\n                    b.HasKey(\u0022Id\u0022);\r\n\r\n                    b.HasIndex(\u0022CustomerId\u0022);\r\n\r\n                    b.HasIndex(\u0022VehicleLicenseNumber\u0022);\r\n\r\n                    b.ToTable(\u0022MaintenanceJob\u0022);\r\n                }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder\u003CSystem.Guid\u003E",
            "Name": "ValueGeneratedOnAdd"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003CGuid\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Id"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003CDateTime?\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "ActualEndTime"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003CDateTime?\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "ActualStartTime"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "CustomerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Description"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003CDateTime\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "EndTime"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Notes"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003CDateTime\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "StartTime"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "VehicleLicenseNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003CDateTime\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "WorkshopPlanningDate"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "HasKey",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Id"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "HasIndex",
            "Arguments": [
              {
                "Type": "string",
                "Text": "CustomerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "HasIndex",
            "Arguments": [
              {
                "Type": "string",
                "Text": "VehicleLicenseNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "Name": "ToTable",
            "Arguments": [
              {
                "Type": "string",
                "Text": "MaintenanceJob"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "Entity",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Pitstop.WorkshopManagementEventHandler.Model.Vehicle"
              },
              {
                "Type": "System.Action\u003CMicrosoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder\u003E",
                "Text": "b =\u003E\r\n                {\r\n                    b.Property\u003Cstring\u003E(\u0022LicenseNumber\u0022)\r\n                        .ValueGeneratedOnAdd();\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Brand\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022OwnerId\u0022);\r\n\r\n                    b.Property\u003Cstring\u003E(\u0022Type\u0022);\r\n\r\n                    b.HasKey(\u0022LicenseNumber\u0022);\r\n\r\n                    b.ToTable(\u0022Vehicle\u0022);\r\n                }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder\u003Cstring\u003E",
            "Name": "ValueGeneratedOnAdd"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "LicenseNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Brand"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "OwnerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "Property\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Type"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "HasKey",
            "Arguments": [
              {
                "Type": "string",
                "Text": "LicenseNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions",
            "Name": "ToTable",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Vehicle"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.ModelBuilder",
            "Name": "Entity",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Pitstop.WorkshopManagementEventHandler.Model.MaintenanceJob"
              },
              {
                "Type": "System.Action\u003CMicrosoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder\u003E",
                "Text": "b =\u003E\r\n                {\r\n                    b.HasOne(\u0022Pitstop.WorkshopManagementEventHandler.Customer\u0022, \u0022Customer\u0022)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022CustomerId\u0022);\r\n\r\n                    b.HasOne(\u0022Pitstop.WorkshopManagementEventHandler.Model.Vehicle\u0022, \u0022Vehicle\u0022)\r\n                        .WithMany()\r\n                        .HasForeignKey(\u0022VehicleLicenseNumber\u0022);\r\n                }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "Name": "HasForeignKey",
            "Arguments": [
              {
                "Type": "string",
                "Text": "CustomerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder",
            "Name": "WithMany"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "HasOne",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Pitstop.WorkshopManagementEventHandler.Customer"
              },
              {
                "Type": "string",
                "Text": "Customer"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder",
            "Name": "HasForeignKey",
            "Arguments": [
              {
                "Type": "string",
                "Text": "VehicleLicenseNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder",
            "Name": "WithMany"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder",
            "Name": "HasOne",
            "Arguments": [
              {
                "Type": "string",
                "Text": "Pitstop.WorkshopManagementEventHandler.Model.Vehicle"
              },
              {
                "Type": "string",
                "Text": "Vehicle"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementEventHandler.Model.MaintenanceJob",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "System.Guid",
        "Name": "Id",
        "Modifiers": 2
      },
      {
        "Type": "System.DateTime",
        "Name": "StartTime",
        "Modifiers": 2
      },
      {
        "Type": "System.DateTime",
        "Name": "EndTime",
        "Modifiers": 2
      },
      {
        "Type": "Pitstop.WorkshopManagementEventHandler.Model.Vehicle",
        "Name": "Vehicle",
        "Modifiers": 2
      },
      {
        "Type": "Pitstop.WorkshopManagementEventHandler.Customer",
        "Name": "Customer",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "Description",
        "Modifiers": 2
      },
      {
        "Type": "System.DateTime?",
        "Name": "ActualStartTime",
        "Modifiers": 2
      },
      {
        "Type": "System.DateTime?",
        "Name": "ActualEndTime",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "Notes",
        "Modifiers": 2
      },
      {
        "Type": "System.DateTime",
        "Name": "WorkshopPlanningDate",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Pitstop.WorkshopManagementEventHandler.Model.Vehicle",
    "Modifiers": 2,
    "Properties": [
      {
        "Type": "string",
        "Name": "LicenseNumber",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "Brand",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "Type",
        "Modifiers": 2
      },
      {
        "Type": "string",
        "Name": "OwnerId",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "Refit.Implementation.Generated",
    "DocumentationComments": {},
    "Modifiers": 32785,
    "Attributes": [
      {
        "Type": "System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute",
        "Name": "global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage"
      },
      {
        "Type": "System.Diagnostics.DebuggerNonUserCodeAttribute",
        "Name": "global::System.Diagnostics.DebuggerNonUserCode"
      },
      {
        "Type": "RefitInternalGenerated.PreserveAttribute",
        "Name": "global::RefitInternalGenerated.PreserveAttribute"
      },
      {
        "Type": "System.Reflection.ObfuscationAttribute",
        "Name": "global::System.Reflection.Obfuscation",
        "Arguments": [
          {
            "Name": "Exclude",
            "Type": "bool",
            "Value": "true"
          }
        ]
      },
      {
        "Type": "System.ComponentModel.EditorBrowsableAttribute",
        "Name": "global::System.ComponentModel.EditorBrowsable",
        "Arguments": [
          {
            "Name": "state",
            "Type": "System.ComponentModel.EditorBrowsableState",
            "Value": "global::System.ComponentModel.EditorBrowsableState.Never"
          }
        ]
      }
    ],
    "Methods": [
      {
        "Name": "Initialize",
        "Modifiers": 18,
        "Attributes": [
          {
            "Type": "System.Runtime.CompilerServices.ModuleInitializerAttribute",
            "Name": "System.Runtime.CompilerServices.ModuleInitializer"
          },
          {
            "Type": "System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute",
            "Name": "System.Diagnostics.CodeAnalysis.DynamicDependency",
            "Arguments": [
              {
                "Name": "memberTypes",
                "Type": "System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes",
                "Value": "System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All"
              },
              {
                "Name": "type",
                "Type": "System.Type",
                "Value": "typeof(global::Refit.Implementation.Generated)"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Refit.Implementation.Generated.WebAppRESTClientsICustomerManagementAPI",
    "DocumentationComments": {},
    "BaseTypes": [
      "WebApp.RESTClients.ICustomerManagementAPI"
    ],
    "Modifiers": 32772,
    "Attributes": [
      {
        "Type": "System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute",
        "Name": "global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage"
      },
      {
        "Type": "System.Diagnostics.DebuggerNonUserCodeAttribute",
        "Name": "global::System.Diagnostics.DebuggerNonUserCode"
      },
      {
        "Type": "RefitInternalGenerated.PreserveAttribute",
        "Name": "global::RefitInternalGenerated.PreserveAttribute"
      },
      {
        "Type": "System.Reflection.ObfuscationAttribute",
        "Name": "global::System.Reflection.Obfuscation",
        "Arguments": [
          {
            "Name": "Exclude",
            "Type": "bool",
            "Value": "true"
          }
        ]
      },
      {
        "Type": "System.ComponentModel.EditorBrowsableAttribute",
        "Name": "global::System.ComponentModel.EditorBrowsable",
        "Arguments": [
          {
            "Name": "state",
            "Type": "System.ComponentModel.EditorBrowsableState",
            "Value": "global::System.ComponentModel.EditorBrowsableState.Never"
          }
        ]
      }
    ],
    "Fields": [
      {
        "Type": "Refit.IRequestBuilder",
        "Name": "requestBuilder",
        "Modifiers": 132
      },
      {
        "Type": "System.Type[]",
        "Initializer": "new global::System.Type[] { typeof(string) }",
        "Name": "______typeParameters",
        "Modifiers": 148
      },
      {
        "Type": "System.Type[]",
        "Initializer": "new global::System.Type[] { typeof(global::Pitstop.WebApp.Commands.RegisterCustomer) }",
        "Name": "______typeParameters0",
        "Modifiers": 148
      },
      {
        "Type": "System.Type[]",
        "Initializer": "new global::System.Type[] { typeof(string) }",
        "Name": "______typeParameters1",
        "Modifiers": 148
      },
      {
        "Type": "System.Type[]",
        "Initializer": "new global::System.Type[] { typeof(global::Pitstop.WebApp.Commands.RegisterCustomer) }",
        "Name": "______typeParameters2",
        "Modifiers": 148
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Net.Http.HttpClient",
            "Name": "client"
          },
          {
            "Type": "Refit.IRequestBuilder",
            "Name": "requestBuilder"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Client",
            "Operator": "=",
            "Right": "client"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "this.requestBuilder",
            "Operator": "=",
            "Right": "requestBuilder"
          }
        ],
        "Name": "WebAppRESTClientsICustomerManagementAPI",
        "Modifiers": 2,
        "DocumentationComments": {}
      }
    ],
    "Properties": [
      {
        "Type": "System.Net.Http.HttpClient",
        "Name": "Client",
        "Modifiers": 2,
        "DocumentationComments": {}
      }
    ],
    "Methods": [
      {
        "Name": "GetCustomers",
        "Modifiers": 258,
        "DocumentationComments": {},
        "ReturnType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.List\u003CPitstop.WebApp.Models.Customer\u003E\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Array",
            "Name": "Empty\u003Cobject\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.IRequestBuilder",
            "Name": "BuildRestResultFuncForMethod",
            "Arguments": [
              {
                "Type": "string",
                "Text": "GetCustomers"
              },
              {
                "Type": "System.Type[]",
                "Text": "global::System.Array.Empty\u003Cglobal::System.Type\u003E()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Array",
            "Name": "Empty\u003Cglobal::System.Type\u003E"
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await ((global::System.Threading.Tasks.Task\u003Cglobal::System.Collections.Generic.List\u003Cglobal::Pitstop.WebApp.Models.Customer\u003E\u003E)______func(this.Client, ______arguments)).ConfigureAwait(false)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.List\u003CPitstop.WebApp.Models.Customer\u003E\u003E",
            "Name": "ConfigureAwait",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.Implementation.Generated.WebAppRESTClientsICustomerManagementAPI.GetCustomers()",
            "Name": "______func",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "this.Client"
              },
              {
                "Type": "object[]",
                "Text": "______arguments"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "@customerId"
          }
        ],
        "Name": "GetCustomerById",
        "Modifiers": 258,
        "DocumentationComments": {},
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.Customer\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.IRequestBuilder",
            "Name": "BuildRestResultFuncForMethod",
            "Arguments": [
              {
                "Type": "string",
                "Text": "GetCustomerById"
              },
              {
                "Type": "System.Type[]",
                "Text": "______typeParameters"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await ((global::System.Threading.Tasks.Task\u003Cglobal::Pitstop.WebApp.Models.Customer\u003E)______func(this.Client, ______arguments)).ConfigureAwait(false)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.Customer\u003E",
            "Name": "ConfigureAwait",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.Implementation.Generated.WebAppRESTClientsICustomerManagementAPI.GetCustomerById(string)",
            "Name": "______func",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "this.Client"
              },
              {
                "Type": "object[]",
                "Text": "______arguments"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WebApp.Commands.RegisterCustomer",
            "Name": "@command"
          }
        ],
        "Name": "RegisterCustomer",
        "Modifiers": 258,
        "DocumentationComments": {},
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.IRequestBuilder",
            "Name": "BuildRestResultFuncForMethod",
            "Arguments": [
              {
                "Type": "string",
                "Text": "RegisterCustomer"
              },
              {
                "Type": "System.Type[]",
                "Text": "______typeParameters0"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task",
            "Name": "ConfigureAwait",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.Implementation.Generated.WebAppRESTClientsICustomerManagementAPI.RegisterCustomer(Pitstop.WebApp.Commands.RegisterCustomer)",
            "Name": "______func",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "this.Client"
              },
              {
                "Type": "object[]",
                "Text": "______arguments"
              }
            ]
          }
        ]
      },
      {
        "Name": "GetCustomers",
        "Modifiers": 260,
        "DocumentationComments": {},
        "ReturnType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.List\u003CPitstop.WebApp.Models.Customer\u003E\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Array",
            "Name": "Empty\u003Cobject\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.IRequestBuilder",
            "Name": "BuildRestResultFuncForMethod",
            "Arguments": [
              {
                "Type": "string",
                "Text": "GetCustomers"
              },
              {
                "Type": "System.Type[]",
                "Text": "global::System.Array.Empty\u003Cglobal::System.Type\u003E()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Array",
            "Name": "Empty\u003Cglobal::System.Type\u003E"
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await ((global::System.Threading.Tasks.Task\u003Cglobal::System.Collections.Generic.List\u003Cglobal::Pitstop.WebApp.Models.Customer\u003E\u003E)______func(this.Client, ______arguments)).ConfigureAwait(false)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.List\u003CPitstop.WebApp.Models.Customer\u003E\u003E",
            "Name": "ConfigureAwait",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.Implementation.Generated.WebAppRESTClientsICustomerManagementAPI.WebApp.RESTClients.ICustomerManagementAPI.GetCustomers()",
            "Name": "______func",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "this.Client"
              },
              {
                "Type": "object[]",
                "Text": "______arguments"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "@customerId"
          }
        ],
        "Name": "GetCustomerById",
        "Modifiers": 260,
        "DocumentationComments": {},
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.Customer\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.IRequestBuilder",
            "Name": "BuildRestResultFuncForMethod",
            "Arguments": [
              {
                "Type": "string",
                "Text": "GetCustomerById"
              },
              {
                "Type": "System.Type[]",
                "Text": "______typeParameters1"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await ((global::System.Threading.Tasks.Task\u003Cglobal::Pitstop.WebApp.Models.Customer\u003E)______func(this.Client, ______arguments)).ConfigureAwait(false)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.Customer\u003E",
            "Name": "ConfigureAwait",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.Implementation.Generated.WebAppRESTClientsICustomerManagementAPI.WebApp.RESTClients.ICustomerManagementAPI.GetCustomerById(string)",
            "Name": "______func",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "this.Client"
              },
              {
                "Type": "object[]",
                "Text": "______arguments"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WebApp.Commands.RegisterCustomer",
            "Name": "@command"
          }
        ],
        "Name": "RegisterCustomer",
        "Modifiers": 260,
        "DocumentationComments": {},
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.IRequestBuilder",
            "Name": "BuildRestResultFuncForMethod",
            "Arguments": [
              {
                "Type": "string",
                "Text": "RegisterCustomer"
              },
              {
                "Type": "System.Type[]",
                "Text": "______typeParameters2"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task",
            "Name": "ConfigureAwait",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.Implementation.Generated.WebAppRESTClientsICustomerManagementAPI.WebApp.RESTClients.ICustomerManagementAPI.RegisterCustomer(Pitstop.WebApp.Commands.RegisterCustomer)",
            "Name": "______func",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "this.Client"
              },
              {
                "Type": "object[]",
                "Text": "______arguments"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Refit.Implementation.Generated.WebAppRESTClientsIVehicleManagementAPI",
    "DocumentationComments": {},
    "BaseTypes": [
      "WebApp.RESTClients.IVehicleManagementAPI"
    ],
    "Modifiers": 32772,
    "Attributes": [
      {
        "Type": "System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute",
        "Name": "global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage"
      },
      {
        "Type": "System.Diagnostics.DebuggerNonUserCodeAttribute",
        "Name": "global::System.Diagnostics.DebuggerNonUserCode"
      },
      {
        "Type": "RefitInternalGenerated.PreserveAttribute",
        "Name": "global::RefitInternalGenerated.PreserveAttribute"
      },
      {
        "Type": "System.Reflection.ObfuscationAttribute",
        "Name": "global::System.Reflection.Obfuscation",
        "Arguments": [
          {
            "Name": "Exclude",
            "Type": "bool",
            "Value": "true"
          }
        ]
      },
      {
        "Type": "System.ComponentModel.EditorBrowsableAttribute",
        "Name": "global::System.ComponentModel.EditorBrowsable",
        "Arguments": [
          {
            "Name": "state",
            "Type": "System.ComponentModel.EditorBrowsableState",
            "Value": "global::System.ComponentModel.EditorBrowsableState.Never"
          }
        ]
      }
    ],
    "Fields": [
      {
        "Type": "Refit.IRequestBuilder",
        "Name": "requestBuilder",
        "Modifiers": 132
      },
      {
        "Type": "System.Type[]",
        "Initializer": "new global::System.Type[] { typeof(string) }",
        "Name": "______typeParameters",
        "Modifiers": 148
      },
      {
        "Type": "System.Type[]",
        "Initializer": "new global::System.Type[] { typeof(global::Pitstop.WebApp.Commands.RegisterVehicle) }",
        "Name": "______typeParameters0",
        "Modifiers": 148
      },
      {
        "Type": "System.Type[]",
        "Initializer": "new global::System.Type[] { typeof(string) }",
        "Name": "______typeParameters1",
        "Modifiers": 148
      },
      {
        "Type": "System.Type[]",
        "Initializer": "new global::System.Type[] { typeof(global::Pitstop.WebApp.Commands.RegisterVehicle) }",
        "Name": "______typeParameters2",
        "Modifiers": 148
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Net.Http.HttpClient",
            "Name": "client"
          },
          {
            "Type": "Refit.IRequestBuilder",
            "Name": "requestBuilder"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Client",
            "Operator": "=",
            "Right": "client"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "this.requestBuilder",
            "Operator": "=",
            "Right": "requestBuilder"
          }
        ],
        "Name": "WebAppRESTClientsIVehicleManagementAPI",
        "Modifiers": 2,
        "DocumentationComments": {}
      }
    ],
    "Properties": [
      {
        "Type": "System.Net.Http.HttpClient",
        "Name": "Client",
        "Modifiers": 2,
        "DocumentationComments": {}
      }
    ],
    "Methods": [
      {
        "Name": "GetVehicles",
        "Modifiers": 258,
        "DocumentationComments": {},
        "ReturnType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.List\u003CPitstop.WebApp.Models.Vehicle\u003E\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Array",
            "Name": "Empty\u003Cobject\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.IRequestBuilder",
            "Name": "BuildRestResultFuncForMethod",
            "Arguments": [
              {
                "Type": "string",
                "Text": "GetVehicles"
              },
              {
                "Type": "System.Type[]",
                "Text": "global::System.Array.Empty\u003Cglobal::System.Type\u003E()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Array",
            "Name": "Empty\u003Cglobal::System.Type\u003E"
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await ((global::System.Threading.Tasks.Task\u003Cglobal::System.Collections.Generic.List\u003Cglobal::Pitstop.WebApp.Models.Vehicle\u003E\u003E)______func(this.Client, ______arguments)).ConfigureAwait(false)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.List\u003CPitstop.WebApp.Models.Vehicle\u003E\u003E",
            "Name": "ConfigureAwait",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.Implementation.Generated.WebAppRESTClientsIVehicleManagementAPI.GetVehicles()",
            "Name": "______func",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "this.Client"
              },
              {
                "Type": "object[]",
                "Text": "______arguments"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "@licenseNumber"
          }
        ],
        "Name": "GetVehicleByLicenseNumber",
        "Modifiers": 258,
        "DocumentationComments": {},
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.Vehicle\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.IRequestBuilder",
            "Name": "BuildRestResultFuncForMethod",
            "Arguments": [
              {
                "Type": "string",
                "Text": "GetVehicleByLicenseNumber"
              },
              {
                "Type": "System.Type[]",
                "Text": "______typeParameters"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await ((global::System.Threading.Tasks.Task\u003Cglobal::Pitstop.WebApp.Models.Vehicle\u003E)______func(this.Client, ______arguments)).ConfigureAwait(false)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.Vehicle\u003E",
            "Name": "ConfigureAwait",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.Implementation.Generated.WebAppRESTClientsIVehicleManagementAPI.GetVehicleByLicenseNumber(string)",
            "Name": "______func",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "this.Client"
              },
              {
                "Type": "object[]",
                "Text": "______arguments"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WebApp.Commands.RegisterVehicle",
            "Name": "@command"
          }
        ],
        "Name": "RegisterVehicle",
        "Modifiers": 258,
        "DocumentationComments": {},
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.IRequestBuilder",
            "Name": "BuildRestResultFuncForMethod",
            "Arguments": [
              {
                "Type": "string",
                "Text": "RegisterVehicle"
              },
              {
                "Type": "System.Type[]",
                "Text": "______typeParameters0"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task",
            "Name": "ConfigureAwait",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.Implementation.Generated.WebAppRESTClientsIVehicleManagementAPI.RegisterVehicle(Pitstop.WebApp.Commands.RegisterVehicle)",
            "Name": "______func",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "this.Client"
              },
              {
                "Type": "object[]",
                "Text": "______arguments"
              }
            ]
          }
        ]
      },
      {
        "Name": "GetVehicles",
        "Modifiers": 260,
        "DocumentationComments": {},
        "ReturnType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.List\u003CPitstop.WebApp.Models.Vehicle\u003E\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Array",
            "Name": "Empty\u003Cobject\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.IRequestBuilder",
            "Name": "BuildRestResultFuncForMethod",
            "Arguments": [
              {
                "Type": "string",
                "Text": "GetVehicles"
              },
              {
                "Type": "System.Type[]",
                "Text": "global::System.Array.Empty\u003Cglobal::System.Type\u003E()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Array",
            "Name": "Empty\u003Cglobal::System.Type\u003E"
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await ((global::System.Threading.Tasks.Task\u003Cglobal::System.Collections.Generic.List\u003Cglobal::Pitstop.WebApp.Models.Vehicle\u003E\u003E)______func(this.Client, ______arguments)).ConfigureAwait(false)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.List\u003CPitstop.WebApp.Models.Vehicle\u003E\u003E",
            "Name": "ConfigureAwait",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.Implementation.Generated.WebAppRESTClientsIVehicleManagementAPI.WebApp.RESTClients.IVehicleManagementAPI.GetVehicles()",
            "Name": "______func",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "this.Client"
              },
              {
                "Type": "object[]",
                "Text": "______arguments"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "@licenseNumber"
          }
        ],
        "Name": "GetVehicleByLicenseNumber",
        "Modifiers": 260,
        "DocumentationComments": {},
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.Vehicle\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.IRequestBuilder",
            "Name": "BuildRestResultFuncForMethod",
            "Arguments": [
              {
                "Type": "string",
                "Text": "GetVehicleByLicenseNumber"
              },
              {
                "Type": "System.Type[]",
                "Text": "______typeParameters1"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await ((global::System.Threading.Tasks.Task\u003Cglobal::Pitstop.WebApp.Models.Vehicle\u003E)______func(this.Client, ______arguments)).ConfigureAwait(false)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.Vehicle\u003E",
            "Name": "ConfigureAwait",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.Implementation.Generated.WebAppRESTClientsIVehicleManagementAPI.WebApp.RESTClients.IVehicleManagementAPI.GetVehicleByLicenseNumber(string)",
            "Name": "______func",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "this.Client"
              },
              {
                "Type": "object[]",
                "Text": "______arguments"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WebApp.Commands.RegisterVehicle",
            "Name": "@command"
          }
        ],
        "Name": "RegisterVehicle",
        "Modifiers": 260,
        "DocumentationComments": {},
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.IRequestBuilder",
            "Name": "BuildRestResultFuncForMethod",
            "Arguments": [
              {
                "Type": "string",
                "Text": "RegisterVehicle"
              },
              {
                "Type": "System.Type[]",
                "Text": "______typeParameters2"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task",
            "Name": "ConfigureAwait",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.Implementation.Generated.WebAppRESTClientsIVehicleManagementAPI.WebApp.RESTClients.IVehicleManagementAPI.RegisterVehicle(Pitstop.WebApp.Commands.RegisterVehicle)",
            "Name": "______func",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "this.Client"
              },
              {
                "Type": "object[]",
                "Text": "______arguments"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "Refit.Implementation.Generated.WebAppRESTClientsIWorkshopManagementAPI",
    "DocumentationComments": {},
    "BaseTypes": [
      "WebApp.RESTClients.IWorkshopManagementAPI"
    ],
    "Modifiers": 32772,
    "Attributes": [
      {
        "Type": "System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute",
        "Name": "global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage"
      },
      {
        "Type": "System.Diagnostics.DebuggerNonUserCodeAttribute",
        "Name": "global::System.Diagnostics.DebuggerNonUserCode"
      },
      {
        "Type": "RefitInternalGenerated.PreserveAttribute",
        "Name": "global::RefitInternalGenerated.PreserveAttribute"
      },
      {
        "Type": "System.Reflection.ObfuscationAttribute",
        "Name": "global::System.Reflection.Obfuscation",
        "Arguments": [
          {
            "Name": "Exclude",
            "Type": "bool",
            "Value": "true"
          }
        ]
      },
      {
        "Type": "System.ComponentModel.EditorBrowsableAttribute",
        "Name": "global::System.ComponentModel.EditorBrowsable",
        "Arguments": [
          {
            "Name": "state",
            "Type": "System.ComponentModel.EditorBrowsableState",
            "Value": "global::System.ComponentModel.EditorBrowsableState.Never"
          }
        ]
      }
    ],
    "Fields": [
      {
        "Type": "Refit.IRequestBuilder",
        "Name": "requestBuilder",
        "Modifiers": 132
      },
      {
        "Type": "System.Type[]",
        "Initializer": "new global::System.Type[] { typeof(string) }",
        "Name": "______typeParameters",
        "Modifiers": 148
      },
      {
        "Type": "System.Type[]",
        "Initializer": "new global::System.Type[] { typeof(string), typeof(string) }",
        "Name": "______typeParameters0",
        "Modifiers": 148
      },
      {
        "Type": "System.Type[]",
        "Initializer": "new global::System.Type[] { typeof(string), typeof(global::Pitstop.WebApp.Commands.RegisterPlanning) }",
        "Name": "______typeParameters1",
        "Modifiers": 148
      },
      {
        "Type": "System.Type[]",
        "Initializer": "new global::System.Type[] { typeof(string), typeof(global::Pitstop.WebApp.Commands.PlanMaintenanceJob) }",
        "Name": "______typeParameters2",
        "Modifiers": 148
      },
      {
        "Type": "System.Type[]",
        "Initializer": "new global::System.Type[] { typeof(string), typeof(string), typeof(global::Pitstop.WebApp.Commands.FinishMaintenanceJob) }",
        "Name": "______typeParameters3",
        "Modifiers": 148
      },
      {
        "Type": "System.Type[]",
        "Initializer": "new global::System.Type[] { typeof(string) }",
        "Name": "______typeParameters4",
        "Modifiers": 148
      },
      {
        "Type": "System.Type[]",
        "Initializer": "new global::System.Type[] { typeof(string) }",
        "Name": "______typeParameters5",
        "Modifiers": 148
      },
      {
        "Type": "System.Type[]",
        "Initializer": "new global::System.Type[] { typeof(string) }",
        "Name": "______typeParameters6",
        "Modifiers": 148
      },
      {
        "Type": "System.Type[]",
        "Initializer": "new global::System.Type[] { typeof(string), typeof(string) }",
        "Name": "______typeParameters7",
        "Modifiers": 148
      },
      {
        "Type": "System.Type[]",
        "Initializer": "new global::System.Type[] { typeof(string), typeof(global::Pitstop.WebApp.Commands.RegisterPlanning) }",
        "Name": "______typeParameters8",
        "Modifiers": 148
      },
      {
        "Type": "System.Type[]",
        "Initializer": "new global::System.Type[] { typeof(string), typeof(global::Pitstop.WebApp.Commands.PlanMaintenanceJob) }",
        "Name": "______typeParameters9",
        "Modifiers": 148
      },
      {
        "Type": "System.Type[]",
        "Initializer": "new global::System.Type[] { typeof(string), typeof(string), typeof(global::Pitstop.WebApp.Commands.FinishMaintenanceJob) }",
        "Name": "______typeParameters10",
        "Modifiers": 148
      },
      {
        "Type": "System.Type[]",
        "Initializer": "new global::System.Type[] { typeof(string) }",
        "Name": "______typeParameters11",
        "Modifiers": 148
      },
      {
        "Type": "System.Type[]",
        "Initializer": "new global::System.Type[] { typeof(string) }",
        "Name": "______typeParameters12",
        "Modifiers": 148
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Net.Http.HttpClient",
            "Name": "client"
          },
          {
            "Type": "Refit.IRequestBuilder",
            "Name": "requestBuilder"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "Client",
            "Operator": "=",
            "Right": "client"
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "this.requestBuilder",
            "Operator": "=",
            "Right": "requestBuilder"
          }
        ],
        "Name": "WebAppRESTClientsIWorkshopManagementAPI",
        "Modifiers": 2,
        "DocumentationComments": {}
      }
    ],
    "Properties": [
      {
        "Type": "System.Net.Http.HttpClient",
        "Name": "Client",
        "Modifiers": 2,
        "DocumentationComments": {}
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "@planningDate"
          }
        ],
        "Name": "GetWorkshopPlanning",
        "Modifiers": 258,
        "DocumentationComments": {},
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.WorkshopPlanning\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.IRequestBuilder",
            "Name": "BuildRestResultFuncForMethod",
            "Arguments": [
              {
                "Type": "string",
                "Text": "GetWorkshopPlanning"
              },
              {
                "Type": "System.Type[]",
                "Text": "______typeParameters"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await ((global::System.Threading.Tasks.Task\u003Cglobal::Pitstop.WebApp.Models.WorkshopPlanning\u003E)______func(this.Client, ______arguments)).ConfigureAwait(false)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.WorkshopPlanning\u003E",
            "Name": "ConfigureAwait",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.Implementation.Generated.WebAppRESTClientsIWorkshopManagementAPI.GetWorkshopPlanning(string)",
            "Name": "______func",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "this.Client"
              },
              {
                "Type": "object[]",
                "Text": "______arguments"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "@planningDate"
          },
          {
            "Type": "string",
            "Name": "@jobId"
          }
        ],
        "Name": "GetMaintenanceJob",
        "Modifiers": 258,
        "DocumentationComments": {},
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.MaintenanceJob\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.IRequestBuilder",
            "Name": "BuildRestResultFuncForMethod",
            "Arguments": [
              {
                "Type": "string",
                "Text": "GetMaintenanceJob"
              },
              {
                "Type": "System.Type[]",
                "Text": "______typeParameters0"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await ((global::System.Threading.Tasks.Task\u003Cglobal::Pitstop.WebApp.Models.MaintenanceJob\u003E)______func(this.Client, ______arguments)).ConfigureAwait(false)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.MaintenanceJob\u003E",
            "Name": "ConfigureAwait",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.Implementation.Generated.WebAppRESTClientsIWorkshopManagementAPI.GetMaintenanceJob(string, string)",
            "Name": "______func",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "this.Client"
              },
              {
                "Type": "object[]",
                "Text": "______arguments"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "@planningDate"
          },
          {
            "Type": "Pitstop.WebApp.Commands.RegisterPlanning",
            "Name": "@cmd"
          }
        ],
        "Name": "RegisterPlanning",
        "Modifiers": 258,
        "DocumentationComments": {},
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.IRequestBuilder",
            "Name": "BuildRestResultFuncForMethod",
            "Arguments": [
              {
                "Type": "string",
                "Text": "RegisterPlanning"
              },
              {
                "Type": "System.Type[]",
                "Text": "______typeParameters1"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task",
            "Name": "ConfigureAwait",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.Implementation.Generated.WebAppRESTClientsIWorkshopManagementAPI.RegisterPlanning(string, Pitstop.WebApp.Commands.RegisterPlanning)",
            "Name": "______func",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "this.Client"
              },
              {
                "Type": "object[]",
                "Text": "______arguments"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "@planningDate"
          },
          {
            "Type": "Pitstop.WebApp.Commands.PlanMaintenanceJob",
            "Name": "@cmd"
          }
        ],
        "Name": "PlanMaintenanceJob",
        "Modifiers": 258,
        "DocumentationComments": {},
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.IRequestBuilder",
            "Name": "BuildRestResultFuncForMethod",
            "Arguments": [
              {
                "Type": "string",
                "Text": "PlanMaintenanceJob"
              },
              {
                "Type": "System.Type[]",
                "Text": "______typeParameters2"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task",
            "Name": "ConfigureAwait",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.Implementation.Generated.WebAppRESTClientsIWorkshopManagementAPI.PlanMaintenanceJob(string, Pitstop.WebApp.Commands.PlanMaintenanceJob)",
            "Name": "______func",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "this.Client"
              },
              {
                "Type": "object[]",
                "Text": "______arguments"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "@planningDate"
          },
          {
            "Type": "string",
            "Name": "@jobId"
          },
          {
            "Type": "Pitstop.WebApp.Commands.FinishMaintenanceJob",
            "Name": "@cmd"
          }
        ],
        "Name": "FinishMaintenanceJob",
        "Modifiers": 258,
        "DocumentationComments": {},
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.IRequestBuilder",
            "Name": "BuildRestResultFuncForMethod",
            "Arguments": [
              {
                "Type": "string",
                "Text": "FinishMaintenanceJob"
              },
              {
                "Type": "System.Type[]",
                "Text": "______typeParameters3"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task",
            "Name": "ConfigureAwait",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.Implementation.Generated.WebAppRESTClientsIWorkshopManagementAPI.FinishMaintenanceJob(string, string, Pitstop.WebApp.Commands.FinishMaintenanceJob)",
            "Name": "______func",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "this.Client"
              },
              {
                "Type": "object[]",
                "Text": "______arguments"
              }
            ]
          }
        ]
      },
      {
        "Name": "GetCustomers",
        "Modifiers": 258,
        "DocumentationComments": {},
        "ReturnType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.List\u003CPitstop.WebApp.Models.Customer\u003E\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Array",
            "Name": "Empty\u003Cobject\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.IRequestBuilder",
            "Name": "BuildRestResultFuncForMethod",
            "Arguments": [
              {
                "Type": "string",
                "Text": "GetCustomers"
              },
              {
                "Type": "System.Type[]",
                "Text": "global::System.Array.Empty\u003Cglobal::System.Type\u003E()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Array",
            "Name": "Empty\u003Cglobal::System.Type\u003E"
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await ((global::System.Threading.Tasks.Task\u003Cglobal::System.Collections.Generic.List\u003Cglobal::Pitstop.WebApp.Models.Customer\u003E\u003E)______func(this.Client, ______arguments)).ConfigureAwait(false)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.List\u003CPitstop.WebApp.Models.Customer\u003E\u003E",
            "Name": "ConfigureAwait",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.Implementation.Generated.WebAppRESTClientsIWorkshopManagementAPI.GetCustomers()",
            "Name": "______func",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "this.Client"
              },
              {
                "Type": "object[]",
                "Text": "______arguments"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "@id"
          }
        ],
        "Name": "GetCustomerById",
        "Modifiers": 258,
        "DocumentationComments": {},
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.Customer\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.IRequestBuilder",
            "Name": "BuildRestResultFuncForMethod",
            "Arguments": [
              {
                "Type": "string",
                "Text": "GetCustomerById"
              },
              {
                "Type": "System.Type[]",
                "Text": "______typeParameters4"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await ((global::System.Threading.Tasks.Task\u003Cglobal::Pitstop.WebApp.Models.Customer\u003E)______func(this.Client, ______arguments)).ConfigureAwait(false)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.Customer\u003E",
            "Name": "ConfigureAwait",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.Implementation.Generated.WebAppRESTClientsIWorkshopManagementAPI.GetCustomerById(string)",
            "Name": "______func",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "this.Client"
              },
              {
                "Type": "object[]",
                "Text": "______arguments"
              }
            ]
          }
        ]
      },
      {
        "Name": "GetVehicles",
        "Modifiers": 258,
        "DocumentationComments": {},
        "ReturnType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.List\u003CPitstop.WebApp.Models.Vehicle\u003E\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Array",
            "Name": "Empty\u003Cobject\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.IRequestBuilder",
            "Name": "BuildRestResultFuncForMethod",
            "Arguments": [
              {
                "Type": "string",
                "Text": "GetVehicles"
              },
              {
                "Type": "System.Type[]",
                "Text": "global::System.Array.Empty\u003Cglobal::System.Type\u003E()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Array",
            "Name": "Empty\u003Cglobal::System.Type\u003E"
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await ((global::System.Threading.Tasks.Task\u003Cglobal::System.Collections.Generic.List\u003Cglobal::Pitstop.WebApp.Models.Vehicle\u003E\u003E)______func(this.Client, ______arguments)).ConfigureAwait(false)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.List\u003CPitstop.WebApp.Models.Vehicle\u003E\u003E",
            "Name": "ConfigureAwait",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.Implementation.Generated.WebAppRESTClientsIWorkshopManagementAPI.GetVehicles()",
            "Name": "______func",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "this.Client"
              },
              {
                "Type": "object[]",
                "Text": "______arguments"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "@licenseNumber"
          }
        ],
        "Name": "GetVehicleByLicenseNumber",
        "Modifiers": 258,
        "DocumentationComments": {},
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.Vehicle\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.IRequestBuilder",
            "Name": "BuildRestResultFuncForMethod",
            "Arguments": [
              {
                "Type": "string",
                "Text": "GetVehicleByLicenseNumber"
              },
              {
                "Type": "System.Type[]",
                "Text": "______typeParameters5"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await ((global::System.Threading.Tasks.Task\u003Cglobal::Pitstop.WebApp.Models.Vehicle\u003E)______func(this.Client, ______arguments)).ConfigureAwait(false)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.Vehicle\u003E",
            "Name": "ConfigureAwait",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.Implementation.Generated.WebAppRESTClientsIWorkshopManagementAPI.GetVehicleByLicenseNumber(string)",
            "Name": "______func",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "this.Client"
              },
              {
                "Type": "object[]",
                "Text": "______arguments"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "@planningDate"
          }
        ],
        "Name": "GetWorkshopPlanning",
        "Modifiers": 260,
        "DocumentationComments": {},
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.WorkshopPlanning\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.IRequestBuilder",
            "Name": "BuildRestResultFuncForMethod",
            "Arguments": [
              {
                "Type": "string",
                "Text": "GetWorkshopPlanning"
              },
              {
                "Type": "System.Type[]",
                "Text": "______typeParameters6"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await ((global::System.Threading.Tasks.Task\u003Cglobal::Pitstop.WebApp.Models.WorkshopPlanning\u003E)______func(this.Client, ______arguments)).ConfigureAwait(false)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.WorkshopPlanning\u003E",
            "Name": "ConfigureAwait",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.Implementation.Generated.WebAppRESTClientsIWorkshopManagementAPI.WebApp.RESTClients.IWorkshopManagementAPI.GetWorkshopPlanning(string)",
            "Name": "______func",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "this.Client"
              },
              {
                "Type": "object[]",
                "Text": "______arguments"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "@planningDate"
          },
          {
            "Type": "string",
            "Name": "@jobId"
          }
        ],
        "Name": "GetMaintenanceJob",
        "Modifiers": 260,
        "DocumentationComments": {},
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.MaintenanceJob\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.IRequestBuilder",
            "Name": "BuildRestResultFuncForMethod",
            "Arguments": [
              {
                "Type": "string",
                "Text": "GetMaintenanceJob"
              },
              {
                "Type": "System.Type[]",
                "Text": "______typeParameters7"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await ((global::System.Threading.Tasks.Task\u003Cglobal::Pitstop.WebApp.Models.MaintenanceJob\u003E)______func(this.Client, ______arguments)).ConfigureAwait(false)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.MaintenanceJob\u003E",
            "Name": "ConfigureAwait",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.Implementation.Generated.WebAppRESTClientsIWorkshopManagementAPI.WebApp.RESTClients.IWorkshopManagementAPI.GetMaintenanceJob(string, string)",
            "Name": "______func",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "this.Client"
              },
              {
                "Type": "object[]",
                "Text": "______arguments"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "@planningDate"
          },
          {
            "Type": "Pitstop.WebApp.Commands.RegisterPlanning",
            "Name": "@cmd"
          }
        ],
        "Name": "RegisterPlanning",
        "Modifiers": 260,
        "DocumentationComments": {},
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.IRequestBuilder",
            "Name": "BuildRestResultFuncForMethod",
            "Arguments": [
              {
                "Type": "string",
                "Text": "RegisterPlanning"
              },
              {
                "Type": "System.Type[]",
                "Text": "______typeParameters8"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task",
            "Name": "ConfigureAwait",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.Implementation.Generated.WebAppRESTClientsIWorkshopManagementAPI.WebApp.RESTClients.IWorkshopManagementAPI.RegisterPlanning(string, Pitstop.WebApp.Commands.RegisterPlanning)",
            "Name": "______func",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "this.Client"
              },
              {
                "Type": "object[]",
                "Text": "______arguments"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "@planningDate"
          },
          {
            "Type": "Pitstop.WebApp.Commands.PlanMaintenanceJob",
            "Name": "@cmd"
          }
        ],
        "Name": "PlanMaintenanceJob",
        "Modifiers": 260,
        "DocumentationComments": {},
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.IRequestBuilder",
            "Name": "BuildRestResultFuncForMethod",
            "Arguments": [
              {
                "Type": "string",
                "Text": "PlanMaintenanceJob"
              },
              {
                "Type": "System.Type[]",
                "Text": "______typeParameters9"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task",
            "Name": "ConfigureAwait",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.Implementation.Generated.WebAppRESTClientsIWorkshopManagementAPI.WebApp.RESTClients.IWorkshopManagementAPI.PlanMaintenanceJob(string, Pitstop.WebApp.Commands.PlanMaintenanceJob)",
            "Name": "______func",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "this.Client"
              },
              {
                "Type": "object[]",
                "Text": "______arguments"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "@planningDate"
          },
          {
            "Type": "string",
            "Name": "@jobId"
          },
          {
            "Type": "Pitstop.WebApp.Commands.FinishMaintenanceJob",
            "Name": "@cmd"
          }
        ],
        "Name": "FinishMaintenanceJob",
        "Modifiers": 260,
        "DocumentationComments": {},
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.IRequestBuilder",
            "Name": "BuildRestResultFuncForMethod",
            "Arguments": [
              {
                "Type": "string",
                "Text": "FinishMaintenanceJob"
              },
              {
                "Type": "System.Type[]",
                "Text": "______typeParameters10"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task",
            "Name": "ConfigureAwait",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.Implementation.Generated.WebAppRESTClientsIWorkshopManagementAPI.WebApp.RESTClients.IWorkshopManagementAPI.FinishMaintenanceJob(string, string, Pitstop.WebApp.Commands.FinishMaintenanceJob)",
            "Name": "______func",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "this.Client"
              },
              {
                "Type": "object[]",
                "Text": "______arguments"
              }
            ]
          }
        ]
      },
      {
        "Name": "GetCustomers",
        "Modifiers": 260,
        "DocumentationComments": {},
        "ReturnType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.List\u003CPitstop.WebApp.Models.Customer\u003E\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Array",
            "Name": "Empty\u003Cobject\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.IRequestBuilder",
            "Name": "BuildRestResultFuncForMethod",
            "Arguments": [
              {
                "Type": "string",
                "Text": "GetCustomers"
              },
              {
                "Type": "System.Type[]",
                "Text": "global::System.Array.Empty\u003Cglobal::System.Type\u003E()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Array",
            "Name": "Empty\u003Cglobal::System.Type\u003E"
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await ((global::System.Threading.Tasks.Task\u003Cglobal::System.Collections.Generic.List\u003Cglobal::Pitstop.WebApp.Models.Customer\u003E\u003E)______func(this.Client, ______arguments)).ConfigureAwait(false)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.List\u003CPitstop.WebApp.Models.Customer\u003E\u003E",
            "Name": "ConfigureAwait",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.Implementation.Generated.WebAppRESTClientsIWorkshopManagementAPI.WebApp.RESTClients.IWorkshopManagementAPI.GetCustomers()",
            "Name": "______func",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "this.Client"
              },
              {
                "Type": "object[]",
                "Text": "______arguments"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "@id"
          }
        ],
        "Name": "GetCustomerById",
        "Modifiers": 260,
        "DocumentationComments": {},
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.Customer\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.IRequestBuilder",
            "Name": "BuildRestResultFuncForMethod",
            "Arguments": [
              {
                "Type": "string",
                "Text": "GetCustomerById"
              },
              {
                "Type": "System.Type[]",
                "Text": "______typeParameters11"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await ((global::System.Threading.Tasks.Task\u003Cglobal::Pitstop.WebApp.Models.Customer\u003E)______func(this.Client, ______arguments)).ConfigureAwait(false)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.Customer\u003E",
            "Name": "ConfigureAwait",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.Implementation.Generated.WebAppRESTClientsIWorkshopManagementAPI.WebApp.RESTClients.IWorkshopManagementAPI.GetCustomerById(string)",
            "Name": "______func",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "this.Client"
              },
              {
                "Type": "object[]",
                "Text": "______arguments"
              }
            ]
          }
        ]
      },
      {
        "Name": "GetVehicles",
        "Modifiers": 260,
        "DocumentationComments": {},
        "ReturnType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.List\u003CPitstop.WebApp.Models.Vehicle\u003E\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Array",
            "Name": "Empty\u003Cobject\u003E"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.IRequestBuilder",
            "Name": "BuildRestResultFuncForMethod",
            "Arguments": [
              {
                "Type": "string",
                "Text": "GetVehicles"
              },
              {
                "Type": "System.Type[]",
                "Text": "global::System.Array.Empty\u003Cglobal::System.Type\u003E()"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Array",
            "Name": "Empty\u003Cglobal::System.Type\u003E"
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await ((global::System.Threading.Tasks.Task\u003Cglobal::System.Collections.Generic.List\u003Cglobal::Pitstop.WebApp.Models.Vehicle\u003E\u003E)______func(this.Client, ______arguments)).ConfigureAwait(false)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.List\u003CPitstop.WebApp.Models.Vehicle\u003E\u003E",
            "Name": "ConfigureAwait",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.Implementation.Generated.WebAppRESTClientsIWorkshopManagementAPI.WebApp.RESTClients.IWorkshopManagementAPI.GetVehicles()",
            "Name": "______func",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "this.Client"
              },
              {
                "Type": "object[]",
                "Text": "______arguments"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "@licenseNumber"
          }
        ],
        "Name": "GetVehicleByLicenseNumber",
        "Modifiers": 260,
        "DocumentationComments": {},
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.Vehicle\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.IRequestBuilder",
            "Name": "BuildRestResultFuncForMethod",
            "Arguments": [
              {
                "Type": "string",
                "Text": "GetVehicleByLicenseNumber"
              },
              {
                "Type": "System.Type[]",
                "Text": "______typeParameters12"
              }
            ]
          },
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await ((global::System.Threading.Tasks.Task\u003Cglobal::Pitstop.WebApp.Models.Vehicle\u003E)______func(this.Client, ______arguments)).ConfigureAwait(false)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.Vehicle\u003E",
            "Name": "ConfigureAwait",
            "Arguments": [
              {
                "Type": "bool",
                "Text": "false"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.Implementation.Generated.WebAppRESTClientsIWorkshopManagementAPI.WebApp.RESTClients.IWorkshopManagementAPI.GetVehicleByLicenseNumber(string)",
            "Name": "______func",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "this.Client"
              },
              {
                "Type": "object[]",
                "Text": "______arguments"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "RefitInternalGenerated.PreserveAttribute",
    "BaseTypes": [
      "System.Attribute"
    ],
    "Modifiers": 1025,
    "Attributes": [
      {
        "Type": "System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute",
        "Name": "global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage"
      },
      {
        "Type": "System.ComponentModel.EditorBrowsableAttribute",
        "Name": "global::System.ComponentModel.EditorBrowsable",
        "Arguments": [
          {
            "Name": "state",
            "Type": "System.ComponentModel.EditorBrowsableState",
            "Value": "global::System.ComponentModel.EditorBrowsableState.Never"
          }
        ]
      },
      {
        "Type": "System.AttributeUsageAttribute",
        "Name": "global::System.AttributeUsage",
        "Arguments": [
          {
            "Name": "validOn",
            "Type": "System.AttributeTargets",
            "Value": "global::System.AttributeTargets.Class | global::System.AttributeTargets.Struct | global::System.AttributeTargets.Enum | global::System.AttributeTargets.Constructor | global::System.AttributeTargets.Method | global::System.AttributeTargets.Property | global::System.AttributeTargets.Field | global::System.AttributeTargets.Event | global::System.AttributeTargets.Interface | global::System.AttributeTargets.Delegate"
          }
        ]
      }
    ],
    "Fields": [
      {
        "Type": "bool",
        "Name": "AllMembers",
        "Modifiers": 2
      },
      {
        "Type": "bool",
        "Name": "Conditional",
        "Modifiers": 2
      }
    ]
  },
  {
    "FullName": "WebApp.RESTClients.CustomerManagementAPI",
    "BaseTypes": [
      "WebApp.RESTClients.ICustomerManagementAPI"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "WebApp.RESTClients.ICustomerManagementAPI",
        "Name": "_restClient"
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "Microsoft.Extensions.Configuration.IConfiguration",
            "Name": "config"
          },
          {
            "Type": "System.Net.Http.HttpClient",
            "Name": "httpClient"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.Extensions.Configuration.ConfigurationBinder",
            "Name": "GetValue\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "CustomerManagementAPI"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.Extensions.Configuration.IConfiguration",
            "Name": "GetSection",
            "Arguments": [
              {
                "Type": "string",
                "Text": "APIServiceLocations"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "httpClient.BaseAddress",
            "Operator": "=",
            "Right": "new Uri($\u0022http://{apiHostAndPort}/api\u0022)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Uri",
            "Name": "Uri",
            "Arguments": [
              {
                "Type": "string",
                "Text": "$\u0022http://{apiHostAndPort}/api\u0022"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_restClient",
            "Operator": "=",
            "Right": "RestService.For\u003CICustomerManagementAPI\u003E(\r\n            httpClient,\r\n            new RefitSettings\r\n            {\r\n                ContentSerializer = new NewtonsoftJsonContentSerializer()\r\n            })"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.RestService",
            "Name": "For\u003CICustomerManagementAPI\u003E",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "httpClient"
              },
              {
                "Type": "Refit.RefitSettings",
                "Text": "new RefitSettings { ContentSerializer = new NewtonsoftJsonContentSerializer() }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.RefitSettings",
            "Name": "RefitSettings",
            "Arguments": [
              {
                "Type": "Refit.IHttpContentSerializer",
                "Text": "ContentSerializer = new NewtonsoftJsonContentSerializer()"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "ContentSerializer",
            "Operator": "=",
            "Right": "new NewtonsoftJsonContentSerializer()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.NewtonsoftJsonContentSerializer",
            "Name": "NewtonsoftJsonContentSerializer"
          }
        ],
        "Name": "CustomerManagementAPI",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Name": "GetCustomers",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.List\u003CPitstop.WebApp.Models.Customer\u003E\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await _restClient.GetCustomers()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "WebApp.RESTClients.ICustomerManagementAPI",
            "Name": "GetCustomers"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "customerId",
            "Attributes": [
              {
                "Type": "Refit.AliasAsAttribute",
                "Name": "AliasAs",
                "Arguments": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Value": "id"
                  }
                ]
              }
            ]
          }
        ],
        "Name": "GetCustomerById",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.Customer\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await _restClient.GetCustomerById(customerId)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "WebApp.RESTClients.ICustomerManagementAPI",
            "Name": "GetCustomerById",
            "Arguments": [
              {
                "Type": "string",
                "Text": "customerId"
              }
            ]
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "ex.StatusCode == HttpStatusCode.NotFound",
                "Statements": [
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "null"
                  }
                ]
              },
              {}
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WebApp.Commands.RegisterCustomer",
            "Name": "command"
          }
        ],
        "Name": "RegisterCustomer",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "WebApp.RESTClients.ICustomerManagementAPI",
            "Name": "RegisterCustomer",
            "Arguments": [
              {
                "Type": "Pitstop.WebApp.Commands.RegisterCustomer",
                "Text": "command"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "Type": 1,
    "FullName": "WebApp.RESTClients.ICustomerManagementAPI",
    "Modifiers": 2,
    "Methods": [
      {
        "Name": "GetCustomers",
        "Attributes": [
          {
            "Type": "Refit.GetAttribute",
            "Name": "Get",
            "Arguments": [
              {
                "Name": "path",
                "Type": "string",
                "Value": "/customers"
              }
            ]
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.List\u003CPitstop.WebApp.Models.Customer\u003E\u003E"
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "customerId",
            "Attributes": [
              {
                "Type": "Refit.AliasAsAttribute",
                "Name": "AliasAs",
                "Arguments": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Value": "id"
                  }
                ]
              }
            ]
          }
        ],
        "Name": "GetCustomerById",
        "Attributes": [
          {
            "Type": "Refit.GetAttribute",
            "Name": "Get",
            "Arguments": [
              {
                "Name": "path",
                "Type": "string",
                "Value": "/customers/{id}"
              }
            ]
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.Customer\u003E"
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WebApp.Commands.RegisterCustomer",
            "Name": "command"
          }
        ],
        "Name": "RegisterCustomer",
        "Attributes": [
          {
            "Type": "Refit.PostAttribute",
            "Name": "Post",
            "Arguments": [
              {
                "Name": "path",
                "Type": "string",
                "Value": "/customers"
              }
            ]
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task"
      }
    ]
  },
  {
    "Type": 1,
    "FullName": "WebApp.RESTClients.IVehicleManagementAPI",
    "Modifiers": 2,
    "Methods": [
      {
        "Name": "GetVehicles",
        "Attributes": [
          {
            "Type": "Refit.GetAttribute",
            "Name": "Get",
            "Arguments": [
              {
                "Name": "path",
                "Type": "string",
                "Value": "/vehicles"
              }
            ]
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.List\u003CPitstop.WebApp.Models.Vehicle\u003E\u003E"
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "licenseNumber",
            "Attributes": [
              {
                "Type": "Refit.AliasAsAttribute",
                "Name": "AliasAs",
                "Arguments": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Value": "id"
                  }
                ]
              }
            ]
          }
        ],
        "Name": "GetVehicleByLicenseNumber",
        "Attributes": [
          {
            "Type": "Refit.GetAttribute",
            "Name": "Get",
            "Arguments": [
              {
                "Name": "path",
                "Type": "string",
                "Value": "/vehicles/{id}"
              }
            ]
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.Vehicle\u003E"
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WebApp.Commands.RegisterVehicle",
            "Name": "command"
          }
        ],
        "Name": "RegisterVehicle",
        "Attributes": [
          {
            "Type": "Refit.PostAttribute",
            "Name": "Post",
            "Arguments": [
              {
                "Name": "path",
                "Type": "string",
                "Value": "/vehicles"
              }
            ]
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task"
      }
    ]
  },
  {
    "Type": 1,
    "FullName": "WebApp.RESTClients.IWorkshopManagementAPI",
    "Modifiers": 2,
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "planningDate"
          }
        ],
        "Name": "GetWorkshopPlanning",
        "Attributes": [
          {
            "Type": "Refit.GetAttribute",
            "Name": "Get",
            "Arguments": [
              {
                "Name": "path",
                "Type": "string",
                "Value": "/workshopplanning/{planningDate}"
              }
            ]
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.WorkshopPlanning\u003E"
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "planningDate"
          },
          {
            "Type": "string",
            "Name": "jobId"
          }
        ],
        "Name": "GetMaintenanceJob",
        "Attributes": [
          {
            "Type": "Refit.GetAttribute",
            "Name": "Get",
            "Arguments": [
              {
                "Name": "path",
                "Type": "string",
                "Value": "/workshopplanning/{planningDate}/jobs/{jobId}"
              }
            ]
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.MaintenanceJob\u003E"
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "planningDate"
          },
          {
            "Type": "Pitstop.WebApp.Commands.RegisterPlanning",
            "Name": "cmd"
          }
        ],
        "Name": "RegisterPlanning",
        "Attributes": [
          {
            "Type": "Refit.PostAttribute",
            "Name": "Post",
            "Arguments": [
              {
                "Name": "path",
                "Type": "string",
                "Value": "/workshopplanning/{planningDate}"
              }
            ]
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task"
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "planningDate"
          },
          {
            "Type": "Pitstop.WebApp.Commands.PlanMaintenanceJob",
            "Name": "cmd"
          }
        ],
        "Name": "PlanMaintenanceJob",
        "Attributes": [
          {
            "Type": "Refit.PostAttribute",
            "Name": "Post",
            "Arguments": [
              {
                "Name": "path",
                "Type": "string",
                "Value": "/workshopplanning/{planningDate}/jobs"
              }
            ]
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task"
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "planningDate"
          },
          {
            "Type": "string",
            "Name": "jobId"
          },
          {
            "Type": "Pitstop.WebApp.Commands.FinishMaintenanceJob",
            "Name": "cmd"
          }
        ],
        "Name": "FinishMaintenanceJob",
        "Attributes": [
          {
            "Type": "Refit.PutAttribute",
            "Name": "Put",
            "Arguments": [
              {
                "Name": "path",
                "Type": "string",
                "Value": "/workshopplanning/{planningDate}/jobs/{jobId}/finish"
              }
            ]
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task"
      },
      {
        "Name": "GetCustomers",
        "Attributes": [
          {
            "Type": "Refit.GetAttribute",
            "Name": "Get",
            "Arguments": [
              {
                "Name": "path",
                "Type": "string",
                "Value": "/refdata/customers"
              }
            ]
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.List\u003CPitstop.WebApp.Models.Customer\u003E\u003E"
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "id"
          }
        ],
        "Name": "GetCustomerById",
        "Attributes": [
          {
            "Type": "Refit.GetAttribute",
            "Name": "Get",
            "Arguments": [
              {
                "Name": "path",
                "Type": "string",
                "Value": "/refdata/customers/{id}"
              }
            ]
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.Customer\u003E"
      },
      {
        "Name": "GetVehicles",
        "Attributes": [
          {
            "Type": "Refit.GetAttribute",
            "Name": "Get",
            "Arguments": [
              {
                "Name": "path",
                "Type": "string",
                "Value": "/refdata/vehicles"
              }
            ]
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.List\u003CPitstop.WebApp.Models.Vehicle\u003E\u003E"
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "licenseNumber",
            "Attributes": [
              {
                "Type": "Refit.AliasAsAttribute",
                "Name": "AliasAs",
                "Arguments": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Value": "id"
                  }
                ]
              }
            ]
          }
        ],
        "Name": "GetVehicleByLicenseNumber",
        "Attributes": [
          {
            "Type": "Refit.GetAttribute",
            "Name": "Get",
            "Arguments": [
              {
                "Name": "path",
                "Type": "string",
                "Value": "/refdata/vehicles/{id}"
              }
            ]
          }
        ],
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.Vehicle\u003E"
      }
    ]
  },
  {
    "FullName": "WebApp.RESTClients.VehicleManagementAPI",
    "BaseTypes": [
      "WebApp.RESTClients.IVehicleManagementAPI"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "WebApp.RESTClients.IVehicleManagementAPI",
        "Name": "_restClient"
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "Microsoft.Extensions.Configuration.IConfiguration",
            "Name": "config"
          },
          {
            "Type": "System.Net.Http.HttpClient",
            "Name": "httpClient"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.Extensions.Configuration.ConfigurationBinder",
            "Name": "GetValue\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "VehicleManagementAPI"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.Extensions.Configuration.IConfiguration",
            "Name": "GetSection",
            "Arguments": [
              {
                "Type": "string",
                "Text": "APIServiceLocations"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "httpClient.BaseAddress",
            "Operator": "=",
            "Right": "new Uri($\u0022http://{apiHostAndPort}/api\u0022)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Uri",
            "Name": "Uri",
            "Arguments": [
              {
                "Type": "string",
                "Text": "$\u0022http://{apiHostAndPort}/api\u0022"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_restClient",
            "Operator": "=",
            "Right": "RestService.For\u003CIVehicleManagementAPI\u003E(\r\n            httpClient,\r\n            new RefitSettings\r\n            {\r\n                ContentSerializer = new NewtonsoftJsonContentSerializer()\r\n            })"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.RestService",
            "Name": "For\u003CIVehicleManagementAPI\u003E",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "httpClient"
              },
              {
                "Type": "Refit.RefitSettings",
                "Text": "new RefitSettings { ContentSerializer = new NewtonsoftJsonContentSerializer() }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.RefitSettings",
            "Name": "RefitSettings",
            "Arguments": [
              {
                "Type": "Refit.IHttpContentSerializer",
                "Text": "ContentSerializer = new NewtonsoftJsonContentSerializer()"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "ContentSerializer",
            "Operator": "=",
            "Right": "new NewtonsoftJsonContentSerializer()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.NewtonsoftJsonContentSerializer",
            "Name": "NewtonsoftJsonContentSerializer"
          }
        ],
        "Name": "VehicleManagementAPI",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Name": "GetVehicles",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.List\u003CPitstop.WebApp.Models.Vehicle\u003E\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await _restClient.GetVehicles()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "WebApp.RESTClients.IVehicleManagementAPI",
            "Name": "GetVehicles"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "licenseNumber",
            "Attributes": [
              {
                "Type": "Refit.AliasAsAttribute",
                "Name": "AliasAs",
                "Arguments": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Value": "id"
                  }
                ]
              }
            ]
          }
        ],
        "Name": "GetVehicleByLicenseNumber",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.Vehicle\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await _restClient.GetVehicleByLicenseNumber(licenseNumber)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "WebApp.RESTClients.IVehicleManagementAPI",
            "Name": "GetVehicleByLicenseNumber",
            "Arguments": [
              {
                "Type": "string",
                "Text": "licenseNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "ex.StatusCode == HttpStatusCode.NotFound",
                "Statements": [
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "null"
                  }
                ]
              },
              {}
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "Pitstop.WebApp.Commands.RegisterVehicle",
            "Name": "command"
          }
        ],
        "Name": "RegisterVehicle",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "WebApp.RESTClients.IVehicleManagementAPI",
            "Name": "RegisterVehicle",
            "Arguments": [
              {
                "Type": "Pitstop.WebApp.Commands.RegisterVehicle",
                "Text": "command"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "WebApp.RESTClients.WorkshopManagementAPI",
    "BaseTypes": [
      "WebApp.RESTClients.IWorkshopManagementAPI"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "WebApp.RESTClients.IWorkshopManagementAPI",
        "Name": "_restClient"
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "Microsoft.Extensions.Configuration.IConfiguration",
            "Name": "config"
          },
          {
            "Type": "System.Net.Http.HttpClient",
            "Name": "httpClient"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.Extensions.Configuration.ConfigurationBinder",
            "Name": "GetValue\u003Cstring\u003E",
            "Arguments": [
              {
                "Type": "string",
                "Text": "WorkshopManagementAPI"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Microsoft.Extensions.Configuration.IConfiguration",
            "Name": "GetSection",
            "Arguments": [
              {
                "Type": "string",
                "Text": "APIServiceLocations"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "httpClient.BaseAddress",
            "Operator": "=",
            "Right": "new Uri($\u0022http://{apiHostAndPort}/api\u0022)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "System.Uri",
            "Name": "Uri",
            "Arguments": [
              {
                "Type": "string",
                "Text": "$\u0022http://{apiHostAndPort}/api\u0022"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "_restClient",
            "Operator": "=",
            "Right": "RestService.For\u003CIWorkshopManagementAPI\u003E(\r\n            httpClient,\r\n            new RefitSettings\r\n            {\r\n                ContentSerializer = new NewtonsoftJsonContentSerializer()\r\n            })"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.RestService",
            "Name": "For\u003CIWorkshopManagementAPI\u003E",
            "Arguments": [
              {
                "Type": "System.Net.Http.HttpClient",
                "Text": "httpClient"
              },
              {
                "Type": "Refit.RefitSettings",
                "Text": "new RefitSettings { ContentSerializer = new NewtonsoftJsonContentSerializer() }"
              }
            ]
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.RefitSettings",
            "Name": "RefitSettings",
            "Arguments": [
              {
                "Type": "Refit.IHttpContentSerializer",
                "Text": "ContentSerializer = new NewtonsoftJsonContentSerializer()"
              }
            ]
          },
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "ContentSerializer",
            "Operator": "=",
            "Right": "new NewtonsoftJsonContentSerializer()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "Refit.NewtonsoftJsonContentSerializer",
            "Name": "NewtonsoftJsonContentSerializer"
          }
        ],
        "Name": "WorkshopManagementAPI",
        "Modifiers": 2
      }
    ],
    "Methods": [
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "planningDate"
          }
        ],
        "Name": "GetWorkshopPlanning",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.WorkshopPlanning\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await _restClient.GetWorkshopPlanning(planningDate)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "WebApp.RESTClients.IWorkshopManagementAPI",
            "Name": "GetWorkshopPlanning",
            "Arguments": [
              {
                "Type": "string",
                "Text": "planningDate"
              }
            ]
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "ex.StatusCode == HttpStatusCode.NotFound",
                "Statements": [
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "null"
                  }
                ]
              },
              {}
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "planningDate"
          },
          {
            "Type": "string",
            "Name": "jobId"
          }
        ],
        "Name": "GetMaintenanceJob",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.MaintenanceJob\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await _restClient.GetMaintenanceJob(planningDate, jobId)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "WebApp.RESTClients.IWorkshopManagementAPI",
            "Name": "GetMaintenanceJob",
            "Arguments": [
              {
                "Type": "string",
                "Text": "planningDate"
              },
              {
                "Type": "string",
                "Text": "jobId"
              }
            ]
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "ex.StatusCode == HttpStatusCode.NotFound",
                "Statements": [
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "null"
                  }
                ]
              },
              {}
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "planningDate"
          },
          {
            "Type": "Pitstop.WebApp.Commands.RegisterPlanning",
            "Name": "cmd"
          }
        ],
        "Name": "RegisterPlanning",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "WebApp.RESTClients.IWorkshopManagementAPI",
            "Name": "RegisterPlanning",
            "Arguments": [
              {
                "Type": "string",
                "Text": "planningDate"
              },
              {
                "Type": "Pitstop.WebApp.Commands.RegisterPlanning",
                "Text": "cmd"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "planningDate"
          },
          {
            "Type": "Pitstop.WebApp.Commands.PlanMaintenanceJob",
            "Name": "cmd"
          }
        ],
        "Name": "PlanMaintenanceJob",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "WebApp.RESTClients.IWorkshopManagementAPI",
            "Name": "PlanMaintenanceJob",
            "Arguments": [
              {
                "Type": "string",
                "Text": "planningDate"
              },
              {
                "Type": "Pitstop.WebApp.Commands.PlanMaintenanceJob",
                "Text": "cmd"
              }
            ]
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "planningDate"
          },
          {
            "Type": "string",
            "Name": "jobId"
          },
          {
            "Type": "Pitstop.WebApp.Commands.FinishMaintenanceJob",
            "Name": "cmd"
          }
        ],
        "Name": "FinishMaintenanceJob",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task",
        "Statements": [
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "WebApp.RESTClients.IWorkshopManagementAPI",
            "Name": "FinishMaintenanceJob",
            "Arguments": [
              {
                "Type": "string",
                "Text": "planningDate"
              },
              {
                "Type": "string",
                "Text": "jobId"
              },
              {
                "Type": "Pitstop.WebApp.Commands.FinishMaintenanceJob",
                "Text": "cmd"
              }
            ]
          }
        ]
      },
      {
        "Name": "GetCustomers",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.List\u003CPitstop.WebApp.Models.Customer\u003E\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await _restClient.GetCustomers()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "WebApp.RESTClients.IWorkshopManagementAPI",
            "Name": "GetCustomers"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "id"
          }
        ],
        "Name": "GetCustomerById",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.Customer\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await _restClient.GetCustomerById(id)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "WebApp.RESTClients.IWorkshopManagementAPI",
            "Name": "GetCustomerById",
            "Arguments": [
              {
                "Type": "string",
                "Text": "id"
              }
            ]
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "ex.StatusCode == HttpStatusCode.NotFound",
                "Statements": [
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "null"
                  }
                ]
              },
              {}
            ]
          }
        ]
      },
      {
        "Name": "GetVehicles",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task\u003CSystem.Collections.Generic.List\u003CPitstop.WebApp.Models.Vehicle\u003E\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await _restClient.GetVehicles()"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "WebApp.RESTClients.IWorkshopManagementAPI",
            "Name": "GetVehicles"
          }
        ]
      },
      {
        "Parameters": [
          {
            "Type": "string",
            "Name": "licenseNumber",
            "Attributes": [
              {
                "Type": "Refit.AliasAsAttribute",
                "Name": "AliasAs",
                "Arguments": [
                  {
                    "Name": "name",
                    "Type": "string",
                    "Value": "id"
                  }
                ]
              }
            ]
          }
        ],
        "Name": "GetVehicleByLicenseNumber",
        "Modifiers": 258,
        "ReturnType": "System.Threading.Tasks.Task\u003CPitstop.WebApp.Models.Vehicle\u003E",
        "Statements": [
          {
            "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
            "Expression": "await _restClient.GetVehicleByLicenseNumber(licenseNumber)"
          },
          {
            "$type": "DendroDocs.InvocationDescription, DendroDocs.Shared",
            "ContainingType": "WebApp.RESTClients.IWorkshopManagementAPI",
            "Name": "GetVehicleByLicenseNumber",
            "Arguments": [
              {
                "Type": "string",
                "Text": "licenseNumber"
              }
            ]
          },
          {
            "$type": "DendroDocs.If, DendroDocs.Shared",
            "Sections": [
              {
                "Condition": "ex.StatusCode == HttpStatusCode.NotFound",
                "Statements": [
                  {
                    "$type": "DendroDocs.ReturnDescription, DendroDocs.Shared",
                    "Expression": "null"
                  }
                ]
              },
              {}
            ]
          }
        ]
      }
    ]
  },
  {
    "FullName": "WorkshopManagementAPI.Commands.RegisterPlanning",
    "BaseTypes": [
      "Pitstop.Infrastructure.Messaging.Command"
    ],
    "Modifiers": 2,
    "Fields": [
      {
        "Type": "System.DateTime",
        "Name": "PlanningDate",
        "Modifiers": 130
      }
    ],
    "Constructors": [
      {
        "Parameters": [
          {
            "Type": "System.Guid",
            "Name": "messageId"
          },
          {
            "Type": "System.DateTime",
            "Name": "planningDate"
          }
        ],
        "Statements": [
          {
            "$type": "DendroDocs.AssignmentDescription, DendroDocs.Shared",
            "Left": "PlanningDate",
            "Operator": "=",
            "Right": "planningDate"
          }
        ],
        "Name": "RegisterPlanning",
        "Modifiers": 2
      }
    ]
  }
]